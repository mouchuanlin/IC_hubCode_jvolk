

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Sep 17 16:36:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 1.45
    28                           ; Generated 16/11/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F26K22 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  0012FA                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _VERSION
    67  0012FA  32                 	db	50
    68  0012FB  30                 	db	48
    69  0012FC  32                 	db	50
    70  0012FD  30                 	db	48
    71  0012FE  00                 	db	0
    72                           
    73                           ;initializer for _waiting
    74  0012FF  01                 	db	1
    75                           
    76                           ;initializer for _toggleLED
    77  001300  01                 	db	1
    78                           
    79                           	psect	smallconst
    80  001000                     __psmallconst:
    81                           	opt stack 0
    82  001000  00                 	db	0
    83  001001                     init_modem_io_ok@F6760:
    84                           	opt stack 0
    85  001001  41                 	db	65
    86  001002  54                 	db	84
    87  001003  23                 	db	35
    88  001004  47                 	db	71
    89  001005  50                 	db	80
    90  001006  49                 	db	73
    91  001007  4F                 	db	79
    92  001008  3D                 	db	61
    93  001009  37                 	db	55
    94  00100A  2C                 	db	44
    95  00100B  30                 	db	48
    96  00100C  2C                 	db	44
    97  00100D  32                 	db	50
    98  00100E  0D                 	db	13
    99  00100F  0A                 	db	10
   100  001010  00                 	db	0
   101  001011                     __end_ofinit_modem_io_ok@F6760:
   102                           	opt stack 0
   103  001011                     wakeup_modem_ok@F6753:
   104                           	opt stack 0
   105  001011  41                 	db	65
   106  001012  54                 	db	84
   107  001013  2B                 	db	43
   108  001014  49                 	db	73
   109  001015  50                 	db	80
   110  001016  52                 	db	82
   111  001017  3D                 	db	61
   112  001018  31                 	db	49
   113  001019  31                 	db	49
   114  00101A  35                 	db	53
   115  00101B  32                 	db	50
   116  00101C  30                 	db	48
   117  00101D  30                 	db	48
   118  00101E  0D                 	db	13
   119  00101F  0A                 	db	10
   120  001020  00                 	db	0
   121  001021                     __end_ofwakeup_modem_ok@F6753:
   122                           	opt stack 0
   123  001021                     sim_card_ok@F6771:
   124                           	opt stack 0
   125  001021  2B                 	db	43
   126  001022  43                 	db	67
   127  001023  50                 	db	80
   128  001024  49                 	db	73
   129  001025  4E                 	db	78
   130  001026  3A                 	db	58
   131  001027  20                 	db	32
   132  001028  52                 	db	82
   133  001029  45                 	db	69
   134  00102A  41                 	db	65
   135  00102B  44                 	db	68
   136  00102C  59                 	db	89
   137  00102D  00                 	db	0
   138  00102E                     __end_ofsim_card_ok@F6771:
   139                           	opt stack 0
   140  00102E                     init_modem_io_ok@F6764:
   141                           	opt stack 0
   142  00102E  41                 	db	65
   143  00102F  54                 	db	84
   144  001030  23                 	db	35
   145  001031  53                 	db	83
   146  001032  4C                 	db	76
   147  001033  45                 	db	69
   148  001034  44                 	db	68
   149  001035  3D                 	db	61
   150  001036  34                 	db	52
   151  001037  0D                 	db	13
   152  001038  0A                 	db	10
   153  001039  00                 	db	0
   154  00103A                     __end_ofinit_modem_io_ok@F6764:
   155                           	opt stack 0
   156  00103A                     sim_card_ok@F6769:
   157                           	opt stack 0
   158  00103A  41                 	db	65
   159  00103B  54                 	db	84
   160  00103C  2B                 	db	43
   161  00103D  43                 	db	67
   162  00103E  50                 	db	80
   163  00103F  49                 	db	73
   164  001040  4E                 	db	78
   165  001041  3F                 	db	63
   166  001042  0D                 	db	13
   167  001043  0A                 	db	10
   168  001044  00                 	db	0
   169  001045                     __end_ofsim_card_ok@F6769:
   170                           	opt stack 0
   171  001045                     init_modem_io_ok@F6762:
   172                           	opt stack 0
   173  001045  41                 	db	65
   174  001046  54                 	db	84
   175  001047  23                 	db	35
   176  001048  43                 	db	67
   177  001049  47                 	db	71
   178  00104A  4D                 	db	77
   179  00104B  52                 	db	82
   180  00104C  0D                 	db	13
   181  00104D  0A                 	db	10
   182  00104E  00                 	db	0
   183  00104F                     __end_ofinit_modem_io_ok@F6762:
   184                           	opt stack 0
   185  00104F                     _default_ACCT:
   186                           	opt stack 0
   187  00104F  30                 	db	48
   188  001050  30                 	db	48
   189  001051  30                 	db	48
   190  001052  30                 	db	48
   191  001053  23                 	db	35
   192  001054  00                 	db	0
   193  001055                     __end_of_default_ACCT:
   194                           	opt stack 0
   195  001055                     _default_ACCESS_CODE:
   196                           	opt stack 0
   197  001055  31                 	db	49
   198  001056  31                 	db	49
   199  001057  31                 	db	49
   200  001058  31                 	db	49
   201  001059  23                 	db	35
   202  00105A  00                 	db	0
   203  00105B                     __end_of_default_ACCESS_CODE:
   204                           	opt stack 0
   205  00105B                     wakeup_modem_ok@F6751:
   206                           	opt stack 0
   207  00105B  41                 	db	65
   208  00105C  54                 	db	84
   209  00105D  0D                 	db	13
   210  00105E  0A                 	db	10
   211  00105F  00                 	db	0
   212  001060                     __end_ofwakeup_modem_ok@F6751:
   213                           	opt stack 0
   214  001060                     _default_LINE_CARD:
   215                           	opt stack 0
   216  001060  31                 	db	49
   217  001061  23                 	db	35
   218  001062  00                 	db	0
   219  001063                     __end_of_default_LINE_CARD:
   220                           	opt stack 0
   221  001063                     _default_PORT4:
   222                           	opt stack 0
   223  001063  07E4               	dw	2020
   224  001065                     __end_of_default_PORT4:
   225                           	opt stack 0
   226  001065                     _default_PORT3:
   227                           	opt stack 0
   228  001065  07E4               	dw	2020
   229  001067                     __end_of_default_PORT3:
   230                           	opt stack 0
   231  001067                     _default_PORT2:
   232                           	opt stack 0
   233  001067  07E4               	dw	2020
   234  001069                     __end_of_default_PORT2:
   235                           	opt stack 0
   236  001069                     _default_PORT1:
   237                           	opt stack 0
   238  001069  07E4               	dw	2020
   239  00106B                     __end_of_default_PORT1:
   240                           	opt stack 0
   241  00106B                     _default_IP4:
   242                           	opt stack 0
   243  00106B  23                 	db	35
   244  00106C  00                 	db	0
   245  00106D                     __end_of_default_IP4:
   246                           	opt stack 0
   247  00106D                     _default_IP3:
   248                           	opt stack 0
   249  00106D  23                 	db	35
   250  00106E  00                 	db	0
   251  00106F                     __end_of_default_IP3:
   252                           	opt stack 0
   253  00106F                     _default_IP2:
   254                           	opt stack 0
   255  00106F  23                 	db	35
   256  001070  00                 	db	0
   257  001071                     __end_of_default_IP2:
   258                           	opt stack 0
   259  001071                     _default_IP1:
   260                           	opt stack 0
   261  001071  23                 	db	35
   262  001072  00                 	db	0
   263  001073                     __end_of_default_IP1:
   264                           	opt stack 0
   265  001073                     _default_APN:
   266                           	opt stack 0
   267  001073  23                 	db	35
   268  001074  00                 	db	0
   269  001075                     __end_of_default_APN:
   270                           	opt stack 0
   271  001075                     _default_ENCRYPTION:
   272                           	opt stack 0
   273  001075  01                 	db	1
   274  001076                     __end_of_default_ENCRYPTION:
   275                           	opt stack 0
   276  001076                     _default_SMS_WAIT_TIME:
   277                           	opt stack 0
   278  001076  0A                 	db	10
   279  001077                     __end_of_default_SMS_WAIT_TIME:
   280                           	opt stack 0
   281  001077                     _default_RETRY:
   282                           	opt stack 0
   283  001077  0A                 	db	10
   284  001078                     __end_of_default_RETRY:
   285                           	opt stack 0
   286  001078                     _default_CYCLE:
   287                           	opt stack 0
   288  001078  02                 	db	2
   289  001079                     __end_of_default_CYCLE:
   290                           	opt stack 0
   291  001079                     _default_TP_PIN:
   292                           	opt stack 0
   293  001079  00                 	db	0
   294  00107A                     __end_of_default_TP_PIN:
   295                           	opt stack 0
   296  00107A                     _default_ZONE2:
   297                           	opt stack 0
   298  00107A  14                 	db	20
   299  00107B                     __end_of_default_ZONE2:
   300                           	opt stack 0
   301  00107B                     _default_ZONE1:
   302                           	opt stack 0
   303  00107B  01                 	db	1
   304  00107C                     __end_of_default_ZONE1:
   305                           	opt stack 0
   306  00107C                     _default_SERVER_ACK_TIME:
   307                           	opt stack 0
   308  00107C  2D                 	db	45
   309  00107D                     __end_of_default_SERVER_ACK_TIME:
   310                           	opt stack 0
   311  00107D                     _default_TEST_FREQ:
   312                           	opt stack 0
   313  00107D  0F                 	db	15
   314  00107E                     __end_of_default_TEST_FREQ:
   315                           	opt stack 0
   316  00107E                     _default_PROGRAM_ACK:
   317                           	opt stack 0
   318  00107E  01                 	db	1
   319  00107F                     __end_of_default_PROGRAM_ACK:
   320                           	opt stack 0
   321  0000                     _ANSELB	set	3897
   322  0000                     _ANSELC	set	3898
   323  0000                     _ANSELA	set	3896
   324  0000                     _EECON2	set	4007
   325  0000                     _EEDATA	set	4008
   326  0000                     _EEADR	set	4009
   327  0000                     _EEADRH	set	4010
   328  0000                     _INTCON	set	4082
   329  0000                     _TX1REG	set	4013
   330  0000                     _RC1REG	set	4014
   331  0000                     _T3CON	set	4017
   332  0000                     _PIR1bits	set	3998
   333  0000                     _RCSTA1bits	set	4011
   334  0000                     _RC1STAbits	set	4011
   335  0000                     _SPBRG1	set	4015
   336  0000                     _SPBRGH1	set	4016
   337  0000                     _TXSTA1bits	set	4012
   338  0000                     _BAUDCONbits	set	4024
   339  0000                     _BAUDCON1bits	set	4024
   340  0000                     _TMR0H	set	4055
   341  0000                     _TMR0L	set	4054
   342  0000                     _T0CON	set	4053
   343  0000                     _TMR3L	set	4018
   344  0000                     _TMR3H	set	4019
   345  0000                     _PIR2bits	set	4001
   346  0000                     _PIE2bits	set	4000
   347  0000                     _T3CONbits	set	4017
   348  0000                     _INTCONbits	set	4082
   349  0000                     _PORTAbits	set	3968
   350  0000                     _PORTBbits	set	3969
   351  0000                     _LATCbits	set	3979
   352  0000                     _TRISCbits	set	3988
   353  0000                     _PORTCbits	set	3970
   354  0000                     _TRISBbits	set	3987
   355  0000                     _LATBbits	set	3978
   356  0000                     _LATAbits	set	3977
   357  0000                     _TRISAbits	set	3986
   358  0000                     _OSCCONbits	set	4051
   359  0000                     _WR	set	32049
   360  0000                     _WREN	set	32050
   361  0000                     _RD	set	32048
   362  0000                     _EEPGD	set	32055
   363  0000                     _CFGS	set	32054
   364  0000                     _GIE	set	32663
   365  0000                     _TRMT1	set	32097
   366  0000                     _TMR3ON	set	32136
   367  0000                     _RC1IF	set	31989
   368  0000                     _CREN1	set	32092
   369  0000                     _RC1IE	set	31981
   370  0000                     _TMR0IE	set	32661
   371  0000                     _TMR3IF	set	32009
   372  0000                     _TMR0IF	set	32658
   373                           
   374                           ; #config settings
   375  00107F  00                 	db	0	; dummy byte at the end
   376  0000                     
   377                           	psect	cinit
   378  00121E                     __pcinit:
   379                           	opt stack 0
   380  00121E                     start_initialization:
   381                           	opt stack 0
   382  00121E                     __initialization:
   383                           	opt stack 0
   384                           
   385                           ; Initialize objects allocated to COMRAM (7 bytes)
   386                           ; load TBLPTR registers with __pidataCOMRAM
   387  00121E  0EFA               	movlw	low __pidataCOMRAM
   388  001220  6EF6               	movwf	tblptrl,c
   389  001222  0E12               	movlw	high __pidataCOMRAM
   390  001224  6EF7               	movwf	tblptrh,c
   391  001226  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   392  001228  6EF8               	movwf	tblptru,c
   393  00122A  EE00  F01C         	lfsr	0,__pdataCOMRAM
   394  00122E  EE10 F007          	lfsr	1,7
   395  001232                     copy_data0:
   396  001232  0009               	tblrd		*+
   397  001234  CFF5 FFEE          	movff	tablat,postinc0
   398  001238  50E5               	movf	postdec1,w,c
   399  00123A  50E1               	movf	fsr1l,w,c
   400  00123C  E1FA               	bnz	copy_data0
   401                           
   402                           ; Clear objects allocated to BANK0 (100 bytes)
   403  00123E  EE00  F060         	lfsr	0,__pbssBANK0
   404  001242  0E64               	movlw	100
   405  001244                     clear_0:
   406  001244  6AEE               	clrf	postinc0,c
   407  001246  06E8               	decf	wreg,f,c
   408  001248  E1FD               	bnz	clear_0
   409                           
   410                           ; Clear objects allocated to COMRAM (8 bytes)
   411  00124A  EE00  F014         	lfsr	0,__pbssCOMRAM
   412  00124E  0E08               	movlw	8
   413  001250                     clear_1:
   414  001250  6AEE               	clrf	postinc0,c
   415  001252  06E8               	decf	wreg,f,c
   416  001254  E1FD               	bnz	clear_1
   417  001256                     end_of_initialization:
   418                           	opt stack 0
   419  001256                     __end_of__initialization:
   420                           	opt stack 0
   421  001256  9023               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   422  001258  9223               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   423  00125A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   424  00125C  6EF8               	movwf	tblptru,c
   425  00125E  0100               	movlb	0
   426  001260  EF6A  F009         	goto	_main	;jump to C main() function
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           postdec1	equ	0xFE5
   434                           fsr1l	equ	0xFE1
   435                           
   436                           	psect	bssCOMRAM
   437  000014                     __pbssCOMRAM:
   438                           	opt stack 0
   439  000014                     _buttonStillPressed:
   440                           	opt stack 0
   441  000014                     	ds	1
   442  000015                     _saveINTCONbits:
   443                           	opt stack 0
   444  000015                     	ds	1
   445  000016                     _state:
   446                           	opt stack 0
   447  000016                     	ds	1
   448  000017                     _tmr3_cnt:
   449                           	opt stack 0
   450  000017                     	ds	1
   451  000018                     _bled_tmr0_tick:
   452                           	opt stack 0
   453  000018                     	ds	1
   454  000019                     _gled_tmr0_tick:
   455                           	opt stack 0
   456  000019                     	ds	1
   457  00001A                     _buttonPressCount:
   458                           	opt stack 0
   459  00001A                     	ds	1
   460  00001B                     _inButtonMenu:
   461                           	opt stack 0
   462  00001B                     	ds	1
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	dataCOMRAM
   473  00001C                     __pdataCOMRAM:
   474                           	opt stack 0
   475  00001C                     _VERSION:
   476                           	opt stack 0
   477  00001C                     	ds	5
   478  000021                     _waiting:
   479                           	opt stack 0
   480  000021                     	ds	1
   481  000022                     _toggleLED:
   482                           	opt stack 0
   483  000022                     	ds	1
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	bssBANK0
   494  000060                     __pbssBANK0:
   495                           	opt stack 0
   496  000060                     _returnStr:
   497                           	opt stack 0
   498  000060                     	ds	100
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackCOMRAM
   509  000001                     __pcstackCOMRAM:
   510                           	opt stack 0
   511  000001                     ??_isr:
   512  000001                     
   513                           ; 1 bytes @ 0x0
   514  000001                     	ds	18
   515  000013                     ??_check_state:
   516  000013                     
   517                           ; 1 bytes @ 0x12
   518  000013                     	ds	1
   519  000014                     tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           postdec1	equ	0xFE5
   526                           fsr1l	equ	0xFE1
   527                           
   528                           ; 1 bytes @ 0x13
   529 ;;
   530 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   531 ;;
   532 ;; *************** function _main *****************
   533 ;; Defined at:
   534 ;;		line 81 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels required when called:    5
   554 ;; This function calls:
   555 ;;		_check_state
   556 ;;		_init_pic
   557 ;;		_init_uart_md
   558 ;; This function is called by:
   559 ;;		Startup code after reset
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text0
   564  0012D4                     __ptext0:
   565                           	opt stack 0
   566  0012D4                     _main:
   567                           	opt stack 26
   568                           
   569                           ;main.c: 83: init_pic();
   570                           
   571                           ;incstack = 0
   572  0012D4  ECE4  F008         	call	_init_pic	;wreg free
   573                           
   574                           ;main.c: 84: init_uart_md();
   575  0012D8  EC32  F009         	call	_init_uart_md	;wreg free
   576  0012DC                     
   577                           ;main.c: 87: {
   578                           ;main.c: 88: check_state();
   579  0012DC  ECA3  F008         	call	_check_state	;wreg free
   580  0012E0  D7FD               	goto	l156
   581  0012E2                     __end_of_main:
   582                           	opt stack 0
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           
   592 ;; *************** function _init_uart_md *****************
   593 ;; Defined at:
   594 ;;		line 12 in file "uart.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    2
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_main
   619 ;;		_startup_modem_ok
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text1
   624  001264                     __ptext1:
   625                           	opt stack 0
   626  001264                     _init_uart_md:
   627                           	opt stack 28
   628                           
   629                           ;uart.c: 14: BAUDCON1bits.BRG16 = 1;
   630                           
   631                           ;incstack = 0
   632  001264  86B8               	bsf	4024,3,c	;volatile
   633                           
   634                           ;uart.c: 15: BAUDCON1bits.RCIDL = 1;
   635  001266  8CB8               	bsf	4024,6,c	;volatile
   636                           
   637                           ;uart.c: 16: BAUDCONbits.CKTXP = 0;
   638  001268  98B8               	bcf	4024,4,c	;volatile
   639                           
   640                           ;uart.c: 17: BAUDCONbits.WUE = 0;
   641  00126A  92B8               	bcf	4024,1,c	;volatile
   642                           
   643                           ;uart.c: 18: BAUDCONbits.ABDEN = 0;
   644  00126C  90B8               	bcf	4024,0,c	;volatile
   645                           
   646                           ;uart.c: 19: TXSTA1bits.BRGH = 1;
   647  00126E  84AC               	bsf	4012,2,c	;volatile
   648                           
   649                           ;uart.c: 20: TXSTA1bits.SYNC = 0;
   650  001270  98AC               	bcf	4012,4,c	;volatile
   651                           
   652                           ;uart.c: 21: SPBRGH1 = 0;
   653  001272  0E00               	movlw	0
   654  001274  6EB0               	movwf	4016,c	;volatile
   655                           
   656                           ;uart.c: 22: SPBRG1 = 16;
   657  001276  0E10               	movlw	16
   658  001278  6EAF               	movwf	4015,c	;volatile
   659                           
   660                           ;uart.c: 24: RC1STAbits.SPEN = 1;
   661  00127A  8EAB               	bsf	4011,7,c	;volatile
   662                           
   663                           ;uart.c: 25: TRISCbits.TRISC7 = 1;
   664  00127C  8E94               	bsf	3988,7,c	;volatile
   665                           
   666                           ;uart.c: 26: TRISCbits.TRISC6 = 0;
   667  00127E  9C94               	bcf	3988,6,c	;volatile
   668                           
   669                           ;uart.c: 28: RCSTA1bits.CREN = 1;
   670  001280  88AB               	bsf	4011,4,c	;volatile
   671                           
   672                           ;uart.c: 29: TXSTA1bits.TXEN = 1;
   673  001282  8AAC               	bsf	4012,5,c	;volatile
   674                           
   675                           ;uart.c: 31: LATAbits.LA3 = 1;
   676  001284  8689               	bsf	3977,3,c	;volatile
   677                           
   678                           ;uart.c: 32: PIR1bits.RC1IF = 0;
   679  001286  9A9E               	bcf	3998,5,c	;volatile
   680  001288  0012               	return		;funcret
   681  00128A                     __end_of_init_uart_md:
   682                           	opt stack 0
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           postdec1	equ	0xFE5
   690                           fsr1l	equ	0xFE1
   691                           
   692 ;; *************** function _init_pic *****************
   693 ;; Defined at:
   694 ;;		line 97 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    4
   715 ;; This function calls:
   716 ;;		_enable_ints
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text2
   723  0011C8                     __ptext2:
   724                           	opt stack 0
   725  0011C8                     _init_pic:
   726                           	opt stack 26
   727                           
   728                           ;main.c: 100: OSCCONbits.IDLEN = 0;
   729                           
   730                           ;incstack = 0
   731  0011C8  9ED3               	bcf	4051,7,c	;volatile
   732                           
   733                           ;main.c: 101: OSCCONbits.IRCF = 0b110;
   734  0011CA  50D3               	movf	4051,w,c	;volatile
   735  0011CC  0B8F               	andlw	-113
   736  0011CE  0960               	iorlw	96
   737  0011D0  6ED3               	movwf	4051,c	;volatile
   738                           
   739                           ;main.c: 102: OSCCONbits.OSTS = 1;
   740  0011D2  86D3               	bsf	4051,3,c	;volatile
   741                           
   742                           ;main.c: 106: ANSELA = 0x01;
   743  0011D4  0E01               	movlw	1
   744  0011D6  010F               	movlb	15	; () banked
   745  0011D8  6F38               	movwf	56,b	;volatile
   746                           
   747                           ; BSR set to: 15
   748                           ;main.c: 107: TRISAbits.TRISA0 = 1;
   749  0011DA  8092               	bsf	3986,0,c	;volatile
   750                           
   751                           ; BSR set to: 15
   752                           ;main.c: 108: TRISAbits.TRISA3 = 0;
   753  0011DC  9692               	bcf	3986,3,c	;volatile
   754                           
   755                           ; BSR set to: 15
   756                           ;main.c: 109: LATAbits.LA3 = 0;
   757  0011DE  9689               	bcf	3977,3,c	;volatile
   758                           
   759                           ;main.c: 112: ANSELC = 0x00;
   760  0011E0  0E00               	movlw	0
   761  0011E2  6F3A               	movwf	58,b	;volatile
   762                           
   763                           ; BSR set to: 15
   764                           ;main.c: 113: LATBbits.LB3 = 1;
   765  0011E4  868A               	bsf	3978,3,c	;volatile
   766                           
   767                           ; BSR set to: 15
   768                           ;main.c: 114: TRISBbits.TRISB3 = 0;
   769  0011E6  9693               	bcf	3987,3,c	;volatile
   770                           
   771                           ; BSR set to: 15
   772                           ;main.c: 115: PORTCbits.RC6 = 1;
   773  0011E8  8C82               	bsf	3970,6,c	;volatile
   774                           
   775                           ; BSR set to: 15
   776                           ;main.c: 116: TRISCbits.TRISC6 = 0;
   777  0011EA  9C94               	bcf	3988,6,c	;volatile
   778                           
   779                           ; BSR set to: 15
   780                           ;main.c: 117: LATCbits.LATC7 = 1;
   781  0011EC  8E8B               	bsf	3979,7,c	;volatile
   782                           
   783                           ; BSR set to: 15
   784                           ;main.c: 118: TRISCbits.TRISC7 = 1;
   785  0011EE  8E94               	bsf	3988,7,c	;volatile
   786                           
   787                           ;main.c: 121: ANSELB = 0x00;
   788  0011F0  0E00               	movlw	0
   789  0011F2  6F39               	movwf	57,b	;volatile
   790                           
   791                           ; BSR set to: 15
   792                           ;main.c: 122: TRISBbits.TRISB0 = 1;
   793  0011F4  8093               	bsf	3987,0,c	;volatile
   794                           
   795                           ; BSR set to: 15
   796                           ;main.c: 123: TRISCbits.TRISC1 = 1;
   797  0011F6  8294               	bsf	3988,1,c	;volatile
   798                           
   799                           ; BSR set to: 15
   800                           ;main.c: 124: LATBbits.LB1 = 1;
   801  0011F8  828A               	bsf	3978,1,c	;volatile
   802                           
   803                           ; BSR set to: 15
   804                           ;main.c: 125: TRISBbits.TRISB1 = 1;
   805  0011FA  8293               	bsf	3987,1,c	;volatile
   806                           
   807                           ; BSR set to: 15
   808                           ;main.c: 126: LATBbits.LATB2 = 1;
   809  0011FC  848A               	bsf	3978,2,c	;volatile
   810                           
   811                           ; BSR set to: 15
   812                           ;main.c: 127: TRISBbits.TRISB2 = 1;
   813  0011FE  8493               	bsf	3987,2,c	;volatile
   814                           
   815                           ; BSR set to: 15
   816                           ;main.c: 128: LATCbits.LC4 = 1;
   817  001200  888B               	bsf	3979,4,c	;volatile
   818                           
   819                           ; BSR set to: 15
   820                           ;main.c: 129: TRISCbits.TRISC4 = 0;
   821  001202  9894               	bcf	3988,4,c	;volatile
   822                           
   823                           ; BSR set to: 15
   824                           ;main.c: 130: PORTBbits.RB4 = 1;
   825  001204  8881               	bsf	3969,4,c	;volatile
   826                           
   827                           ; BSR set to: 15
   828                           ;main.c: 131: TRISBbits.TRISB4 = 1;
   829  001206  8893               	bsf	3987,4,c	;volatile
   830                           
   831                           ; BSR set to: 15
   832                           ;main.c: 132: PORTBbits.RB5 = 1;
   833  001208  8A81               	bsf	3969,5,c	;volatile
   834                           
   835                           ; BSR set to: 15
   836                           ;main.c: 133: TRISBbits.TRISB5 = 1;
   837  00120A  8A93               	bsf	3987,5,c	;volatile
   838                           
   839                           ; BSR set to: 15
   840                           ;main.c: 134: PORTBbits.RB6 = 1;
   841  00120C  8C81               	bsf	3969,6,c	;volatile
   842                           
   843                           ; BSR set to: 15
   844                           ;main.c: 135: TRISBbits.TRISB6 = 0;
   845  00120E  9C93               	bcf	3987,6,c	;volatile
   846                           
   847                           ; BSR set to: 15
   848                           ;main.c: 136: PORTBbits.RB7 = 1;
   849  001210  8E81               	bsf	3969,7,c	;volatile
   850                           
   851                           ; BSR set to: 15
   852                           ;main.c: 137: TRISBbits.TRISB7 = 1;
   853  001212  8E93               	bsf	3987,7,c	;volatile
   854                           
   855                           ; BSR set to: 15
   856                           ;main.c: 139: PORTAbits.RA1 = 0;
   857  001214  9280               	bcf	3968,1,c	;volatile
   858                           
   859                           ; BSR set to: 15
   860                           ;main.c: 140: TRISAbits.TRISA1 = 0;
   861  001216  9292               	bcf	3986,1,c	;volatile
   862                           
   863                           ; BSR set to: 15
   864                           ;main.c: 142: enable_ints();
   865  001218  EC45  F009         	call	_enable_ints	;wreg free
   866  00121C  0012               	return		;funcret
   867  00121E                     __end_of_init_pic:
   868                           	opt stack 0
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           postinc0	equ	0xFEE
   874                           wreg	equ	0xFE8
   875                           postdec1	equ	0xFE5
   876                           fsr1l	equ	0xFE1
   877                           
   878 ;; *************** function _enable_ints *****************
   879 ;; Defined at:
   880 ;;		line 145 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    3
   901 ;; This function calls:
   902 ;;		_start_timer0
   903 ;; This function is called by:
   904 ;;		_init_pic
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text3
   909  00128A                     __ptext3:
   910                           	opt stack 0
   911  00128A                     _enable_ints:
   912                           	opt stack 26
   913                           
   914                           ;main.c: 147: INTCONbits.GIE = 0;
   915                           
   916                           ;incstack = 0
   917  00128A  9EF2               	bcf	intcon,7,c	;volatile
   918                           
   919                           ;main.c: 154: start_timer0();
   920  00128C  EC58  F009         	call	_start_timer0	;wreg free
   921                           
   922                           ;main.c: 157: T3CONbits.T3CKPS = 0b11;
   923  001290  0E30               	movlw	48
   924  001292  12B1               	iorwf	4017,f,c	;volatile
   925                           
   926                           ;main.c: 158: T3CONbits.TMR3CS = 0b00;
   927  001294  0E3F               	movlw	-193
   928  001296  16B1               	andwf	4017,f,c	;volatile
   929                           
   930                           ;main.c: 159: T3CONbits.nT3SYNC = 1;
   931  001298  84B1               	bsf	4017,2,c	;volatile
   932                           
   933                           ;main.c: 161: T3CONbits.TMR3ON = 1;
   934  00129A  80B1               	bsf	4017,0,c	;volatile
   935                           
   936                           ;main.c: 162: PIE2bits.TMR3IE = 1;
   937  00129C  82A0               	bsf	4000,1,c	;volatile
   938                           
   939                           ;main.c: 163: PIR2bits.TMR3IF = 0;
   940  00129E  92A1               	bcf	4001,1,c	;volatile
   941                           
   942                           ;main.c: 164: TMR3H = 0x60;
   943  0012A0  0E60               	movlw	96
   944  0012A2  6EB3               	movwf	4019,c	;volatile
   945                           
   946                           ;main.c: 165: TMR3L = 0;
   947  0012A4  0E00               	movlw	0
   948  0012A6  6EB2               	movwf	4018,c	;volatile
   949                           
   950                           ;main.c: 167: INTCONbits.GIE = 0;
   951  0012A8  9EF2               	bcf	intcon,7,c	;volatile
   952                           
   953                           ;main.c: 168: INTCONbits.PEIE = 1;
   954  0012AA  8CF2               	bsf	intcon,6,c	;volatile
   955                           
   956                           ;main.c: 170: INTCONbits.GIE = 1;
   957  0012AC  8EF2               	bsf	intcon,7,c	;volatile
   958  0012AE  0012               	return		;funcret
   959  0012B0                     __end_of_enable_ints:
   960                           	opt stack 0
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           intcon	equ	0xFF2
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           postdec1	equ	0xFE5
   969                           fsr1l	equ	0xFE1
   970                           
   971 ;; *************** function _start_timer0 *****************
   972 ;; Defined at:
   973 ;;		line 199 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    2
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_enable_ints
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text4
  1002  0012B0                     __ptext4:
  1003                           	opt stack 0
  1004  0012B0                     _start_timer0:
  1005                           	opt stack 26
  1006                           
  1007                           ;main.c: 201: T0CON = 0x87;
  1008                           
  1009                           ;incstack = 0
  1010  0012B0  0E87               	movlw	135
  1011  0012B2  6ED5               	movwf	4053,c	;volatile
  1012                           
  1013                           ;main.c: 202: TMR0L = ((65535-781)%256);
  1014  0012B4  0EF2               	movlw	242
  1015  0012B6  6ED6               	movwf	4054,c	;volatile
  1016                           
  1017                           ;main.c: 203: TMR0H = ((65535-781)/256);
  1018  0012B8  0EFC               	movlw	252
  1019  0012BA  6ED7               	movwf	4055,c	;volatile
  1020                           
  1021                           ;main.c: 204: TMR0IF = 0;
  1022  0012BC  94F2               	bcf	intcon,2,c	;volatile
  1023                           
  1024                           ;main.c: 205: TMR0IE = 1;
  1025  0012BE  8AF2               	bsf	intcon,5,c	;volatile
  1026                           
  1027                           ;main.c: 206: INTCONbits.GIE = 1;
  1028  0012C0  8EF2               	bsf	intcon,7,c	;volatile
  1029  0012C2  0012               	return		;funcret
  1030  0012C4                     __end_of_start_timer0:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           intcon	equ	0xFF2
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           postdec1	equ	0xFE5
  1040                           fsr1l	equ	0xFE1
  1041                           
  1042 ;; *************** function _check_state *****************
  1043 ;; Defined at:
  1044 ;;		line 13 in file "state.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;Total ram usage:        1 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    3
  1065 ;; This function calls:
  1066 ;;		_reload_tmr3_pt25s
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text5
  1073  001146                     __ptext5:
  1074                           	opt stack 0
  1075  001146                     _check_state:
  1076                           	opt stack 27
  1077                           
  1078                           ;state.c: 15: switch (state)
  1079                           
  1080                           ;incstack = 0
  1081  001146  D034               	goto	l654
  1082  001148                     
  1083                           ;state.c: 18: waiting = 0;
  1084  001148  0E00               	movlw	0
  1085  00114A  6E21               	movwf	_waiting,c
  1086                           
  1087                           ;state.c: 20: if (PORTBbits.RB4 && !buttonStillPressed)
  1088  00114C  A881               	btfss	3969,4,c	;volatile
  1089  00114E  D014               	goto	l656
  1090  001150  5014               	movf	_buttonStillPressed,w,c
  1091  001152  A4D8               	btfss	status,2,c
  1092  001154  D011               	goto	l656
  1093                           
  1094                           ;state.c: 21: {
  1095                           ;state.c: 22: _delay((unsigned long)((30)*(8000000/4000.0)));
  1096  001156  0E4E               	movlw	78
  1097  001158  6E13               	movwf	??_check_state& (0+255),c
  1098  00115A  0EEB               	movlw	235
  1099  00115C                     u1207:
  1100  00115C  2EE8               	decfsz	wreg,f,c
  1101  00115E  D7FE               	bra	u1207
  1102  001160  2E13               	decfsz	??_check_state& (0+255),f,c
  1103  001162  D7FC               	bra	u1207
  1104  001164  F000               	nop	
  1105                           
  1106                           ;state.c: 23: if (PORTBbits.RB4)
  1107  001166  A881               	btfss	3969,4,c	;volatile
  1108  001168  D005               	goto	l657
  1109                           
  1110                           ;state.c: 24: {
  1111                           ;state.c: 25: buttonPressCount++;
  1112  00116A  2A1A               	incf	_buttonPressCount,f,c
  1113                           
  1114                           ;state.c: 26: reload_tmr3_pt25s();
  1115  00116C  EC62  F009         	call	_reload_tmr3_pt25s	;wreg free
  1116                           
  1117                           ;state.c: 27: tmr3_cnt = 0;
  1118  001170  0E00               	movlw	0
  1119  001172  6E17               	movwf	_tmr3_cnt,c
  1120  001174                     l657:
  1121                           
  1122                           ;state.c: 28: }
  1123                           ;state.c: 29: buttonStillPressed = 1;
  1124  001174  0E01               	movlw	1
  1125  001176  D00B               	goto	L1
  1126  001178                     l656:
  1127                           
  1128                           ;state.c: 31: else
  1129                           ;state.c: 32: {
  1130                           ;state.c: 33: _delay((unsigned long)((30)*(8000000/4000.0)));
  1131  001178  0E4E               	movlw	78
  1132  00117A  6E13               	movwf	??_check_state& (0+255),c
  1133  00117C  0EEB               	movlw	235
  1134  00117E                     u1217:
  1135  00117E  2EE8               	decfsz	wreg,f,c
  1136  001180  D7FE               	bra	u1217
  1137  001182  2E13               	decfsz	??_check_state& (0+255),f,c
  1138  001184  D7FC               	bra	u1217
  1139  001186  F000               	nop	
  1140                           
  1141                           ;state.c: 34: if (!PORTBbits.RB4)
  1142  001188  B881               	btfsc	3969,4,c	;volatile
  1143  00118A  D002               	goto	l659
  1144                           
  1145                           ;state.c: 35: {
  1146                           ;state.c: 36: buttonStillPressed = 0;
  1147  00118C  0E00               	movlw	0
  1148  00118E                     L1:
  1149  00118E  6E14               	movwf	_buttonStillPressed,c
  1150  001190                     l659:
  1151                           
  1152                           ;state.c: 37: }
  1153                           ;state.c: 38: }
  1154                           ;state.c: 39: if (inButtonMenu && buttonPressCount == 0)
  1155  001190  501B               	movf	_inButtonMenu,w,c
  1156  001192  B4D8               	btfsc	status,2,c
  1157  001194  D006               	goto	l660
  1158  001196  501A               	movf	_buttonPressCount,w,c
  1159  001198  A4D8               	btfss	status,2,c
  1160  00119A  D003               	goto	l660
  1161                           
  1162                           ;state.c: 40: {
  1163                           ;state.c: 41: LATBbits.LB3=0;
  1164  00119C  968A               	bcf	3978,3,c	;volatile
  1165                           
  1166                           ;state.c: 42: LATCbits.LC4=0;
  1167  00119E  988B               	bcf	3979,4,c	;volatile
  1168                           
  1169                           ;state.c: 43: }
  1170  0011A0  D002               	goto	l661
  1171  0011A2                     l660:
  1172                           
  1173                           ;state.c: 44: else
  1174                           ;state.c: 45: {
  1175                           ;state.c: 46: LATBbits.LB3=1;
  1176  0011A2  868A               	bsf	3978,3,c	;volatile
  1177                           
  1178                           ;state.c: 47: LATCbits.LC4=1;
  1179  0011A4  888B               	bsf	3979,4,c	;volatile
  1180  0011A6                     l661:
  1181                           
  1182                           ;state.c: 48: }
  1183                           ;state.c: 49: bled_tmr0_tick = 0;
  1184  0011A6  0E00               	movlw	0
  1185  0011A8  6E18               	movwf	_bled_tmr0_tick,c
  1186                           
  1187                           ;state.c: 50: gled_tmr0_tick = 0;
  1188  0011AA  0E00               	movlw	0
  1189  0011AC  6E19               	movwf	_gled_tmr0_tick,c
  1190                           
  1191                           ;state.c: 61: }
  1192                           
  1193                           ;state.c: 60: break;
  1194                           
  1195                           ;state.c: 59: case DELETE_SENSOR:
  1196                           
  1197                           ;state.c: 57: break;
  1198                           
  1199                           ;state.c: 56: case LEARN_SENSOR:
  1200                           
  1201                           ;state.c: 54: break;
  1202                           
  1203                           ;state.c: 53: case LISTEN_SMS:
  1204                           
  1205                           ;state.c: 51: break;
  1206  0011AE  0012               	return	
  1207  0011B0                     l654:
  1208  0011B0  5016               	movf	_state,w,c
  1209                           
  1210                           ; Switch size 1, requested type "space"
  1211                           ; Number of cases is 4, Range of values is 0 to 3
  1212                           ; switch strategies available:
  1213                           ; Name         Instructions Cycles
  1214                           ; simple_byte           13     7 (average)
  1215                           ;	Chosen strategy is simple_byte
  1216  0011B2  0A00               	xorlw	0	; case 0
  1217  0011B4  B4D8               	btfsc	status,2,c
  1218  0011B6  D7C8               	goto	l655
  1219  0011B8  0A01               	xorlw	1	; case 1
  1220  0011BA  B4D8               	btfsc	status,2,c
  1221  0011BC  0012               	return	
  1222  0011BE  0A03               	xorlw	3	; case 2
  1223  0011C0  B4D8               	btfsc	status,2,c
  1224  0011C2  0012               	return	
  1225  0011C4  0A01               	xorlw	1	; case 3
  1226  0011C6  0012               	return	
  1227  0011C8                     __end_of_check_state:
  1228                           	opt stack 0
  1229                           tblptru	equ	0xFF8
  1230                           tblptrh	equ	0xFF7
  1231                           tblptrl	equ	0xFF6
  1232                           tablat	equ	0xFF5
  1233                           intcon	equ	0xFF2
  1234                           postinc0	equ	0xFEE
  1235                           wreg	equ	0xFE8
  1236                           postdec1	equ	0xFE5
  1237                           fsr1l	equ	0xFE1
  1238                           status	equ	0xFD8
  1239                           
  1240 ;; *************** function _reload_tmr3_pt25s *****************
  1241 ;; Defined at:
  1242 ;;		line 182 in file "main.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;Total ram usage:        0 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    2
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_check_state
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text6
  1271  0012C4                     __ptext6:
  1272                           	opt stack 0
  1273  0012C4                     _reload_tmr3_pt25s:
  1274                           	opt stack 27
  1275                           
  1276                           ;main.c: 184: T3CONbits.TMR3ON = 1;
  1277                           
  1278                           ;incstack = 0
  1279  0012C4  80B1               	bsf	4017,0,c	;volatile
  1280                           
  1281                           ;main.c: 185: PIE2bits.TMR3IE = 1;
  1282  0012C6  82A0               	bsf	4000,1,c	;volatile
  1283                           
  1284                           ;main.c: 186: PIR2bits.TMR3IF = 0;
  1285  0012C8  92A1               	bcf	4001,1,c	;volatile
  1286                           
  1287                           ;main.c: 187: TMR3H = 0x0B;
  1288  0012CA  0E0B               	movlw	11
  1289  0012CC  6EB3               	movwf	4019,c	;volatile
  1290                           
  1291                           ;main.c: 188: TMR3L = 0x45;
  1292  0012CE  0E45               	movlw	69
  1293  0012D0  6EB2               	movwf	4018,c	;volatile
  1294  0012D2  0012               	return		;funcret
  1295  0012D4                     __end_of_reload_tmr3_pt25s:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           intcon	equ	0xFF2
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           postdec1	equ	0xFE5
  1305                           fsr1l	equ	0xFE1
  1306                           status	equ	0xFD8
  1307                           
  1308 ;; *************** function _isr *****************
  1309 ;; Defined at:
  1310 ;;		line 18 in file "main.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;Total ram usage:       18 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    1
  1331 ;; This function calls:
  1332 ;;		_control_leds
  1333 ;;		_disable_tmr3
  1334 ;;		_reload_timer0
  1335 ;; This function is called by:
  1336 ;;		Interrupt level 2
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	intcode
  1341  000008                     __pintcode:
  1342                           	opt stack 0
  1343  000008                     _isr:
  1344                           	opt stack 26
  1345                           
  1346                           ;incstack = 0
  1347  000008  8223               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1348  00000A  CFFA F001          	movff	pclath,??_isr
  1349  00000E  CFFB F002          	movff	pclatu,??_isr+1
  1350  000012  CFE9 F003          	movff	fsr0l,??_isr+2
  1351  000016  CFEA F004          	movff	fsr0h,??_isr+3
  1352  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
  1353  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
  1354  000022  CFD9 F007          	movff	fsr2l,??_isr+6
  1355  000026  CFDA F008          	movff	fsr2h,??_isr+7
  1356  00002A  CFF3 F009          	movff	prodl,??_isr+8
  1357  00002E  CFF4 F00A          	movff	prodh,??_isr+9
  1358  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
  1359  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
  1360  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
  1361  00003E  CFF5 F00E          	movff	tablat,??_isr+13
  1362  000042  C023  F00F         	movff	btemp,??_isr+14
  1363  000046  C024  F010         	movff	btemp+1,??_isr+15
  1364  00004A  C025  F011         	movff	btemp+2,??_isr+16
  1365  00004E  C026  F012         	movff	btemp+3,??_isr+17
  1366                           
  1367                           ;main.c: 20: if (TMR0IF)
  1368  000052  A4F2               	btfss	intcon,2,c	;volatile
  1369  000054  D007               	goto	i2l133
  1370                           
  1371                           ;main.c: 21: {
  1372                           ;main.c: 22: TMR0IF = 0;
  1373  000056  94F2               	bcf	intcon,2,c	;volatile
  1374                           
  1375                           ;main.c: 23: reload_timer0();
  1376  000058  EC78  F009         	call	_reload_timer0	;wreg free
  1377                           
  1378                           ;main.c: 24: gled_tmr0_tick++;
  1379  00005C  2A19               	incf	_gled_tmr0_tick,f,c
  1380                           
  1381                           ;main.c: 25: bled_tmr0_tick++;
  1382  00005E  2A18               	incf	_bled_tmr0_tick,f,c
  1383                           
  1384                           ;main.c: 26: control_leds();
  1385  000060  EC40  F008         	call	_control_leds	;wreg free
  1386  000064                     i2l133:
  1387                           
  1388                           ;main.c: 27: }
  1389                           ;main.c: 28: if (TMR3IF)
  1390  000064  A2A1               	btfss	4001,1,c	;volatile
  1391  000066  D062               	goto	i2l150
  1392                           
  1393                           ;main.c: 29: {
  1394                           ;main.c: 30: tmr3_cnt++;
  1395  000068  2A17               	incf	_tmr3_cnt,f,c
  1396                           
  1397                           ;main.c: 31: TMR3IF = 0;
  1398  00006A  92A1               	bcf	4001,1,c	;volatile
  1399                           
  1400                           ;main.c: 33: if (tmr3_cnt >= 8 && ((inButtonMenu && buttonPressCount > 0) || !inButtonMe
      +                          nu))
  1401  00006C  0E07               	movlw	7
  1402  00006E  6417               	cpfsgt	_tmr3_cnt,c
  1403  000070  D04E               	goto	i2l135
  1404  000072  501B               	movf	_inButtonMenu,w,c
  1405  000074  B4D8               	btfsc	status,2,c
  1406  000076  D003               	goto	i2u12_40
  1407  000078  501A               	movf	_buttonPressCount,w,c
  1408  00007A  A4D8               	btfss	status,2,c
  1409  00007C  D003               	goto	i2u13_40
  1410  00007E                     i2u12_40:
  1411  00007E  501B               	movf	_inButtonMenu,w,c
  1412  000080  A4D8               	btfss	status,2,c
  1413  000082  D045               	goto	i2l135
  1414  000084                     i2u13_40:
  1415                           
  1416                           ;main.c: 34: {
  1417                           ;main.c: 35: tmr3_cnt = 0;
  1418  000084  0E00               	movlw	0
  1419  000086  6E17               	movwf	_tmr3_cnt,c
  1420                           
  1421                           ;main.c: 36: if (inButtonMenu && buttonPressCount == 1)
  1422  000088  501B               	movf	_inButtonMenu,w,c
  1423  00008A  B4D8               	btfsc	status,2,c
  1424  00008C  D009               	goto	i2l140
  1425  00008E  041A               	decf	_buttonPressCount,w,c
  1426  000090  A4D8               	btfss	status,2,c
  1427  000092  D006               	goto	i2l140
  1428                           
  1429                           ;main.c: 37: {
  1430                           ;main.c: 38: inButtonMenu = 0;
  1431  000094  0E00               	movlw	0
  1432  000096  6E1B               	movwf	_inButtonMenu,c
  1433                           
  1434                           ;main.c: 39: disable_tmr3();
  1435  000098  EC71  F009         	call	_disable_tmr3	;wreg free
  1436                           
  1437                           ;main.c: 40: state = LISTEN_SMS;
  1438  00009C  0E01               	movlw	1
  1439  00009E  D019               	goto	L3
  1440  0000A0                     i2l140:
  1441                           
  1442                           ;main.c: 42: else if (inButtonMenu && buttonPressCount == 2)
  1443  0000A0  501B               	movf	_inButtonMenu,w,c
  1444  0000A2  B4D8               	btfsc	status,2,c
  1445  0000A4  D00A               	goto	i2l142
  1446  0000A6  0E02               	movlw	2
  1447  0000A8  181A               	xorwf	_buttonPressCount,w,c
  1448  0000AA  A4D8               	btfss	status,2,c
  1449  0000AC  D006               	goto	i2l142
  1450                           
  1451                           ;main.c: 43: {
  1452                           ;main.c: 44: inButtonMenu = 0;
  1453  0000AE  0E00               	movlw	0
  1454  0000B0  6E1B               	movwf	_inButtonMenu,c
  1455                           
  1456                           ;main.c: 45: disable_tmr3();
  1457  0000B2  EC71  F009         	call	_disable_tmr3	;wreg free
  1458                           
  1459                           ;main.c: 46: state = LEARN_SENSOR;
  1460  0000B6  0E02               	movlw	2
  1461  0000B8  D00C               	goto	L3
  1462  0000BA                     i2l142:
  1463                           
  1464                           ;main.c: 48: else if (inButtonMenu && buttonPressCount == 3)
  1465  0000BA  501B               	movf	_inButtonMenu,w,c
  1466  0000BC  B4D8               	btfsc	status,2,c
  1467  0000BE  D00B               	goto	i2l144
  1468  0000C0  0E03               	movlw	3
  1469  0000C2  181A               	xorwf	_buttonPressCount,w,c
  1470  0000C4  A4D8               	btfss	status,2,c
  1471  0000C6  D007               	goto	i2l144
  1472                           
  1473                           ;main.c: 49: {
  1474                           ;main.c: 50: inButtonMenu = 0;
  1475  0000C8  0E00               	movlw	0
  1476  0000CA  6E1B               	movwf	_inButtonMenu,c
  1477                           
  1478                           ;main.c: 51: disable_tmr3();
  1479  0000CC  EC71  F009         	call	_disable_tmr3	;wreg free
  1480                           
  1481                           ;main.c: 52: state = DELETE_SENSOR;
  1482  0000D0  0E03               	movlw	3
  1483  0000D2                     L3:
  1484  0000D2  6E16               	movwf	_state,c
  1485                           
  1486                           ;main.c: 53: }
  1487  0000D4  D019               	goto	i2l148
  1488  0000D6                     i2l144:
  1489                           
  1490                           ;main.c: 54: else if (inButtonMenu && buttonPressCount == 4)
  1491  0000D6  501B               	movf	_inButtonMenu,w,c
  1492  0000D8  B4D8               	btfsc	status,2,c
  1493  0000DA  D009               	goto	i2l146
  1494  0000DC  0E04               	movlw	4
  1495  0000DE  181A               	xorwf	_buttonPressCount,w,c
  1496  0000E0  A4D8               	btfss	status,2,c
  1497  0000E2  D005               	goto	i2l146
  1498                           
  1499                           ;main.c: 55: {
  1500                           ;main.c: 56: inButtonMenu = 0;
  1501  0000E4  0E00               	movlw	0
  1502  0000E6  6E1B               	movwf	_inButtonMenu,c
  1503                           
  1504                           ;main.c: 57: disable_tmr3();
  1505  0000E8  EC71  F009         	call	_disable_tmr3	;wreg free
  1506                           
  1507                           ;main.c: 59: }
  1508  0000EC  D00D               	goto	i2l148
  1509  0000EE                     i2l146:
  1510                           
  1511                           ;main.c: 60: else if (buttonPressCount == 5)
  1512  0000EE  0E05               	movlw	5
  1513  0000F0  181A               	xorwf	_buttonPressCount,w,c
  1514  0000F2  A4D8               	btfss	status,2,c
  1515  0000F4  D009               	goto	i2l148
  1516                           
  1517                           ;main.c: 61: {
  1518                           ;main.c: 62: inButtonMenu = !inButtonMenu;
  1519  0000F6  501B               	movf	_inButtonMenu,w,c
  1520  0000F8  A4D8               	btfss	status,2,c
  1521  0000FA  D002               	goto	i2u23_40
  1522  0000FC  0E01               	movlw	1
  1523  0000FE  D001               	goto	i2u24_40
  1524  000100                     i2u23_40:
  1525  000100  0E00               	movlw	0
  1526  000102                     i2u24_40:
  1527  000102  6E1B               	movwf	_inButtonMenu,c
  1528                           
  1529                           ;main.c: 63: tmr3_cnt = 0;
  1530  000104  0E00               	movlw	0
  1531  000106  6E17               	movwf	_tmr3_cnt,c
  1532  000108                     i2l148:
  1533                           
  1534                           ;main.c: 64: }
  1535                           ;main.c: 66: buttonPressCount = 0;
  1536  000108  0E00               	movlw	0
  1537  00010A  6E1A               	movwf	_buttonPressCount,c
  1538                           
  1539                           ;main.c: 67: }
  1540  00010C  D00F               	goto	i2l150
  1541  00010E                     i2l135:
  1542                           
  1543                           ;main.c: 68: else if (tmr3_cnt >= 40 && inButtonMenu && buttonPressCount == 0)
  1544  00010E  0E27               	movlw	39
  1545  000110  6417               	cpfsgt	_tmr3_cnt,c
  1546  000112  D00C               	goto	i2l150
  1547  000114  501B               	movf	_inButtonMenu,w,c
  1548  000116  B4D8               	btfsc	status,2,c
  1549  000118  D009               	goto	i2l150
  1550  00011A  501A               	movf	_buttonPressCount,w,c
  1551  00011C  A4D8               	btfss	status,2,c
  1552  00011E  D006               	goto	i2l150
  1553                           
  1554                           ;main.c: 69: {
  1555                           ;main.c: 70: inButtonMenu = 0;
  1556  000120  0E00               	movlw	0
  1557  000122  6E1B               	movwf	_inButtonMenu,c
  1558                           
  1559                           ;main.c: 71: tmr3_cnt = 0;
  1560  000124  0E00               	movlw	0
  1561  000126  6E17               	movwf	_tmr3_cnt,c
  1562                           
  1563                           ;main.c: 72: disable_tmr3();
  1564  000128  EC71  F009         	call	_disable_tmr3	;wreg free
  1565  00012C                     i2l150:
  1566  00012C  C012  F026         	movff	??_isr+17,btemp+3
  1567  000130  C011  F025         	movff	??_isr+16,btemp+2
  1568  000134  C010  F024         	movff	??_isr+15,btemp+1
  1569  000138  C00F  F023         	movff	??_isr+14,btemp
  1570  00013C  C00E  FFF5         	movff	??_isr+13,tablat
  1571  000140  C00D  FFF8         	movff	??_isr+12,tblptru
  1572  000144  C00C  FFF7         	movff	??_isr+11,tblptrh
  1573  000148  C00B  FFF6         	movff	??_isr+10,tblptrl
  1574  00014C  C00A  FFF4         	movff	??_isr+9,prodh
  1575  000150  C009  FFF3         	movff	??_isr+8,prodl
  1576  000154  C008  FFDA         	movff	??_isr+7,fsr2h
  1577  000158  C007  FFD9         	movff	??_isr+6,fsr2l
  1578  00015C  C006  FFE2         	movff	??_isr+5,fsr1h
  1579  000160  C005  FFE1         	movff	??_isr+4,fsr1l
  1580  000164  C004  FFEA         	movff	??_isr+3,fsr0h
  1581  000168  C003  FFE9         	movff	??_isr+2,fsr0l
  1582  00016C  C002  FFFB         	movff	??_isr+1,pclatu
  1583  000170  C001  FFFA         	movff	??_isr,pclath
  1584  000174  9223               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1585  000176  0011               	retfie		f
  1586  000178                     __end_of_isr:
  1587                           	opt stack 0
  1588                           pclatu	equ	0xFFB
  1589                           pclath	equ	0xFFA
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           prodh	equ	0xFF4
  1595                           prodl	equ	0xFF3
  1596                           intcon	equ	0xFF2
  1597                           postinc0	equ	0xFEE
  1598                           fsr0h	equ	0xFEA
  1599                           fsr0l	equ	0xFE9
  1600                           wreg	equ	0xFE8
  1601                           postdec1	equ	0xFE5
  1602                           fsr1h	equ	0xFE2
  1603                           fsr1l	equ	0xFE1
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _reload_timer0 *****************
  1609 ;; Defined at:
  1610 ;;		line 210 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_isr
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text8
  1638  0012F0                     __ptext8:
  1639                           	opt stack 0
  1640  0012F0                     _reload_timer0:
  1641                           	opt stack 26
  1642                           
  1643                           ;main.c: 212: TMR0L = ((65535-781)%256);
  1644                           
  1645                           ;incstack = 0
  1646  0012F0  0EF2               	movlw	242
  1647  0012F2  6ED6               	movwf	4054,c	;volatile
  1648                           
  1649                           ;main.c: 213: TMR0H = ((65535-781)/256);
  1650  0012F4  0EFC               	movlw	252
  1651  0012F6  6ED7               	movwf	4055,c	;volatile
  1652  0012F8  0012               	return		;funcret
  1653  0012FA                     __end_of_reload_timer0:
  1654                           	opt stack 0
  1655                           pclatu	equ	0xFFB
  1656                           pclath	equ	0xFFA
  1657                           tblptru	equ	0xFF8
  1658                           tblptrh	equ	0xFF7
  1659                           tblptrl	equ	0xFF6
  1660                           tablat	equ	0xFF5
  1661                           prodh	equ	0xFF4
  1662                           prodl	equ	0xFF3
  1663                           intcon	equ	0xFF2
  1664                           postinc0	equ	0xFEE
  1665                           fsr0h	equ	0xFEA
  1666                           fsr0l	equ	0xFE9
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1h	equ	0xFE2
  1670                           fsr1l	equ	0xFE1
  1671                           fsr2h	equ	0xFDA
  1672                           fsr2l	equ	0xFD9
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _disable_tmr3 *****************
  1676 ;; Defined at:
  1677 ;;		line 191 in file "main.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_isr
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text9
  1705  0012E2                     __ptext9:
  1706                           	opt stack 0
  1707  0012E2                     _disable_tmr3:
  1708                           	opt stack 26
  1709                           
  1710                           ;main.c: 193: buttonPressCount = 0;
  1711                           
  1712                           ;incstack = 0
  1713  0012E2  0E00               	movlw	0
  1714  0012E4  6E1A               	movwf	_buttonPressCount,c
  1715                           
  1716                           ;main.c: 194: tmr3_cnt = 0;
  1717  0012E6  0E00               	movlw	0
  1718  0012E8  6E17               	movwf	_tmr3_cnt,c
  1719                           
  1720                           ;main.c: 195: T3CONbits.TMR3ON = 0;
  1721  0012EA  90B1               	bcf	4017,0,c	;volatile
  1722                           
  1723                           ;main.c: 196: PIE2bits.TMR3IE = 0;
  1724  0012EC  92A0               	bcf	4000,1,c	;volatile
  1725  0012EE  0012               	return		;funcret
  1726  0012F0                     __end_of_disable_tmr3:
  1727                           	opt stack 0
  1728                           pclatu	equ	0xFFB
  1729                           pclath	equ	0xFFA
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           prodh	equ	0xFF4
  1735                           prodl	equ	0xFF3
  1736                           intcon	equ	0xFF2
  1737                           postinc0	equ	0xFEE
  1738                           fsr0h	equ	0xFEA
  1739                           fsr0l	equ	0xFE9
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1h	equ	0xFE2
  1743                           fsr1l	equ	0xFE1
  1744                           fsr2h	equ	0xFDA
  1745                           fsr2l	equ	0xFD9
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _control_leds *****************
  1749 ;; Defined at:
  1750 ;;		line 65 in file "state.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_isr
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text10
  1778  001080                     __ptext10:
  1779                           	opt stack 0
  1780  001080                     _control_leds:
  1781                           	opt stack 26
  1782                           
  1783                           ;state.c: 67: switch (state)
  1784                           
  1785                           ;incstack = 0
  1786  001080  D054               	goto	i2l669
  1787  001082                     
  1788                           ;state.c: 70: if (waiting)
  1789  001082  5021               	movf	_waiting,w,c
  1790  001084  B4D8               	btfsc	status,2,c
  1791  001086  0012               	return	
  1792  001088  D007               	goto	i2l672
  1793  00108A                     i2l673:
  1794                           
  1795                           ;state.c: 75: LATBbits.LB3=0;
  1796  00108A  968A               	bcf	3978,3,c	;volatile
  1797                           
  1798                           ;state.c: 76: break;
  1799  00108C  D00F               	goto	i2l674
  1800  00108E                     i2l675:
  1801                           
  1802                           ;state.c: 78: LATBbits.LB3=1;
  1803  00108E  868A               	bsf	3978,3,c	;volatile
  1804                           
  1805                           ;state.c: 79: break;
  1806  001090  D00D               	goto	i2l674
  1807  001092                     
  1808                           ;state.c: 81: gled_tmr0_tick = 0;
  1809  001092  0E00               	movlw	0
  1810  001094  6E19               	movwf	_gled_tmr0_tick,c
  1811                           
  1812                           ;state.c: 83: }
  1813                           
  1814                           ;state.c: 82: break;
  1815  001096  D00A               	goto	i2l674
  1816  001098                     i2l672:
  1817  001098  5019               	movf	_gled_tmr0_tick,w,c
  1818                           
  1819                           ; Switch size 1, requested type "space"
  1820                           ; Number of cases is 3, Range of values is 1 to 20
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           10     6 (average)
  1824                           ;	Chosen strategy is simple_byte
  1825  00109A  0A01               	xorlw	1	; case 1
  1826  00109C  B4D8               	btfsc	status,2,c
  1827  00109E  D7F5               	goto	i2l673
  1828  0010A0  0A04               	xorlw	4	; case 5
  1829  0010A2  B4D8               	btfsc	status,2,c
  1830  0010A4  D7F4               	goto	i2l675
  1831  0010A6  0A11               	xorlw	17	; case 20
  1832  0010A8  B4D8               	btfsc	status,2,c
  1833  0010AA  D7F3               	goto	i2l676
  1834  0010AC                     i2l674:
  1835                           
  1836                           ;state.c: 84: LATCbits.LC4=1;
  1837  0010AC  888B               	bsf	3979,4,c	;volatile
  1838                           
  1839                           ;state.c: 85: bled_tmr0_tick = 0;
  1840  0010AE  0E00               	movlw	0
  1841  0010B0  6E18               	movwf	_bled_tmr0_tick,c
  1842                           
  1843                           ;state.c: 86: }
  1844                           ;state.c: 87: break;
  1845  0010B2  0012               	return	
  1846  0010B4                     i2l680:
  1847                           
  1848                           ;state.c: 93: LATCbits.LC4=0;
  1849  0010B4  988B               	bcf	3979,4,c	;volatile
  1850                           
  1851                           ;state.c: 94: break;
  1852  0010B6  D00B               	goto	i2l681
  1853  0010B8                     i2l682:
  1854                           
  1855                           ;state.c: 96: LATCbits.LC4=1;
  1856  0010B8  888B               	bsf	3979,4,c	;volatile
  1857                           
  1858                           ;state.c: 97: bled_tmr0_tick = 0;
  1859  0010BA  0E00               	movlw	0
  1860  0010BC  6E18               	movwf	_bled_tmr0_tick,c
  1861                           
  1862                           ;state.c: 99: }
  1863                           
  1864                           ;state.c: 98: break;
  1865  0010BE  D007               	goto	i2l681
  1866  0010C0  5018               	movf	_bled_tmr0_tick,w,c
  1867                           
  1868                           ; Switch size 1, requested type "space"
  1869                           ; Number of cases is 2, Range of values is 1 to 2
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte            7     4 (average)
  1873                           ;	Chosen strategy is simple_byte
  1874  0010C2  0A01               	xorlw	1	; case 1
  1875  0010C4  B4D8               	btfsc	status,2,c
  1876  0010C6  D7F6               	goto	i2l680
  1877  0010C8  0A03               	xorlw	3	; case 2
  1878  0010CA  B4D8               	btfsc	status,2,c
  1879  0010CC  D7F5               	goto	i2l682
  1880  0010CE                     i2l681:
  1881                           
  1882                           ;state.c: 100: LATBbits.LB3=1;
  1883  0010CE  868A               	bsf	3978,3,c	;volatile
  1884                           
  1885                           ;state.c: 101: gled_tmr0_tick = 0;
  1886  0010D0  0E00               	movlw	0
  1887  0010D2  6E19               	movwf	_gled_tmr0_tick,c
  1888                           
  1889                           ;state.c: 102: break;
  1890  0010D4  0012               	return	
  1891  0010D6                     i2l685:
  1892                           
  1893                           ;state.c: 108: LATCbits.LC4=0;
  1894  0010D6  988B               	bcf	3979,4,c	;volatile
  1895                           
  1896                           ;state.c: 109: break;
  1897  0010D8  D00F               	goto	i2l686
  1898  0010DA                     i2l687:
  1899                           
  1900                           ;state.c: 111: LATCbits.LC4=1;
  1901  0010DA  888B               	bsf	3979,4,c	;volatile
  1902                           
  1903                           ;state.c: 112: break;
  1904  0010DC  D00D               	goto	i2l686
  1905  0010DE                     
  1906                           ;state.c: 114: bled_tmr0_tick = 0;
  1907  0010DE  0E00               	movlw	0
  1908  0010E0  6E18               	movwf	_bled_tmr0_tick,c
  1909                           
  1910                           ;state.c: 116: }
  1911                           
  1912                           ;state.c: 115: break;
  1913  0010E2  D00A               	goto	i2l686
  1914  0010E4  5018               	movf	_bled_tmr0_tick,w,c
  1915                           
  1916                           ; Switch size 1, requested type "space"
  1917                           ; Number of cases is 3, Range of values is 1 to 20
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte           10     6 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  0010E6  0A01               	xorlw	1	; case 1
  1923  0010E8  B4D8               	btfsc	status,2,c
  1924  0010EA  D7F5               	goto	i2l685
  1925  0010EC  0A04               	xorlw	4	; case 5
  1926  0010EE  B4D8               	btfsc	status,2,c
  1927  0010F0  D7F4               	goto	i2l687
  1928  0010F2  0A11               	xorlw	17	; case 20
  1929  0010F4  B4D8               	btfsc	status,2,c
  1930  0010F6  D7F3               	goto	i2l688
  1931  0010F8                     i2l686:
  1932                           
  1933                           ;state.c: 117: LATBbits.LB3=0;
  1934  0010F8  968A               	bcf	3978,3,c	;volatile
  1935                           
  1936                           ;state.c: 118: gled_tmr0_tick = 0;
  1937  0010FA  0E00               	movlw	0
  1938  0010FC  6E19               	movwf	_gled_tmr0_tick,c
  1939                           
  1940                           ;state.c: 119: break;
  1941  0010FE  0012               	return	
  1942  001100                     i2l691:
  1943                           
  1944                           ;state.c: 125: LATBbits.LB3=0;
  1945  001100  968A               	bcf	3978,3,c	;volatile
  1946                           
  1947                           ;state.c: 126: break;
  1948  001102  D00F               	goto	i2l692
  1949  001104                     i2l693:
  1950                           
  1951                           ;state.c: 128: LATBbits.LB3=1;
  1952  001104  868A               	bsf	3978,3,c	;volatile
  1953                           
  1954                           ;state.c: 129: break;
  1955  001106  D00D               	goto	i2l692
  1956  001108                     
  1957                           ;state.c: 131: gled_tmr0_tick = 0;
  1958  001108  0E00               	movlw	0
  1959  00110A  6E19               	movwf	_gled_tmr0_tick,c
  1960                           
  1961                           ;state.c: 133: }
  1962                           
  1963                           ;state.c: 132: break;
  1964  00110C  D00A               	goto	i2l692
  1965  00110E  5019               	movf	_gled_tmr0_tick,w,c
  1966                           
  1967                           ; Switch size 1, requested type "space"
  1968                           ; Number of cases is 3, Range of values is 1 to 20
  1969                           ; switch strategies available:
  1970                           ; Name         Instructions Cycles
  1971                           ; simple_byte           10     6 (average)
  1972                           ;	Chosen strategy is simple_byte
  1973  001110  0A01               	xorlw	1	; case 1
  1974  001112  B4D8               	btfsc	status,2,c
  1975  001114  D7F5               	goto	i2l691
  1976  001116  0A04               	xorlw	4	; case 5
  1977  001118  B4D8               	btfsc	status,2,c
  1978  00111A  D7F4               	goto	i2l693
  1979  00111C  0A11               	xorlw	17	; case 20
  1980  00111E  B4D8               	btfsc	status,2,c
  1981  001120  D7F3               	goto	i2l694
  1982  001122                     i2l692:
  1983                           
  1984                           ;state.c: 134: LATCbits.LC4=0;
  1985  001122  988B               	bcf	3979,4,c	;volatile
  1986                           
  1987                           ;state.c: 135: bled_tmr0_tick = 0;
  1988  001124  0E00               	movlw	0
  1989  001126  6E18               	movwf	_bled_tmr0_tick,c
  1990                           
  1991                           ;state.c: 137: }
  1992                           
  1993                           ;state.c: 136: break;
  1994  001128  0012               	return	
  1995  00112A                     i2l669:
  1996  00112A  5016               	movf	_state,w,c
  1997                           
  1998                           ; Switch size 1, requested type "space"
  1999                           ; Number of cases is 4, Range of values is 0 to 3
  2000                           ; switch strategies available:
  2001                           ; Name         Instructions Cycles
  2002                           ; simple_byte           13     7 (average)
  2003                           ;	Chosen strategy is simple_byte
  2004  00112C  0A00               	xorlw	0	; case 0
  2005  00112E  B4D8               	btfsc	status,2,c
  2006  001130  D7A8               	goto	i2l670
  2007  001132  0A01               	xorlw	1	; case 1
  2008  001134  B4D8               	btfsc	status,2,c
  2009  001136  D7C4               	goto	i2l679
  2010  001138  0A03               	xorlw	3	; case 2
  2011  00113A  B4D8               	btfsc	status,2,c
  2012  00113C  D7D3               	goto	i2l684
  2013  00113E  0A01               	xorlw	1	; case 3
  2014  001140  A4D8               	btfss	status,2,c
  2015  001142  0012               	return	
  2016  001144  D7E4               	goto	i2l690
  2017  001146                     __end_of_control_leds:
  2018                           	opt stack 0
  2019                           pclatu	equ	0xFFB
  2020                           pclath	equ	0xFFA
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           intcon	equ	0xFF2
  2028                           postinc0	equ	0xFEE
  2029                           fsr0h	equ	0xFEA
  2030                           fsr0l	equ	0xFE9
  2031                           wreg	equ	0xFE8
  2032                           postdec1	equ	0xFE5
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           fsr2h	equ	0xFDA
  2036                           fsr2l	equ	0xFD9
  2037                           status	equ	0xFD8
  2038                           pclatu	equ	0xFFB
  2039                           pclath	equ	0xFFA
  2040                           tblptru	equ	0xFF8
  2041                           tblptrh	equ	0xFF7
  2042                           tblptrl	equ	0xFF6
  2043                           tablat	equ	0xFF5
  2044                           prodh	equ	0xFF4
  2045                           prodl	equ	0xFF3
  2046                           intcon	equ	0xFF2
  2047                           postinc0	equ	0xFEE
  2048                           fsr0h	equ	0xFEA
  2049                           fsr0l	equ	0xFE9
  2050                           wreg	equ	0xFE8
  2051                           postdec1	equ	0xFE5
  2052                           fsr1h	equ	0xFE2
  2053                           fsr1l	equ	0xFE1
  2054                           fsr2h	equ	0xFDA
  2055                           fsr2l	equ	0xFD9
  2056                           status	equ	0xFD8
  2057                           
  2058                           	psect	rparam
  2059  0000                     pclatu	equ	0xFFB
  2060                           pclath	equ	0xFFA
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           prodh	equ	0xFF4
  2066                           prodl	equ	0xFF3
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           fsr0h	equ	0xFEA
  2070                           fsr0l	equ	0xFE9
  2071                           wreg	equ	0xFE8
  2072                           postdec1	equ	0xFE5
  2073                           fsr1h	equ	0xFE2
  2074                           fsr1l	equ	0xFE1
  2075                           fsr2h	equ	0xFDA
  2076                           fsr2l	equ	0xFD9
  2077                           status	equ	0xFD8
  2078                           
  2079                           	psect	temp
  2080  000023                     btemp:
  2081                           	opt stack 0
  2082  000023                     	ds	1
  2083  0000                     int$flags	set	btemp
  2084  0000                     wtemp6	set	btemp+1
  2085                           pclatu	equ	0xFFB
  2086                           pclath	equ	0xFFA
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           prodh	equ	0xFF4
  2092                           prodl	equ	0xFF3
  2093                           intcon	equ	0xFF2
  2094                           postinc0	equ	0xFEE
  2095                           fsr0h	equ	0xFEA
  2096                           fsr0l	equ	0xFE9
  2097                           wreg	equ	0xFE8
  2098                           postdec1	equ	0xFE5
  2099                           fsr1h	equ	0xFE2
  2100                           fsr1l	equ	0xFE1
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    126
    Data        7
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      34
    BANK0           160      0     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_check_state

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _check_state
                           _init_pic
                       _init_uart_md
 ---------------------------------------------------------------------------------
 (1) _init_uart_md                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
                        _enable_ints
 ---------------------------------------------------------------------------------
 (2) _enable_ints                                          0     0      0       0
                       _start_timer0
 ---------------------------------------------------------------------------------
 (3) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_state                                          1     1      0       0
                                             18 COMRAM     1     1      0
                  _reload_tmr3_pt25s
 ---------------------------------------------------------------------------------
 (2) _reload_tmr3_pt25s                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 18    18      0       0
                                              0 COMRAM    18    18      0
                       _control_leds
                       _disable_tmr3
                      _reload_timer0
 ---------------------------------------------------------------------------------
 (5) _reload_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _disable_tmr3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _control_leds                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_state
     _reload_tmr3_pt25s
   _init_pic
     _enable_ints
       _start_timer0
   _init_uart_md

 _isr (ROOT)
   _control_leds
   _disable_tmr3
   _reload_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      22       1       36.2%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86      12        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Sep 17 16:36:32 2018

                 ??_disable_tmr3 0001            __size_of_start_timer0 0014  
          _default_SMS_WAIT_TIME 1076                      __CFG_CP0$ON 000000  
                    __CFG_CP1$ON 000000                      __CFG_CP2$ON 000000  
                    __CFG_CP3$ON 000000                      __CFG_CPB$ON 000000  
                             _RD 007D30                      __CFG_CPD$ON 000000  
                             _WR 007D31                              l156 12DC  
                            l660 11A2                              l661 11A6  
                            l654 11B0                              l655 1148  
                            l656 1178                              l657 1174  
                            l659 1190                              _GIE 007F97  
                            _isr 0008                              wreg 000FE8  
                     _TXSTA1bits 000FAC     __end_ofwakeup_modem_ok@F6751 1060  
   __end_ofwakeup_modem_ok@F6753 1021             __end_of_default_ACCT 1055  
                   __CFG_LVP$OFF 000000                             ?_isr 0001  
                           _CFGS 007D36                             u1207 115C  
                           u1217 117E                             _WREN 007D32  
                           _main 12D4               _buttonStillPressed 0014  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0023                     _start_timer0 12B0  
                  __CFG_BORV$190 000000                             prodh 000FF4  
                           prodl 000FF3                             start 0178  
                  __CFG_IESO$OFF 000000            __end_of_default_CYCLE 1079  
                   ___param_bank 000000            __end_of_default_RETRY 1078  
          __end_of_default_PORT1 106B            __end_of_default_PORT2 1069  
          __end_of_default_PORT3 1067            __end_of_default_PORT4 1065  
          __end_of_default_ZONE1 107C            __end_of_default_ZONE2 107B  
                          ??_isr 0001                     _BAUDCON1bits 000FB8  
    __end_of_default_PROGRAM_ACK 107F                    ?_control_leds 0001  
                          ?_main 0001                            _EEADR 000FA9  
                 _default_TP_PIN 1079                            _EEPGD 007D37  
                          _CREN1 007D5C                            _T0CON 000FD5  
                          _T3CON 000FB1                            _RC1IE 007CED  
                          _RC1IF 007CF5                            i2l140 00A0  
                          i2l133 0064                            i2l150 012C  
                          i2l142 00BA                            i2l135 010E  
                          i2l144 00D6                            i2l146 00EE  
                          i2l148 0108                            i2l670 1082  
                          i2l680 10B4                            i2l672 1098  
                          i2l681 10CE                            i2l673 108A  
                          i2l690 110E                            i2l682 10B8  
                          i2l674 10AC                            i2l691 1100  
                          i2l675 108E                            i2l692 1122  
                          i2l684 10E4                            i2l676 1092  
                          i2l669 112A                            i2l693 1104  
                          i2l685 10D6                            i2l694 1108  
                          i2l686 10F8                            i2l687 10DA  
                          i2l679 10C0                            i2l688 10DE  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
                          _TMR3H 000FB3                            _TMR3L 000FB2  
                          _TRMT1 007D61                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
           __size_of_check_state 0082               __CFG_MCLRE$INTMCLR 000000  
                          _state 0016                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
                          wtemp6 0024                   __CFG_HFOFST$ON 000000  
                __initialization 121E                     __end_of_main 12E2  
          __end_of_reload_timer0 12FA    __end_ofinit_modem_io_ok@F6760 1011  
  __end_ofinit_modem_io_ok@F6762 104F    __end_ofinit_modem_io_ok@F6764 103A  
         __end_of_default_TP_PIN 107A                   ??_control_leds 0001  
                 _bled_tmr0_tick 0018                           ??_main 0014  
                  __activetblptr 000002             __size_of_enable_ints 0026  
           __end_of_disable_tmr3 12F0                           _EEADRH 000FAA  
                         _EEDATA 000FA8                           _EECON2 000FA7  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                           _RC1REG 000FAE  
                         _INTCON 000FF2                           _TMR0IE 007F95  
                         _SPBRG1 000FAF                           _TMR0IF 007F92  
                         _TMR3IF 007D09                   __CFG_WDTPS$256 000000  
                         _TMR3ON 007D88                           _TX1REG 000FAD  
                  ?_init_uart_md 0001                   __CFG_XINST$OFF 000000  
           wakeup_modem_ok@F6751 105B             wakeup_modem_ok@F6753 1011  
                 __CFG_STVREN$ON 000000                 __end_of_init_pic 121E  
                         clear_0 1244                           clear_1 1250  
             _default_ENCRYPTION 1075                     __pdataCOMRAM 001C  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
            _default_ACCESS_CODE 1055                       __accesstop 0060  
        __end_of__initialization 1256                  __CFG_PBADEN$OFF 000000  
                 ??_init_uart_md 0013                    ___rparam_used 000001  
                   _default_ACCT 104F                   __pcstackCOMRAM 0001  
                     __pbssBANK0 0060                  __CFG_PLLCFG$OFF 000000  
           __end_of_control_leds 1146               __CFG_CCP2MX$PORTC1 000000  
             __CFG_CCP3MX$PORTB5 000000            __size_of_disable_tmr3 000E  
                __CFG_WDTEN$SWON 000000                          i2u12_40 007E  
                        i2u13_40 0084                          i2u23_40 0100  
                        i2u24_40 0102                          _SPBRGH1 000FB0  
                        _VERSION 001C                     _inButtonMenu 001B  
                      ?_init_pic 0001                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
                   _disable_tmr3 12E2                     __psmallconst 1000  
                        __pcinit 121E                          __ramtop 1000  
                        __ptext0 12D4                          __ptext1 1264  
                        __ptext2 11C8                          __ptext3 128A  
                        __ptext4 12B0                          __ptext5 1146  
                        __ptext6 12C4                          __ptext8 12F0  
                        __ptext9 12E2                     __size_of_isr 0170  
                      _T3CONbits 000FB1             __end_of_init_uart_md 128A  
                  ??_check_state 0013                 sim_card_ok@F6771 1021  
               sim_card_ok@F6769 103A          _default_SERVER_ACK_TIME 107C  
                        _waiting 0021             end_of_initialization 1256  
                  __Lmediumconst 0000                       ??_init_pic 0013  
                        postdec1 000FE5                          postinc0 000FEE  
               _buttonPressCount 001A            init_modem_io_ok@F6760 1001  
          init_modem_io_ok@F6762 1045            init_modem_io_ok@F6764 102E  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
                      _PORTCbits 000F82                    ??_enable_ints 0013  
               __CFG_FOSC$INTIO7 000000                        _TRISAbits 000F92  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
          __size_of_control_leds 00C6           __size_of_reload_timer0 000A  
            __end_of_check_state 11C8              __end_of_default_APN 1075  
            __end_of_default_IP1 1073              __end_of_default_IP2 1071  
            __end_of_default_IP3 106F              __end_of_default_IP4 106D  
                  _default_CYCLE 1078                    _default_RETRY 1077  
                  _default_PORT1 1069                    _default_PORT2 1067  
                  _default_PORT3 1065                    _default_PORT4 1063  
                  _default_ZONE1 107B                    _default_ZONE2 107A  
                    _BAUDCONbits 000FB8                    __pidataCOMRAM 12FA  
                   _control_leds 1080              start_initialization 121E  
                    __end_of_isr 0178              __end_of_enable_ints 12B0  
                  ?_start_timer0 0001                    _reload_timer0 12F0  
          __size_of_init_uart_md 0026                      __pbssCOMRAM 0014  
                    _check_state 1146                _default_LINE_CARD 1060  
                    _default_APN 1073                      _default_IP1 1071  
                    _default_IP2 106F                      _default_IP3 106D  
                    _default_IP4 106B                   ??_start_timer0 0013  
__end_of_default_SERVER_ACK_TIME 107D      __end_of_default_ACCESS_CODE 105B  
              __size_of_init_pic 0056                     _init_uart_md 1264  
  __end_of_default_SMS_WAIT_TIME 1077         __end_ofsim_card_ok@F6771 102E  
       __end_ofsim_card_ok@F6769 1045                        __pintcode 0008  
            _default_PROGRAM_ACK 107E                _default_TEST_FREQ 107D  
                 ?_reload_timer0 0001                 __CFG_PRICLKEN$ON 000000  
      __end_of_default_LINE_CARD 1063                      __smallconst 1000  
                    _enable_ints 128A                         _LATAbits 000F89  
                       _LATBbits 000F8A                         _LATCbits 000F8B  
                       _PIE2bits 000FA0        __end_of_default_TEST_FREQ 107E  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
              _reload_tmr3_pt25s 12C4                        _returnStr 0060  
                      _toggleLED 0022               ?_reload_tmr3_pt25s 0001  
            ??_reload_tmr3_pt25s 0013                        copy_data0 1232  
                       __Hrparam 0000        __end_of_reload_tmr3_pt25s 12D4  
                ??_reload_timer0 0001                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000                __CFG_P2BMX$PORTB5 000000  
           __end_of_start_timer0 12C4                   _gled_tmr0_tick 0019  
                       __ptext10 1080                    __size_of_main 000E  
                       _init_pic 11C8                   _saveINTCONbits 0015  
                       _tmr3_cnt 0017                       _RC1STAbits 000FAB  
                       int$flags 0023                       _INTCONbits 000FF2  
                   ?_check_state 0001                         intlevel2 0000  
                     _RCSTA1bits 000FAB       __end_of_default_ENCRYPTION 1076  
                     _OSCCONbits 000FD3       __size_of_reload_tmr3_pt25s 0010  
                  ?_disable_tmr3 0001                     ?_enable_ints 0001  
              __CFG_T3CMX$PORTC0 000000  
