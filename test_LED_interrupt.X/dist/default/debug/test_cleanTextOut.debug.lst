

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 25 14:40:24 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F26K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0010F8                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _B_LED_STATE
    61  0010F8  01                 	db	1
    62                           
    63                           ;initializer for _G_LED_STATE
    64  0010F9  01                 	db	1
    65                           
    66                           	psect	smallconst
    67  001000                     __psmallconst:
    68                           	opt stack 0
    69  001000  00                 	db	0
    70  001001                     _scfg:
    71                           	opt stack 0
    72  001001  41                 	db	65
    73  001002  54                 	db	84
    74  001003  23                 	db	35
    75  001004  53                 	db	83
    76  001005  43                 	db	67
    77  001006  46                 	db	70
    78  001007  47                 	db	71
    79  001008  3D                 	db	61
    80  001009  31                 	db	49
    81  00100A  2C                 	db	44
    82  00100B  33                 	db	51
    83  00100C  2C                 	db	44
    84  00100D  33                 	db	51
    85  00100E  30                 	db	48
    86  00100F  30                 	db	48
    87  001010  2C                 	db	44
    88  001011  39                 	db	57
    89  001012  30                 	db	48
    90  001013  2C                 	db	44
    91  001014  36                 	db	54
    92  001015  30                 	db	48
    93  001016  30                 	db	48
    94  001017  2C                 	db	44
    95  001018  35                 	db	53
    96  001019  30                 	db	48
    97  00101A  0D                 	db	13
    98  00101B  0A                 	db	10
    99  00101C  00                 	db	0
   100  00101D                     __end_of_scfg:
   101                           	opt stack 0
   102  00101D                     _cgdcont:
   103                           	opt stack 0
   104  00101D  41                 	db	65
   105  00101E  54                 	db	84
   106  00101F  2B                 	db	43
   107  001020  43                 	db	67
   108  001021  47                 	db	71
   109  001022  44                 	db	68
   110  001023  43                 	db	67
   111  001024  4F                 	db	79
   112  001025  4E                 	db	78
   113  001026  54                 	db	84
   114  001027  3D                 	db	61
   115  001028  33                 	db	51
   116  001029  2C                 	db	44
   117  00102A  22                 	db	34
   118  00102B  49                 	db	73
   119  00102C  50                 	db	80
   120  00102D  22                 	db	34
   121  00102E  2C                 	db	44
   122  00102F  22                 	db	34
   123  001030  00                 	db	0
   124  001031                     __end_of_cgdcont:
   125                           	opt stack 0
   126  001031                     _sgact:
   127                           	opt stack 0
   128  001031  41                 	db	65
   129  001032  54                 	db	84
   130  001033  23                 	db	35
   131  001034  53                 	db	83
   132  001035  47                 	db	71
   133  001036  41                 	db	65
   134  001037  43                 	db	67
   135  001038  54                 	db	84
   136  001039  3D                 	db	61
   137  00103A  33                 	db	51
   138  00103B  2C                 	db	44
   139  00103C  31                 	db	49
   140  00103D  0D                 	db	13
   141  00103E  0A                 	db	10
   142  00103F  00                 	db	0
   143  001040                     __end_of_sgact:
   144                           	opt stack 0
   145  0000                     _ANSELB	set	3897
   146  0000                     _ANSELC	set	3898
   147  0000                     _ANSELA	set	3896
   148  0000                     _INTCONbits	set	4082
   149  0000                     _TMR0H	set	4055
   150  0000                     _TMR0L	set	4054
   151  0000                     _T0CON	set	4053
   152  0000                     _LATBbits	set	3978
   153  0000                     _LATCbits	set	3979
   154  0000                     _TRISCbits	set	3988
   155  0000                     _TRISBbits	set	3987
   156  0000                     _PORTAbits	set	3968
   157  0000                     _TRISAbits	set	3986
   158  0000                     _OSCCONbits	set	4051
   159  0000                     _WDTCONbits	set	4049
   160  0000                     _PORTCbits	set	3970
   161  0000                     _PORTBbits	set	3969
   162  0000                     _INTCON3bits	set	4080
   163  0000                     _TMR0IE	set	32661
   164  0000                     _TMR0IF	set	32658
   165                           
   166                           ; #config settings
   167  001040  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           	psect	cinit
   170  001094                     __pcinit:
   171                           	opt stack 0
   172  001094                     start_initialization:
   173                           	opt stack 0
   174  001094                     __initialization:
   175                           	opt stack 0
   176                           
   177                           ; Initialize objects allocated to COMRAM (2 bytes)
   178                           ; load TBLPTR registers with __pidataCOMRAM
   179  001094  0EF8               	movlw	low __pidataCOMRAM
   180  001096  6EF6               	movwf	tblptrl,c
   181  001098  0E10               	movlw	high __pidataCOMRAM
   182  00109A  6EF7               	movwf	tblptrh,c
   183  00109C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   184  00109E  6EF8               	movwf	tblptru,c
   185  0010A0  0009               	tblrd		*+	;fetch initializer
   186  0010A2  CFF5 F015          	movff	tablat,__pdataCOMRAM
   187  0010A6  0009               	tblrd		*+	;fetch initializer
   188  0010A8  CFF5 F016          	movff	tablat,__pdataCOMRAM+1
   189                           
   190                           ; Clear objects allocated to COMRAM (2 bytes)
   191  0010AC  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
   192  0010AE  6A13               	clrf	__pbssCOMRAM& (0+255),c
   193  0010B0                     end_of_initialization:
   194                           	opt stack 0
   195  0010B0                     __end_of__initialization:
   196                           	opt stack 0
   197  0010B0  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   198  0010B2  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   199  0010B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  0010B6  6EF8               	movwf	tblptru,c
   201  0010B8  0100               	movlb	0
   202  0010BA  EF69  F008         	goto	_main	;jump to C main() function
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           
   208                           	psect	bssCOMRAM
   209  000013                     __pbssCOMRAM:
   210                           	opt stack 0
   211  000013                     _bled_tmr0_tick:
   212                           	opt stack 0
   213  000013                     	ds	1
   214  000014                     _gled_tmr0_tick:
   215                           	opt stack 0
   216  000014                     	ds	1
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           
   222                           	psect	dataCOMRAM
   223  000015                     __pdataCOMRAM:
   224                           	opt stack 0
   225  000015                     _B_LED_STATE:
   226                           	opt stack 0
   227  000015                     	ds	1
   228  000016                     _G_LED_STATE:
   229                           	opt stack 0
   230  000016                     	ds	1
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           
   236                           	psect	cstackCOMRAM
   237  000001                     __pcstackCOMRAM:
   238                           	opt stack 0
   239  000001                     ??_isr:
   240  000001                     
   241                           ; 1 bytes @ 0x0
   242  000001                     	ds	18
   243  000013                     tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           
   248                           ; 1 bytes @ 0x12
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 53 in file "main.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;		None
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;Total ram usage:        0 bytes
   273 ;; Hardware stack levels required when called:    3
   274 ;; This function calls:
   275 ;;		_init_pic
   276 ;;		_reload_timer0
   277 ;;		_start_timer0
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text0
   284  0010D2                     __ptext0:
   285                           	opt stack 0
   286  0010D2                     _main:
   287                           	opt stack 28
   288                           
   289                           ;main.c: 55: init_pic();
   290                           
   291                           ;incstack = 0
   292  0010D2  EC21  F008         	call	_init_pic	;wreg free
   293                           
   294                           ;main.c: 58: start_timer0();
   295  0010D6  EC5F  F008         	call	_start_timer0	;wreg free
   296                           
   297                           ;main.c: 59: reload_timer0();
   298  0010DA  EC72  F008         	call	_reload_timer0	;wreg free
   299                           
   300                           ;main.c: 61: WDTCONbits.SWDTEN = 0;
   301  0010DE  90D1               	bcf	4049,0,c	;volatile
   302  0010E0  0004               	clrwdt		;# 
   303  0010E2                     l82:
   304                           
   305                           ;main.c: 69: {
   306  0010E2  D7FF               	goto	l82
   307  0010E4                     __end_of_main:
   308                           	opt stack 0
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           
   314 ;; *************** function _start_timer0 *****************
   315 ;; Defined at:
   316 ;;		line 161 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; Hardware stack levels required when called:    2
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text1
   345  0010BE                     __ptext1:
   346                           	opt stack 0
   347  0010BE                     _start_timer0:
   348                           	opt stack 28
   349                           
   350                           ;main.c: 163: T0CON = 0x87;
   351                           
   352                           ;incstack = 0
   353  0010BE  0E87               	movlw	135
   354  0010C0  6ED5               	movwf	4053,c	;volatile
   355                           
   356                           ;main.c: 164: TMR0L = ((65535-780)%256);
   357  0010C2  0EF3               	movlw	243
   358  0010C4  6ED6               	movwf	4054,c	;volatile
   359                           
   360                           ;main.c: 165: TMR0H = ((65535-780)/256);
   361  0010C6  0EFC               	movlw	252
   362  0010C8  6ED7               	movwf	4055,c	;volatile
   363                           
   364                           ;main.c: 166: TMR0IF = 0;
   365  0010CA  94F2               	bcf	intcon,2,c	;volatile
   366                           
   367                           ;main.c: 167: TMR0IE = 1;
   368  0010CC  8AF2               	bsf	intcon,5,c	;volatile
   369                           
   370                           ;main.c: 168: INTCONbits.GIE = 1;
   371  0010CE  8EF2               	bsf	intcon,7,c	;volatile
   372  0010D0  0012               	return		;funcret
   373  0010D2                     __end_of_start_timer0:
   374                           	opt stack 0
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           intcon	equ	0xFF2
   380                           
   381 ;; *************** function _reload_timer0 *****************
   382 ;; Defined at:
   383 ;;		line 172 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    2
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text2
   412  0010E4                     __ptext2:
   413                           	opt stack 0
   414  0010E4                     _reload_timer0:
   415                           	opt stack 28
   416                           
   417                           ;main.c: 174: TMR0L = ((65535-780)%256);
   418                           
   419                           ;incstack = 0
   420  0010E4  0EF3               	movlw	243
   421  0010E6  6ED6               	movwf	4054,c	;volatile
   422                           
   423                           ;main.c: 175: TMR0H = ((65535-780)/256);
   424  0010E8  0EFC               	movlw	252
   425  0010EA  6ED7               	movwf	4055,c	;volatile
   426  0010EC  0012               	return		;funcret
   427  0010EE                     __end_of_reload_timer0:
   428                           	opt stack 0
   429                           tblptru	equ	0xFF8
   430                           tblptrh	equ	0xFF7
   431                           tblptrl	equ	0xFF6
   432                           tablat	equ	0xFF5
   433                           intcon	equ	0xFF2
   434                           
   435 ;; *************** function _init_pic *****************
   436 ;; Defined at:
   437 ;;		line 85 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used:    1
   457 ;; Hardware stack levels required when called:    2
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text3
   466  001042                     __ptext3:
   467                           	opt stack 0
   468  001042                     _init_pic:
   469                           	opt stack 28
   470                           
   471                           ;main.c: 88: OSCCONbits.IDLEN = 0;
   472                           
   473                           ;incstack = 0
   474  001042  9ED3               	bcf	4051,7,c	;volatile
   475                           
   476                           ;main.c: 89: OSCCONbits.IRCF = 0b110;
   477  001044  50D3               	movf	4051,w,c	;volatile
   478  001046  0B8F               	andlw	-113
   479  001048  0960               	iorlw	96
   480  00104A  6ED3               	movwf	4051,c	;volatile
   481                           
   482                           ;main.c: 90: OSCCONbits.OSTS = 1;
   483  00104C  86D3               	bsf	4051,3,c	;volatile
   484                           
   485                           ;main.c: 94: ANSELA = 0x01;
   486  00104E  0E01               	movlw	1
   487  001050  010F               	movlb	15	; () banked
   488  001052  6F38               	movwf	56,b	;volatile
   489                           
   490                           ; BSR set to: 15
   491                           ;main.c: 96: TRISAbits.TRISA0 = 1;
   492  001054  8092               	bsf	3986,0,c	;volatile
   493                           
   494                           ; BSR set to: 15
   495                           ;main.c: 97: TRISAbits.TRISA3 = 0;
   496  001056  9692               	bcf	3986,3,c	;volatile
   497                           
   498                           ; BSR set to: 15
   499                           ;main.c: 98: PORTAbits.RA3 = 0;
   500  001058  9680               	bcf	3968,3,c	;volatile
   501                           
   502                           ;main.c: 101: ANSELC = 0x00;
   503  00105A  0E00               	movlw	0
   504  00105C  6F3A               	movwf	58,b	;volatile
   505                           
   506                           ; BSR set to: 15
   507                           ;main.c: 102: PORTBbits.RB3 = 1;
   508  00105E  8681               	bsf	3969,3,c	;volatile
   509                           
   510                           ; BSR set to: 15
   511                           ;main.c: 103: TRISBbits.TRISB3 = 0;
   512  001060  9693               	bcf	3987,3,c	;volatile
   513                           
   514                           ; BSR set to: 15
   515                           ;main.c: 104: PORTCbits.RC6 = 1;
   516  001062  8C82               	bsf	3970,6,c	;volatile
   517                           
   518                           ; BSR set to: 15
   519                           ;main.c: 105: TRISCbits.TRISC6 = 0;
   520  001064  9C94               	bcf	3988,6,c	;volatile
   521                           
   522                           ; BSR set to: 15
   523                           ;main.c: 106: LATCbits.LATC7 = 1;
   524  001066  8E8B               	bsf	3979,7,c	;volatile
   525                           
   526                           ; BSR set to: 15
   527                           ;main.c: 107: TRISCbits.TRISC7 = 1;
   528  001068  8E94               	bsf	3988,7,c	;volatile
   529                           
   530                           ;main.c: 110: ANSELB = 0x00;
   531  00106A  0E00               	movlw	0
   532  00106C  6F39               	movwf	57,b	;volatile
   533                           
   534                           ; BSR set to: 15
   535                           ;main.c: 112: TRISBbits.TRISB0 = 1;
   536  00106E  8093               	bsf	3987,0,c	;volatile
   537                           
   538                           ; BSR set to: 15
   539                           ;main.c: 113: TRISCbits.TRISC1 = 1;
   540  001070  8294               	bsf	3988,1,c	;volatile
   541                           
   542                           ; BSR set to: 15
   543                           ;main.c: 114: LATBbits.LB1 = 1;
   544  001072  828A               	bsf	3978,1,c	;volatile
   545                           
   546                           ; BSR set to: 15
   547                           ;main.c: 115: TRISBbits.TRISB1 = 1;
   548  001074  8293               	bsf	3987,1,c	;volatile
   549                           
   550                           ; BSR set to: 15
   551                           ;main.c: 116: LATBbits.LATB2 = 1;
   552  001076  848A               	bsf	3978,2,c	;volatile
   553                           
   554                           ; BSR set to: 15
   555                           ;main.c: 117: TRISBbits.TRISB2 = 1;
   556  001078  8493               	bsf	3987,2,c	;volatile
   557                           
   558                           ; BSR set to: 15
   559                           ;main.c: 118: PORTCbits.RC4 = 1;
   560  00107A  8882               	bsf	3970,4,c	;volatile
   561                           
   562                           ; BSR set to: 15
   563                           ;main.c: 119: TRISCbits.TRISC4 = 0;
   564  00107C  9894               	bcf	3988,4,c	;volatile
   565                           
   566                           ; BSR set to: 15
   567                           ;main.c: 120: LATBbits.LATB4 = 1;
   568  00107E  888A               	bsf	3978,4,c	;volatile
   569                           
   570                           ; BSR set to: 15
   571                           ;main.c: 121: TRISBbits.TRISB4 = 1;
   572  001080  8893               	bsf	3987,4,c	;volatile
   573                           
   574                           ; BSR set to: 15
   575                           ;main.c: 122: LATBbits.LATB5 = 1;
   576  001082  8A8A               	bsf	3978,5,c	;volatile
   577                           
   578                           ; BSR set to: 15
   579                           ;main.c: 123: TRISBbits.TRISB5 = 1;
   580  001084  8A93               	bsf	3987,5,c	;volatile
   581                           
   582                           ; BSR set to: 15
   583                           ;main.c: 124: LATBbits.LATB6 = 1;
   584  001086  8C8A               	bsf	3978,6,c	;volatile
   585                           
   586                           ; BSR set to: 15
   587                           ;main.c: 125: TRISBbits.TRISB6 = 0;
   588  001088  9C93               	bcf	3987,6,c	;volatile
   589                           
   590                           ; BSR set to: 15
   591                           ;main.c: 126: PORTBbits.RB7 = 1;
   592  00108A  8E81               	bsf	3969,7,c	;volatile
   593                           
   594                           ; BSR set to: 15
   595                           ;main.c: 127: TRISBbits.TRISB7 = 1;
   596  00108C  8E93               	bsf	3987,7,c	;volatile
   597                           
   598                           ; BSR set to: 15
   599                           ;main.c: 129: PORTAbits.RA1 = 0;
   600  00108E  9280               	bcf	3968,1,c	;volatile
   601                           
   602                           ; BSR set to: 15
   603                           ;main.c: 130: TRISAbits.TRISA1 = 0;
   604  001090  9292               	bcf	3986,1,c	;volatile
   605                           
   606                           ; BSR set to: 15
   607  001092  0012               	return		;funcret
   608  001094                     __end_of_init_pic:
   609                           	opt stack 0
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           intcon	equ	0xFF2
   615                           
   616 ;; *************** function _isr *****************
   617 ;; Defined at:
   618 ;;		line 12 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;Total ram usage:       18 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    1
   639 ;; This function calls:
   640 ;;		i2_reload_timer0
   641 ;; This function is called by:
   642 ;;		Interrupt level 2
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	intcode
   647  000008                     __pintcode:
   648                           	opt stack 0
   649  000008                     _isr:
   650                           	opt stack 28
   651                           
   652                           ; BSR set to: 15
   653                           ;incstack = 0
   654  000008  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   655  00000A  CFFA F001          	movff	pclath,??_isr
   656  00000E  CFFB F002          	movff	pclatu,??_isr+1
   657  000012  CFE9 F003          	movff	fsr0l,??_isr+2
   658  000016  CFEA F004          	movff	fsr0h,??_isr+3
   659  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
   660  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
   661  000022  CFD9 F007          	movff	fsr2l,??_isr+6
   662  000026  CFDA F008          	movff	fsr2h,??_isr+7
   663  00002A  CFF3 F009          	movff	prodl,??_isr+8
   664  00002E  CFF4 F00A          	movff	prodh,??_isr+9
   665  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
   666  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
   667  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
   668  00003E  CFF5 F00E          	movff	tablat,??_isr+13
   669  000042  C017  F00F         	movff	btemp,??_isr+14
   670  000046  C018  F010         	movff	btemp+1,??_isr+15
   671  00004A  C019  F011         	movff	btemp+2,??_isr+16
   672  00004E  C01A  F012         	movff	btemp+3,??_isr+17
   673                           
   674                           ;main.c: 14: if (INTCON3bits.INT1IF){}
   675  000052  50F0               	movf	intcon3,w,c	;volatile
   676                           
   677                           ;main.c: 15: if (TMR0IF)
   678  000054  A4F2               	btfss	intcon,2,c	;volatile
   679  000056  D02F               	goto	i2l76
   680                           
   681                           ;main.c: 16: {
   682                           ;main.c: 17: TMR0IF = 0;
   683  000058  94F2               	bcf	intcon,2,c	;volatile
   684                           
   685                           ;main.c: 18: gled_tmr0_tick++;
   686  00005A  2A14               	incf	_gled_tmr0_tick,f,c
   687                           
   688                           ;main.c: 19: bled_tmr0_tick++;
   689  00005C  2A13               	incf	_bled_tmr0_tick,f,c
   690                           
   691                           ;main.c: 21: switch (gled_tmr0_tick)
   692  00005E  D011               	goto	i2l67
   693  000060                     
   694                           ;main.c: 25: gled_tmr0_tick = 0;
   695  000060  0E00               	movlw	0
   696  000062  6E14               	movwf	_gled_tmr0_tick,c
   697                           
   698                           ;main.c: 26: if (G_LED_STATE)
   699  000064  5016               	movf	_G_LED_STATE,w,c
   700  000066  B4D8               	btfsc	status,2,c
   701  000068  D002               	goto	i2l69
   702                           
   703                           ;main.c: 27: G_LED_STATE = 0;
   704  00006A  0E00               	movlw	0
   705  00006C  D001               	goto	L1
   706  00006E                     i2l69:
   707                           
   708                           ;main.c: 28: else
   709                           ;main.c: 29: G_LED_STATE = 1;
   710  00006E  0E01               	movlw	1
   711  000070                     L1:
   712  000070  6E16               	movwf	_G_LED_STATE,c
   713                           
   714                           ;main.c: 30: PORTBbits.RB3 = (bool)(G_LED_STATE);
   715  000072  B016               	btfsc	_G_LED_STATE,0,c
   716  000074  D002               	bra	i2u3_45
   717  000076  9681               	bcf	3969,3,c	;volatile
   718  000078  D001               	bra	i2u3_46
   719  00007A                     i2u3_45:
   720  00007A  8681               	bsf	3969,3,c	;volatile
   721  00007C                     i2u3_46:
   722                           
   723                           ;main.c: 31: reload_timer0();
   724  00007C  EC77  F008         	call	i2_reload_timer0	;wreg free
   725                           
   726                           ;main.c: 33: }
   727                           
   728                           ;main.c: 32: break;
   729  000080  D016               	goto	i2l72
   730  000082                     i2l67:
   731  000082  5014               	movf	_gled_tmr0_tick,w,c
   732                           
   733                           ; Switch size 1, requested type "space"
   734                           ; Number of cases is 1, Range of values is 10 to 10
   735                           ; switch strategies available:
   736                           ; Name         Instructions Cycles
   737                           ; simple_byte            4     3 (average)
   738                           ;	Chosen strategy is simple_byte
   739  000084  0A0A               	xorlw	10	; case 10
   740  000086  B4D8               	btfsc	status,2,c
   741  000088  D7EB               	goto	i2l68
   742                           
   743                           ;main.c: 35: switch (bled_tmr0_tick)
   744  00008A  D011               	goto	i2l72
   745  00008C                     
   746                           ;main.c: 38: bled_tmr0_tick = 0;
   747  00008C  0E00               	movlw	0
   748  00008E  6E13               	movwf	_bled_tmr0_tick,c
   749                           
   750                           ;main.c: 39: if (B_LED_STATE)
   751  000090  5015               	movf	_B_LED_STATE,w,c
   752  000092  B4D8               	btfsc	status,2,c
   753  000094  D002               	goto	i2l74
   754                           
   755                           ;main.c: 40: B_LED_STATE = 0;
   756  000096  0E00               	movlw	0
   757  000098  D001               	goto	L2
   758  00009A                     i2l74:
   759                           
   760                           ;main.c: 41: else
   761                           ;main.c: 42: B_LED_STATE = 1;
   762  00009A  0E01               	movlw	1
   763  00009C                     L2:
   764  00009C  6E15               	movwf	_B_LED_STATE,c
   765                           
   766                           ;main.c: 43: PORTCbits.RC4 = (bool)(B_LED_STATE);
   767  00009E  B015               	btfsc	_B_LED_STATE,0,c
   768  0000A0  D002               	bra	i2u5_45
   769  0000A2  9882               	bcf	3970,4,c	;volatile
   770  0000A4  D001               	bra	i2u5_46
   771  0000A6                     i2u5_45:
   772  0000A6  8882               	bsf	3970,4,c	;volatile
   773  0000A8                     i2u5_46:
   774                           
   775                           ;main.c: 44: reload_timer0();
   776  0000A8  EC77  F008         	call	i2_reload_timer0	;wreg free
   777                           
   778                           ;main.c: 46: }
   779                           
   780                           ;main.c: 45: break;
   781  0000AC  D004               	goto	i2l76
   782  0000AE                     i2l72:
   783  0000AE  5013               	movf	_bled_tmr0_tick,w,c
   784                           
   785                           ; Switch size 1, requested type "space"
   786                           ; Number of cases is 1, Range of values is 1 to 1
   787                           ; switch strategies available:
   788                           ; Name         Instructions Cycles
   789                           ; simple_byte            4     3 (average)
   790                           ;	Chosen strategy is simple_byte
   791  0000B0  0A01               	xorlw	1	; case 1
   792  0000B2  B4D8               	btfsc	status,2,c
   793  0000B4  D7EB               	goto	i2l73
   794  0000B6                     i2l76:
   795  0000B6  C012  F01A         	movff	??_isr+17,btemp+3
   796  0000BA  C011  F019         	movff	??_isr+16,btemp+2
   797  0000BE  C010  F018         	movff	??_isr+15,btemp+1
   798  0000C2  C00F  F017         	movff	??_isr+14,btemp
   799  0000C6  C00E  FFF5         	movff	??_isr+13,tablat
   800  0000CA  C00D  FFF8         	movff	??_isr+12,tblptru
   801  0000CE  C00C  FFF7         	movff	??_isr+11,tblptrh
   802  0000D2  C00B  FFF6         	movff	??_isr+10,tblptrl
   803  0000D6  C00A  FFF4         	movff	??_isr+9,prodh
   804  0000DA  C009  FFF3         	movff	??_isr+8,prodl
   805  0000DE  C008  FFDA         	movff	??_isr+7,fsr2h
   806  0000E2  C007  FFD9         	movff	??_isr+6,fsr2l
   807  0000E6  C006  FFE2         	movff	??_isr+5,fsr1h
   808  0000EA  C005  FFE1         	movff	??_isr+4,fsr1l
   809  0000EE  C004  FFEA         	movff	??_isr+3,fsr0h
   810  0000F2  C003  FFE9         	movff	??_isr+2,fsr0l
   811  0000F6  C002  FFFB         	movff	??_isr+1,pclatu
   812  0000FA  C001  FFFA         	movff	??_isr,pclath
   813  0000FE  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   814  000100  0011               	retfie		f
   815  000102                     __end_of_isr:
   816                           	opt stack 0
   817                           pclatu	equ	0xFFB
   818                           pclath	equ	0xFFA
   819                           tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           prodh	equ	0xFF4
   824                           prodl	equ	0xFF3
   825                           intcon	equ	0xFF2
   826                           intcon3	equ	0xFF0
   827                           fsr0h	equ	0xFEA
   828                           fsr0l	equ	0xFE9
   829                           fsr1h	equ	0xFE2
   830                           fsr1l	equ	0xFE1
   831                           fsr2h	equ	0xFDA
   832                           fsr2l	equ	0xFD9
   833                           status	equ	0xFD8
   834                           
   835 ;; *************** function i2_reload_timer0 *****************
   836 ;; Defined at:
   837 ;;		line 172 in file "main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;Total ram usage:        0 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_isr
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text5
   865  0010EE                     __ptext5:
   866                           	opt stack 0
   867  0010EE                     i2_reload_timer0:
   868                           	opt stack 28
   869                           
   870                           ;main.c: 174: TMR0L = ((65535-780)%256);
   871                           
   872                           ;incstack = 0
   873  0010EE  0EF3               	movlw	243
   874  0010F0  6ED6               	movwf	4054,c	;volatile
   875                           
   876                           ;main.c: 175: TMR0H = ((65535-780)/256);
   877  0010F2  0EFC               	movlw	252
   878  0010F4  6ED7               	movwf	4055,c	;volatile
   879  0010F6  0012               	return		;funcret
   880  0010F8                     __end_ofi2_reload_timer0:
   881                           	opt stack 0
   882                           pclatu	equ	0xFFB
   883                           pclath	equ	0xFFA
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           prodh	equ	0xFF4
   889                           prodl	equ	0xFF3
   890                           intcon	equ	0xFF2
   891                           intcon3	equ	0xFF0
   892                           fsr0h	equ	0xFEA
   893                           fsr0l	equ	0xFE9
   894                           fsr1h	equ	0xFE2
   895                           fsr1l	equ	0xFE1
   896                           fsr2h	equ	0xFDA
   897                           fsr2l	equ	0xFD9
   898                           status	equ	0xFD8
   899                           pclatu	equ	0xFFB
   900                           pclath	equ	0xFFA
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           prodh	equ	0xFF4
   906                           prodl	equ	0xFF3
   907                           intcon	equ	0xFF2
   908                           intcon3	equ	0xFF0
   909                           fsr0h	equ	0xFEA
   910                           fsr0l	equ	0xFE9
   911                           fsr1h	equ	0xFE2
   912                           fsr1l	equ	0xFE1
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8
   916                           
   917                           	psect	rparam
   918  0000                     pclatu	equ	0xFFB
   919                           pclath	equ	0xFFA
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           prodh	equ	0xFF4
   925                           prodl	equ	0xFF3
   926                           intcon	equ	0xFF2
   927                           intcon3	equ	0xFF0
   928                           fsr0h	equ	0xFEA
   929                           fsr0l	equ	0xFE9
   930                           fsr1h	equ	0xFE2
   931                           fsr1l	equ	0xFE1
   932                           fsr2h	equ	0xFDA
   933                           fsr2l	equ	0xFD9
   934                           status	equ	0xFD8
   935                           
   936                           	psect	temp
   937  000017                     btemp:
   938                           	opt stack 0
   939  000017                     	ds	1
   940  0000                     int$flags	set	btemp
   941  0000                     wtemp6	set	btemp+1
   942                           pclatu	equ	0xFFB
   943                           pclath	equ	0xFFA
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           prodh	equ	0xFF4
   949                           prodl	equ	0xFF3
   950                           intcon	equ	0xFF2
   951                           intcon3	equ	0xFF0
   952                           fsr0h	equ	0xFEA
   953                           fsr0l	equ	0xFE9
   954                           fsr1h	equ	0xFE2
   955                           fsr1l	equ	0xFE1
   956                           fsr2h	equ	0xFDA
   957                           fsr2l	equ	0xFD9
   958                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    63
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _init_pic
                      _reload_timer0
                       _start_timer0
 ---------------------------------------------------------------------------------
 (1) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reload_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 18    18      0       0
                                              0 COMRAM    18    18      0
                    i2_reload_timer0
 ---------------------------------------------------------------------------------
 (3) i2_reload_timer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_pic
   _reload_timer0
   _start_timer0

 _isr (ROOT)
   i2_reload_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      16       1       23.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      12        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 25 14:40:24 2018

   __size_of_start_timer0 0014               __CFG_CP0$ON 000000               __CFG_CP1$ON 000000  
             __CFG_CP2$ON 000000               __CFG_CP3$ON 000000                        l82 10E2  
             __CFG_CPB$ON 000000               __CFG_CPD$ON 000000                       _isr 0008  
         i2_reload_timer0 10EE              __CFG_LVP$OFF 000000                      ?_isr 0001  
                    i2l72 00AE                      i2l73 008C                      i2l74 009A  
                    i2l67 0082                      i2l76 00B6                      i2l68 0060  
                    i2l69 006E                      _main 10D2                      _scfg 1001  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr2h 000FDA  
                    fsr0l 000FE9                      fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 0017              _start_timer0 10BE             __CFG_BORV$190 000000  
                    prodh 000FF4                      prodl 000FF3                      start 0102  
           __CFG_IESO$OFF 000000              ___param_bank 000000                     ??_isr 0001  
                   ?_main 0001                     _T0CON 000FD5                     _TMR0H 000FD7  
                   _TMR0L 000FD6           __end_of_cgdcont 1031             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
      __CFG_MCLRE$INTMCLR 000000                     _sgact 1031                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 0018  
          __CFG_HFOFST$ON 000000           __initialization 1094              __end_of_main 10E4  
            __end_of_scfg 101D     __end_of_reload_timer0 10EE   __end_ofi2_reload_timer0 10F8  
          _bled_tmr0_tick 0013                    ??_main 0013             __activetblptr 000002  
                  _ANSELA 000F38                    _ANSELB 000F39                    _ANSELC 000F3A  
                  _TMR0IE 007F95                    _TMR0IF 007F92            __CFG_WDTPS$256 000000  
                  i2u3_45 007A                    i2u3_46 007C                    i2u5_45 00A6  
                  i2u5_46 00A8            __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000  
        __end_of_init_pic 1094              __pdataCOMRAM 0015              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 10B0           __CFG_PBADEN$OFF 000000  
           ___rparam_used 000001            __pcstackCOMRAM 0001             __end_of_sgact 1040  
        ?i2_reload_timer0 0001           __CFG_PLLCFG$OFF 000000        __CFG_CCP2MX$PORTC1 000000  
      __CFG_CCP3MX$PORTB5 000000           __CFG_WDTEN$SWON 000000                 ?_init_pic 0001  
         __CFG_PWRTEN$OFF 000000                   __Hparam 0000                   __Lparam 0000  
            __psmallconst 1000                   _cgdcont 101D                   __pcinit 1094  
                 __ramtop 1000                   __ptext0 10D2                   __ptext1 10BE  
                 __ptext2 10E4                   __ptext3 1042                   __ptext5 10EE  
            __size_of_isr 00FA      end_of_initialization 10B0             __Lmediumconst 0000  
              ??_init_pic 0013                 _PORTAbits 000F80                 _PORTBbits 000F81  
               _PORTCbits 000F82          __CFG_FOSC$INTIO7 000000                 _TRISAbits 000F92  
               _TRISBbits 000F93                 _TRISCbits 000F94    __size_of_reload_timer0 000A  
           __pidataCOMRAM 10F8       start_initialization 1094               __end_of_isr 0102  
           ?_start_timer0 0001             _reload_timer0 10E4               __pbssCOMRAM 0013  
__size_ofi2_reload_timer0 000A            ??_start_timer0 0013         __size_of_init_pic 0052  
               __pintcode 0008            ?_reload_timer0 0001          __CFG_PRICLKEN$ON 000000  
             __smallconst 1000                  _LATBbits 000F8A                  _LATCbits 000F8B  
             _B_LED_STATE 0015               _INTCON3bits 000FF0         ??i2_reload_timer0 0001  
                __Hrparam 0000           ??_reload_timer0 0013                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000         __CFG_P2BMX$PORTB5 000000      __end_of_start_timer0 10D2  
          _gled_tmr0_tick 0014             __size_of_main 0012                  _init_pic 1042  
             _G_LED_STATE 0016                  int$flags 0017                _INTCONbits 000FF2  
                intlevel2 0000                _OSCCONbits 000FD3         __CFG_T3CMX$PORTC0 000000  
              _WDTCONbits 000FD1  
