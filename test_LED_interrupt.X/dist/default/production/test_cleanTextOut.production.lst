

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 25 14:26:44 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F26K22 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  0010F2                     __pidataCOMRAM:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _G_LED_STATE
    60  0010F2  01                 	db	1
    61                           
    62                           	psect	smallconst
    63  001000                     __psmallconst:
    64                           	opt stack 0
    65  001000  00                 	db	0
    66  001001                     _scfg:
    67                           	opt stack 0
    68  001001  41                 	db	65
    69  001002  54                 	db	84
    70  001003  23                 	db	35
    71  001004  53                 	db	83
    72  001005  43                 	db	67
    73  001006  46                 	db	70
    74  001007  47                 	db	71
    75  001008  3D                 	db	61
    76  001009  31                 	db	49
    77  00100A  2C                 	db	44
    78  00100B  33                 	db	51
    79  00100C  2C                 	db	44
    80  00100D  33                 	db	51
    81  00100E  30                 	db	48
    82  00100F  30                 	db	48
    83  001010  2C                 	db	44
    84  001011  39                 	db	57
    85  001012  30                 	db	48
    86  001013  2C                 	db	44
    87  001014  36                 	db	54
    88  001015  30                 	db	48
    89  001016  30                 	db	48
    90  001017  2C                 	db	44
    91  001018  35                 	db	53
    92  001019  30                 	db	48
    93  00101A  0D                 	db	13
    94  00101B  0A                 	db	10
    95  00101C  00                 	db	0
    96  00101D                     __end_of_scfg:
    97                           	opt stack 0
    98  00101D                     _cgdcont:
    99                           	opt stack 0
   100  00101D  41                 	db	65
   101  00101E  54                 	db	84
   102  00101F  2B                 	db	43
   103  001020  43                 	db	67
   104  001021  47                 	db	71
   105  001022  44                 	db	68
   106  001023  43                 	db	67
   107  001024  4F                 	db	79
   108  001025  4E                 	db	78
   109  001026  54                 	db	84
   110  001027  3D                 	db	61
   111  001028  33                 	db	51
   112  001029  2C                 	db	44
   113  00102A  22                 	db	34
   114  00102B  49                 	db	73
   115  00102C  50                 	db	80
   116  00102D  22                 	db	34
   117  00102E  2C                 	db	44
   118  00102F  22                 	db	34
   119  001030  00                 	db	0
   120  001031                     __end_of_cgdcont:
   121                           	opt stack 0
   122  001031                     _sgact:
   123                           	opt stack 0
   124  001031  41                 	db	65
   125  001032  54                 	db	84
   126  001033  23                 	db	35
   127  001034  53                 	db	83
   128  001035  47                 	db	71
   129  001036  41                 	db	65
   130  001037  43                 	db	67
   131  001038  54                 	db	84
   132  001039  3D                 	db	61
   133  00103A  33                 	db	51
   134  00103B  2C                 	db	44
   135  00103C  31                 	db	49
   136  00103D  0D                 	db	13
   137  00103E  0A                 	db	10
   138  00103F  00                 	db	0
   139  001040                     __end_of_sgact:
   140                           	opt stack 0
   141  0000                     _ANSELB	set	3897
   142  0000                     _ANSELC	set	3898
   143  0000                     _ANSELA	set	3896
   144  0000                     _INTCONbits	set	4082
   145  0000                     _TMR0H	set	4055
   146  0000                     _TMR0L	set	4054
   147  0000                     _T0CON	set	4053
   148  0000                     _LATBbits	set	3978
   149  0000                     _LATCbits	set	3979
   150  0000                     _TRISCbits	set	3988
   151  0000                     _PORTCbits	set	3970
   152  0000                     _TRISBbits	set	3987
   153  0000                     _PORTAbits	set	3968
   154  0000                     _TRISAbits	set	3986
   155  0000                     _OSCCONbits	set	4051
   156  0000                     _WDTCONbits	set	4049
   157  0000                     _PORTBbits	set	3969
   158  0000                     _INTCON3bits	set	4080
   159  0000                     _TMR0IE	set	32661
   160  0000                     _TMR0IF	set	32658
   161                           
   162                           ; #config settings
   163  001040  00                 	db	0	; dummy byte at the end
   164  0000                     
   165                           	psect	cinit
   166  001094                     __pcinit:
   167                           	opt stack 0
   168  001094                     start_initialization:
   169                           	opt stack 0
   170  001094                     __initialization:
   171                           	opt stack 0
   172                           
   173                           ; Initialize objects allocated to COMRAM (1 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175  001094  0EF2               	movlw	low __pidataCOMRAM
   176  001096  6EF6               	movwf	tblptrl,c
   177  001098  0E10               	movlw	high __pidataCOMRAM
   178  00109A  6EF7               	movwf	tblptrh,c
   179  00109C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180  00109E  6EF8               	movwf	tblptru,c
   181  0010A0  0009               	tblrd		*+	;fetch initializer
   182  0010A2  CFF5 F014          	movff	tablat,__pdataCOMRAM
   183  0010A6                     end_of_initialization:
   184                           	opt stack 0
   185  0010A6                     __end_of__initialization:
   186                           	opt stack 0
   187  0010A6  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   188  0010A8  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   189  0010AA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   190  0010AC  6EF8               	movwf	tblptru,c
   191  0010AE  0E10               	movlw	high __Lsmallconst
   192  0010B0  6EF7               	movwf	tblptrh,c
   193  0010B2  0100               	movlb	0
   194  0010B4  EF66  F008         	goto	_main	;jump to C main() function
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           
   200                           	psect	dataCOMRAM
   201  000014                     __pdataCOMRAM:
   202                           	opt stack 0
   203  000014                     _G_LED_STATE:
   204                           	opt stack 0
   205  000014                     	ds	1
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           
   211                           	psect	cstackCOMRAM
   212  000001                     __pcstackCOMRAM:
   213                           	opt stack 0
   214  000001                     ??_isr:
   215  000001                     
   216                           ; 1 bytes @ 0x0
   217  000001                     	ds	19
   218  000014                     tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           
   223                           ; 1 bytes @ 0x13
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 25 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels required when called:    3
   249 ;; This function calls:
   250 ;;		_init_pic
   251 ;;		_reload_timer0
   252 ;;		_start_timer0
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text0
   259  0010CC                     __ptext0:
   260                           	opt stack 0
   261  0010CC                     _main:
   262                           	opt stack 28
   263                           
   264                           ;main.c: 27: init_pic();
   265                           
   266                           ;incstack = 0
   267  0010CC  EC21  F008         	call	_init_pic	;wreg free
   268                           
   269                           ;main.c: 30: start_timer0();
   270  0010D0  EC5C  F008         	call	_start_timer0	;wreg free
   271                           
   272                           ;main.c: 31: reload_timer0();
   273  0010D4  EC6F  F008         	call	_reload_timer0	;wreg free
   274                           
   275                           ;main.c: 33: WDTCONbits.SWDTEN = 1;
   276  0010D8  80D1               	bsf	4049,0,c	;volatile
   277  0010DA  0004               	clrwdt		;# 
   278  0010DC                     l66:
   279                           
   280                           ;main.c: 41: {
   281  0010DC  D7FF               	goto	l66
   282  0010DE                     __end_of_main:
   283                           	opt stack 0
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           
   289 ;; *************** function _start_timer0 *****************
   290 ;; Defined at:
   291 ;;		line 133 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used:    1
   311 ;; Hardware stack levels required when called:    2
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		_main
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           	psect	text1
   320  0010B8                     __ptext1:
   321                           	opt stack 0
   322  0010B8                     _start_timer0:
   323                           	opt stack 28
   324                           
   325                           ;main.c: 135: T0CON = 0x87;
   326                           
   327                           ;incstack = 0
   328  0010B8  0E87               	movlw	135
   329  0010BA  6ED5               	movwf	4053,c	;volatile
   330                           
   331                           ;main.c: 136: TMR0L = ((65535-780)%256);
   332  0010BC  0EF3               	movlw	243
   333  0010BE  6ED6               	movwf	4054,c	;volatile
   334                           
   335                           ;main.c: 137: TMR0H = ((65535-780)/256);
   336  0010C0  0EFC               	movlw	252
   337  0010C2  6ED7               	movwf	4055,c	;volatile
   338                           
   339                           ;main.c: 138: TMR0IF = 0;
   340  0010C4  94F2               	bcf	intcon,2,c	;volatile
   341                           
   342                           ;main.c: 139: TMR0IE = 1;
   343  0010C6  8AF2               	bsf	intcon,5,c	;volatile
   344                           
   345                           ;main.c: 140: INTCONbits.GIE = 1;
   346  0010C8  8EF2               	bsf	intcon,7,c	;volatile
   347  0010CA  0012               	return		;funcret
   348  0010CC                     __end_of_start_timer0:
   349                           	opt stack 0
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           intcon	equ	0xFF2
   355                           
   356 ;; *************** function _reload_timer0 *****************
   357 ;; Defined at:
   358 ;;		line 144 in file "main.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; Hardware stack levels required when called:    2
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text2
   387  0010DE                     __ptext2:
   388                           	opt stack 0
   389  0010DE                     _reload_timer0:
   390                           	opt stack 28
   391                           
   392                           ;main.c: 146: TMR0L = ((65535-780)%256);
   393                           
   394                           ;incstack = 0
   395  0010DE  0EF3               	movlw	243
   396  0010E0  6ED6               	movwf	4054,c	;volatile
   397                           
   398                           ;main.c: 147: TMR0H = ((65535-780)/256);
   399  0010E2  0EFC               	movlw	252
   400  0010E4  6ED7               	movwf	4055,c	;volatile
   401  0010E6  0012               	return		;funcret
   402  0010E8                     __end_of_reload_timer0:
   403                           	opt stack 0
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           intcon	equ	0xFF2
   409                           
   410 ;; *************** function _init_pic *****************
   411 ;; Defined at:
   412 ;;		line 57 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; Hardware stack levels required when called:    2
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text3
   441  001042                     __ptext3:
   442                           	opt stack 0
   443  001042                     _init_pic:
   444                           	opt stack 28
   445                           
   446                           ;main.c: 60: OSCCONbits.IDLEN = 0;
   447                           
   448                           ;incstack = 0
   449  001042  9ED3               	bcf	4051,7,c	;volatile
   450                           
   451                           ;main.c: 61: OSCCONbits.IRCF = 0b110;
   452  001044  50D3               	movf	4051,w,c	;volatile
   453  001046  0B8F               	andlw	-113
   454  001048  0960               	iorlw	96
   455  00104A  6ED3               	movwf	4051,c	;volatile
   456                           
   457                           ;main.c: 62: OSCCONbits.OSTS = 1;
   458  00104C  86D3               	bsf	4051,3,c	;volatile
   459                           
   460                           ;main.c: 66: ANSELA = 0x01;
   461  00104E  0E01               	movlw	1
   462  001050  010F               	movlb	15	; () banked
   463  001052  6F38               	movwf	56,b	;volatile
   464                           
   465                           ; BSR set to: 15
   466                           ;main.c: 68: TRISAbits.TRISA0 = 1;
   467  001054  8092               	bsf	3986,0,c	;volatile
   468                           
   469                           ; BSR set to: 15
   470                           ;main.c: 69: TRISAbits.TRISA3 = 0;
   471  001056  9692               	bcf	3986,3,c	;volatile
   472                           
   473                           ; BSR set to: 15
   474                           ;main.c: 70: PORTAbits.RA3 = 0;
   475  001058  9680               	bcf	3968,3,c	;volatile
   476                           
   477                           ;main.c: 73: ANSELC = 0x00;
   478  00105A  0E00               	movlw	0
   479  00105C  6F3A               	movwf	58,b	;volatile
   480                           
   481                           ; BSR set to: 15
   482                           ;main.c: 74: PORTBbits.RB3 = 1;
   483  00105E  8681               	bsf	3969,3,c	;volatile
   484                           
   485                           ; BSR set to: 15
   486                           ;main.c: 75: TRISBbits.TRISB3 = 0;
   487  001060  9693               	bcf	3987,3,c	;volatile
   488                           
   489                           ; BSR set to: 15
   490                           ;main.c: 76: PORTCbits.RC6 = 1;
   491  001062  8C82               	bsf	3970,6,c	;volatile
   492                           
   493                           ; BSR set to: 15
   494                           ;main.c: 77: TRISCbits.TRISC6 = 0;
   495  001064  9C94               	bcf	3988,6,c	;volatile
   496                           
   497                           ; BSR set to: 15
   498                           ;main.c: 78: LATCbits.LATC7 = 1;
   499  001066  8E8B               	bsf	3979,7,c	;volatile
   500                           
   501                           ; BSR set to: 15
   502                           ;main.c: 79: TRISCbits.TRISC7 = 1;
   503  001068  8E94               	bsf	3988,7,c	;volatile
   504                           
   505                           ;main.c: 82: ANSELB = 0x00;
   506  00106A  0E00               	movlw	0
   507  00106C  6F39               	movwf	57,b	;volatile
   508                           
   509                           ; BSR set to: 15
   510                           ;main.c: 84: TRISBbits.TRISB0 = 1;
   511  00106E  8093               	bsf	3987,0,c	;volatile
   512                           
   513                           ; BSR set to: 15
   514                           ;main.c: 85: TRISCbits.TRISC1 = 1;
   515  001070  8294               	bsf	3988,1,c	;volatile
   516                           
   517                           ; BSR set to: 15
   518                           ;main.c: 86: LATBbits.LB1 = 1;
   519  001072  828A               	bsf	3978,1,c	;volatile
   520                           
   521                           ; BSR set to: 15
   522                           ;main.c: 87: TRISBbits.TRISB1 = 1;
   523  001074  8293               	bsf	3987,1,c	;volatile
   524                           
   525                           ; BSR set to: 15
   526                           ;main.c: 88: LATBbits.LATB2 = 1;
   527  001076  848A               	bsf	3978,2,c	;volatile
   528                           
   529                           ; BSR set to: 15
   530                           ;main.c: 89: TRISBbits.TRISB2 = 1;
   531  001078  8493               	bsf	3987,2,c	;volatile
   532                           
   533                           ; BSR set to: 15
   534                           ;main.c: 90: PORTCbits.RC4 = 1;
   535  00107A  8882               	bsf	3970,4,c	;volatile
   536                           
   537                           ; BSR set to: 15
   538                           ;main.c: 91: TRISCbits.TRISC4 = 0;
   539  00107C  9894               	bcf	3988,4,c	;volatile
   540                           
   541                           ; BSR set to: 15
   542                           ;main.c: 92: LATBbits.LATB4 = 1;
   543  00107E  888A               	bsf	3978,4,c	;volatile
   544                           
   545                           ; BSR set to: 15
   546                           ;main.c: 93: TRISBbits.TRISB4 = 1;
   547  001080  8893               	bsf	3987,4,c	;volatile
   548                           
   549                           ; BSR set to: 15
   550                           ;main.c: 94: LATBbits.LATB5 = 1;
   551  001082  8A8A               	bsf	3978,5,c	;volatile
   552                           
   553                           ; BSR set to: 15
   554                           ;main.c: 95: TRISBbits.TRISB5 = 1;
   555  001084  8A93               	bsf	3987,5,c	;volatile
   556                           
   557                           ; BSR set to: 15
   558                           ;main.c: 96: LATBbits.LATB6 = 1;
   559  001086  8C8A               	bsf	3978,6,c	;volatile
   560                           
   561                           ; BSR set to: 15
   562                           ;main.c: 97: TRISBbits.TRISB6 = 0;
   563  001088  9C93               	bcf	3987,6,c	;volatile
   564                           
   565                           ; BSR set to: 15
   566                           ;main.c: 98: PORTBbits.RB7 = 1;
   567  00108A  8E81               	bsf	3969,7,c	;volatile
   568                           
   569                           ; BSR set to: 15
   570                           ;main.c: 99: TRISBbits.TRISB7 = 1;
   571  00108C  8E93               	bsf	3987,7,c	;volatile
   572                           
   573                           ; BSR set to: 15
   574                           ;main.c: 101: PORTAbits.RA1 = 0;
   575  00108E  9280               	bcf	3968,1,c	;volatile
   576                           
   577                           ; BSR set to: 15
   578                           ;main.c: 102: TRISAbits.TRISA1 = 0;
   579  001090  9292               	bcf	3986,1,c	;volatile
   580                           
   581                           ; BSR set to: 15
   582  001092  0012               	return		;funcret
   583  001094                     __end_of_init_pic:
   584                           	opt stack 0
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           intcon	equ	0xFF2
   590                           
   591 ;; *************** function _isr *****************
   592 ;; Defined at:
   593 ;;		line 11 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:       19 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    1
   614 ;; This function calls:
   615 ;;		i2_reload_timer0
   616 ;; This function is called by:
   617 ;;		Interrupt level 2
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	intcode
   622  000008                     __pintcode:
   623                           	opt stack 0
   624  000008                     _isr:
   625                           	opt stack 28
   626                           
   627                           ; BSR set to: 15
   628                           ;incstack = 0
   629  000008  8215               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   630  00000A  CFFA F002          	movff	pclath,??_isr+1
   631  00000E  CFFB F003          	movff	pclatu,??_isr+2
   632  000012  CFE9 F004          	movff	fsr0l,??_isr+3
   633  000016  CFEA F005          	movff	fsr0h,??_isr+4
   634  00001A  CFE1 F006          	movff	fsr1l,??_isr+5
   635  00001E  CFE2 F007          	movff	fsr1h,??_isr+6
   636  000022  CFD9 F008          	movff	fsr2l,??_isr+7
   637  000026  CFDA F009          	movff	fsr2h,??_isr+8
   638  00002A  CFF3 F00A          	movff	prodl,??_isr+9
   639  00002E  CFF4 F00B          	movff	prodh,??_isr+10
   640  000032  CFF6 F00C          	movff	tblptrl,??_isr+11
   641  000036  CFF7 F00D          	movff	tblptrh,??_isr+12
   642  00003A  CFF8 F00E          	movff	tblptru,??_isr+13
   643  00003E  CFF5 F00F          	movff	tablat,??_isr+14
   644  000042  C015  F010         	movff	btemp,??_isr+15
   645  000046  C016  F011         	movff	btemp+1,??_isr+16
   646  00004A  C017  F012         	movff	btemp+2,??_isr+17
   647  00004E  C018  F013         	movff	btemp+3,??_isr+18
   648                           
   649                           ;main.c: 13: if (INTCON3bits.INT1IF){}
   650  000052  50F0               	movf	intcon3,w,c	;volatile
   651                           
   652                           ;main.c: 14: if (TMR0IF)
   653  000054  A4F2               	btfss	intcon,2,c	;volatile
   654  000056  D013               	goto	i2l60
   655                           
   656                           ;main.c: 15: {
   657                           ;main.c: 16: TMR0IF = 0;
   658  000058  94F2               	bcf	intcon,2,c	;volatile
   659                           
   660                           ;main.c: 17: PORTBbits.RB3 = (bool)(G_LED_STATE != G_LED_STATE);
   661  00005A  5014               	movf	_G_LED_STATE,w,c
   662  00005C  1814               	xorwf	_G_LED_STATE,w,c
   663  00005E  B4D8               	btfsc	status,2,c
   664  000060  D003               	goto	i2u2_40
   665  000062  6A01               	clrf	??_isr& (0+255),c
   666  000064  2A01               	incf	??_isr& (0+255),f,c
   667  000066  D001               	goto	i2u3_48
   668  000068                     i2u2_40:
   669  000068  6A01               	clrf	??_isr& (0+255),c
   670  00006A                     i2u3_48:
   671  00006A  4601               	rlncf	??_isr,f,c
   672  00006C  4601               	rlncf	??_isr,f,c
   673  00006E  4601               	rlncf	??_isr,f,c
   674  000070  5081               	movf	3969,w,c	;volatile
   675  000072  1801               	xorwf	??_isr,w,c
   676  000074  0BF7               	andlw	-9
   677  000076  1801               	xorwf	??_isr,w,c
   678  000078  6E81               	movwf	3969,c	;volatile
   679                           
   680                           ;main.c: 18: reload_timer0();
   681  00007A  EC74  F008         	call	i2_reload_timer0	;wreg free
   682  00007E                     i2l60:
   683  00007E  C013  F018         	movff	??_isr+18,btemp+3
   684  000082  C012  F017         	movff	??_isr+17,btemp+2
   685  000086  C011  F016         	movff	??_isr+16,btemp+1
   686  00008A  C010  F015         	movff	??_isr+15,btemp
   687  00008E  C00F  FFF5         	movff	??_isr+14,tablat
   688  000092  C00E  FFF8         	movff	??_isr+13,tblptru
   689  000096  C00D  FFF7         	movff	??_isr+12,tblptrh
   690  00009A  C00C  FFF6         	movff	??_isr+11,tblptrl
   691  00009E  C00B  FFF4         	movff	??_isr+10,prodh
   692  0000A2  C00A  FFF3         	movff	??_isr+9,prodl
   693  0000A6  C009  FFDA         	movff	??_isr+8,fsr2h
   694  0000AA  C008  FFD9         	movff	??_isr+7,fsr2l
   695  0000AE  C007  FFE2         	movff	??_isr+6,fsr1h
   696  0000B2  C006  FFE1         	movff	??_isr+5,fsr1l
   697  0000B6  C005  FFEA         	movff	??_isr+4,fsr0h
   698  0000BA  C004  FFE9         	movff	??_isr+3,fsr0l
   699  0000BE  C003  FFFB         	movff	??_isr+2,pclatu
   700  0000C2  C002  FFFA         	movff	??_isr+1,pclath
   701  0000C6  9215               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   702  0000C8  0011               	retfie		f
   703  0000CA                     __end_of_isr:
   704                           	opt stack 0
   705                           pclatu	equ	0xFFB
   706                           pclath	equ	0xFFA
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           intcon	equ	0xFF2
   714                           intcon3	equ	0xFF0
   715                           fsr0h	equ	0xFEA
   716                           fsr0l	equ	0xFE9
   717                           fsr1h	equ	0xFE2
   718                           fsr1l	equ	0xFE1
   719                           fsr2h	equ	0xFDA
   720                           fsr2l	equ	0xFD9
   721                           status	equ	0xFD8
   722                           
   723 ;; *************** function i2_reload_timer0 *****************
   724 ;; Defined at:
   725 ;;		line 144 in file "main.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_isr
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text5
   753  0010E8                     __ptext5:
   754                           	opt stack 0
   755  0010E8                     i2_reload_timer0:
   756                           	opt stack 28
   757                           
   758                           ;main.c: 146: TMR0L = ((65535-780)%256);
   759                           
   760                           ;incstack = 0
   761  0010E8  0EF3               	movlw	243
   762  0010EA  6ED6               	movwf	4054,c	;volatile
   763                           
   764                           ;main.c: 147: TMR0H = ((65535-780)/256);
   765  0010EC  0EFC               	movlw	252
   766  0010EE  6ED7               	movwf	4055,c	;volatile
   767  0010F0  0012               	return		;funcret
   768  0010F2                     __end_ofi2_reload_timer0:
   769                           	opt stack 0
   770                           pclatu	equ	0xFFB
   771                           pclath	equ	0xFFA
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           prodh	equ	0xFF4
   777                           prodl	equ	0xFF3
   778                           intcon	equ	0xFF2
   779                           intcon3	equ	0xFF0
   780                           fsr0h	equ	0xFEA
   781                           fsr0l	equ	0xFE9
   782                           fsr1h	equ	0xFE2
   783                           fsr1l	equ	0xFE1
   784                           fsr2h	equ	0xFDA
   785                           fsr2l	equ	0xFD9
   786                           status	equ	0xFD8
   787                           pclatu	equ	0xFFB
   788                           pclath	equ	0xFFA
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           prodh	equ	0xFF4
   794                           prodl	equ	0xFF3
   795                           intcon	equ	0xFF2
   796                           intcon3	equ	0xFF0
   797                           fsr0h	equ	0xFEA
   798                           fsr0l	equ	0xFE9
   799                           fsr1h	equ	0xFE2
   800                           fsr1l	equ	0xFE1
   801                           fsr2h	equ	0xFDA
   802                           fsr2l	equ	0xFD9
   803                           status	equ	0xFD8
   804                           
   805                           	psect	rparam
   806  0000                     pclatu	equ	0xFFB
   807                           pclath	equ	0xFFA
   808                           tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           tblptrl	equ	0xFF6
   811                           tablat	equ	0xFF5
   812                           prodh	equ	0xFF4
   813                           prodl	equ	0xFF3
   814                           intcon	equ	0xFF2
   815                           intcon3	equ	0xFF0
   816                           fsr0h	equ	0xFEA
   817                           fsr0l	equ	0xFE9
   818                           fsr1h	equ	0xFE2
   819                           fsr1l	equ	0xFE1
   820                           fsr2h	equ	0xFDA
   821                           fsr2l	equ	0xFD9
   822                           status	equ	0xFD8
   823                           
   824                           	psect	temp
   825  000015                     btemp:
   826                           	opt stack 0
   827  000015                     	ds	1
   828  0000                     int$flags	set	btemp
   829  0000                     wtemp6	set	btemp+1
   830                           pclatu	equ	0xFFB
   831                           pclath	equ	0xFFA
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           prodh	equ	0xFF4
   837                           prodl	equ	0xFF3
   838                           intcon	equ	0xFF2
   839                           intcon3	equ	0xFF0
   840                           fsr0h	equ	0xFEA
   841                           fsr0l	equ	0xFE9
   842                           fsr1h	equ	0xFE2
   843                           fsr1l	equ	0xFE1
   844                           fsr2h	equ	0xFDA
   845                           fsr2l	equ	0xFD9
   846                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    63
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _init_pic
                      _reload_timer0
                       _start_timer0
 ---------------------------------------------------------------------------------
 (1) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reload_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 19    19      0       0
                                              0 COMRAM    19    19      0
                    i2_reload_timer0
 ---------------------------------------------------------------------------------
 (3) i2_reload_timer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_pic
   _reload_timer0
   _start_timer0

 _isr (ROOT)
   i2_reload_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      14       1       21.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      12        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 25 14:26:44 2018

   __size_of_start_timer0 0014               __CFG_CP0$ON 000000               __CFG_CP1$ON 000000  
             __CFG_CP2$ON 000000               __CFG_CP3$ON 000000                        l66 10DC  
             __CFG_CPB$ON 000000               __CFG_CPD$ON 000000                       _isr 0008  
         i2_reload_timer0 10E8              __CFG_LVP$OFF 000000                      ?_isr 0001  
                    i2l60 007E                      _main 10CC                      _scfg 1001  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr2h 000FDA  
                    fsr0l 000FE9                      fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 0015              _start_timer0 10B8             __CFG_BORV$190 000000  
                    prodh 000FF4                      prodl 000FF3                      start 00CA  
           __CFG_IESO$OFF 000000              ___param_bank 000000                     ??_isr 0001  
                   ?_main 0001                     _T0CON 000FD5                     _TMR0H 000FD7  
                   _TMR0L 000FD6           __end_of_cgdcont 1031             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
      __CFG_MCLRE$INTMCLR 000000                     _sgact 1031                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 0016  
          __CFG_HFOFST$ON 000000           __initialization 1094              __end_of_main 10DE  
            __end_of_scfg 101D     __end_of_reload_timer0 10E8   __end_ofi2_reload_timer0 10F2  
                  ??_main 0014             __activetblptr 000001                    _ANSELA 000F38  
                  _ANSELB 000F39                    _ANSELC 000F3A                    _TMR0IE 007F95  
                  _TMR0IF 007F92            __CFG_WDTPS$256 000000                    i2u2_40 0068  
                  i2u3_48 006A            __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000  
        __end_of_init_pic 1094              __pdataCOMRAM 0014              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 10A6           __CFG_PBADEN$OFF 000000  
           ___rparam_used 000001            __pcstackCOMRAM 0001             __end_of_sgact 1040  
        ?i2_reload_timer0 0001           __CFG_PLLCFG$OFF 000000        __CFG_CCP2MX$PORTC1 000000  
      __CFG_CCP3MX$PORTB5 000000           __CFG_WDTEN$SWON 000000                 ?_init_pic 0001  
         __CFG_PWRTEN$OFF 000000                   __Hparam 0000                   __Lparam 0000  
            __psmallconst 1000                   _cgdcont 101D                   __pcinit 1094  
                 __ramtop 1000                   __ptext0 10CC                   __ptext1 10B8  
                 __ptext2 10DE                   __ptext3 1042                   __ptext5 10E8  
            __size_of_isr 00C2      end_of_initialization 10A6                ??_init_pic 0014  
               _PORTAbits 000F80                 _PORTBbits 000F81                 _PORTCbits 000F82  
        __CFG_FOSC$INTIO7 000000                 _TRISAbits 000F92                 _TRISBbits 000F93  
               _TRISCbits 000F94    __size_of_reload_timer0 000A             __pidataCOMRAM 10F2  
     start_initialization 1094               __end_of_isr 00CA             ?_start_timer0 0001  
           _reload_timer0 10DE  __size_ofi2_reload_timer0 000A            ??_start_timer0 0014  
       __size_of_init_pic 0052                 __pintcode 0008            ?_reload_timer0 0001  
        __CFG_PRICLKEN$ON 000000               __smallconst 1000                  _LATBbits 000F8A  
                _LATCbits 000F8B               _INTCON3bits 000FF0         ??i2_reload_timer0 0001  
                __Hrparam 0000           ??_reload_timer0 0014                  __Lrparam 0000  
            __Lsmallconst 1000        __CFG_BOREN$SBORDIS 000000         __CFG_P2BMX$PORTB5 000000  
    __end_of_start_timer0 10CC             __size_of_main 0012                  _init_pic 1042  
             _G_LED_STATE 0014                  int$flags 0015                _INTCONbits 000FF2  
                intlevel2 0000                _OSCCONbits 000FD3         __CFG_T3CMX$PORTC0 000000  
              _WDTCONbits 000FD1  
