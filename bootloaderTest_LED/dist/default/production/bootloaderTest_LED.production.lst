

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Oct 09 15:39:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F26K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  001118                     __pidataCOMRAM:
    59                           	opt stack 0
    60                           
    61                           ;initializer for _B_LED_STATE
    62  001118  01                 	db	1
    63                           
    64                           ;initializer for _G_LED_STATE
    65  001119  01                 	db	1
    66                           
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     _scfg:
    72                           	opt stack 0
    73  001001  41                 	db	65
    74  001002  54                 	db	84
    75  001003  23                 	db	35
    76  001004  53                 	db	83
    77  001005  43                 	db	67
    78  001006  46                 	db	70
    79  001007  47                 	db	71
    80  001008  3D                 	db	61
    81  001009  31                 	db	49
    82  00100A  2C                 	db	44
    83  00100B  33                 	db	51
    84  00100C  2C                 	db	44
    85  00100D  33                 	db	51
    86  00100E  30                 	db	48
    87  00100F  30                 	db	48
    88  001010  2C                 	db	44
    89  001011  39                 	db	57
    90  001012  30                 	db	48
    91  001013  2C                 	db	44
    92  001014  36                 	db	54
    93  001015  30                 	db	48
    94  001016  30                 	db	48
    95  001017  2C                 	db	44
    96  001018  35                 	db	53
    97  001019  30                 	db	48
    98  00101A  0D                 	db	13
    99  00101B  0A                 	db	10
   100  00101C  00                 	db	0
   101  00101D                     __end_of_scfg:
   102                           	opt stack 0
   103  00101D                     _cgdcont:
   104                           	opt stack 0
   105  00101D  41                 	db	65
   106  00101E  54                 	db	84
   107  00101F  2B                 	db	43
   108  001020  43                 	db	67
   109  001021  47                 	db	71
   110  001022  44                 	db	68
   111  001023  43                 	db	67
   112  001024  4F                 	db	79
   113  001025  4E                 	db	78
   114  001026  54                 	db	84
   115  001027  3D                 	db	61
   116  001028  33                 	db	51
   117  001029  2C                 	db	44
   118  00102A  22                 	db	34
   119  00102B  49                 	db	73
   120  00102C  50                 	db	80
   121  00102D  22                 	db	34
   122  00102E  2C                 	db	44
   123  00102F  22                 	db	34
   124  001030  00                 	db	0
   125  001031                     __end_of_cgdcont:
   126                           	opt stack 0
   127  001031                     _sgact:
   128                           	opt stack 0
   129  001031  41                 	db	65
   130  001032  54                 	db	84
   131  001033  23                 	db	35
   132  001034  53                 	db	83
   133  001035  47                 	db	71
   134  001036  41                 	db	65
   135  001037  43                 	db	67
   136  001038  54                 	db	84
   137  001039  3D                 	db	61
   138  00103A  33                 	db	51
   139  00103B  2C                 	db	44
   140  00103C  31                 	db	49
   141  00103D  0D                 	db	13
   142  00103E  0A                 	db	10
   143  00103F  00                 	db	0
   144  001040                     __end_of_sgact:
   145                           	opt stack 0
   146  0000                     _ANSELB	set	3897
   147  0000                     _ANSELC	set	3898
   148  0000                     _ANSELA	set	3896
   149  0000                     _PIE1bits	set	3997
   150  0000                     _SPBRGH1	set	4016
   151  0000                     _SPBRG1	set	4015
   152  0000                     _BAUDCON1	set	4024
   153  0000                     _RC1STA	set	4011
   154  0000                     _TX1STA	set	4012
   155  0000                     _INTCONbits	set	4082
   156  0000                     _TMR0H	set	4055
   157  0000                     _TMR0L	set	4054
   158  0000                     _T0CON	set	4053
   159  0000                     _LATBbits	set	3978
   160  0000                     _LATCbits	set	3979
   161  0000                     _TRISCbits	set	3988
   162  0000                     _TRISBbits	set	3987
   163  0000                     _PORTAbits	set	3968
   164  0000                     _TRISAbits	set	3986
   165  0000                     _OSCCONbits	set	4051
   166  0000                     _WDTCONbits	set	4049
   167  0000                     _PORTBbits	set	3969
   168  0000                     _RCREG	set	4014
   169  0000                     _TXREG	set	4013
   170  0000                     _PORTCbits	set	3970
   171  0000                     _RCSTAbits	set	4011
   172  0000                     _PIR1bits	set	3998
   173  0000                     _INTCON3bits	set	4080
   174  0000                     _TMR0IE	set	32661
   175  0000                     _TMR0IF	set	32658
   176  0000                     _RCIF	set	31989
   177                           
   178                           ; #config settings
   179  001040  00                 	db	0	; dummy byte at the end
   180  0000                     
   181                           	psect	cinit
   182  001094                     __pcinit:
   183                           	opt stack 0
   184  001094                     start_initialization:
   185                           	opt stack 0
   186  001094                     __initialization:
   187                           	opt stack 0
   188                           
   189                           ; Initialize objects allocated to COMRAM (2 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191  001094  0E18               	movlw	low __pidataCOMRAM
   192  001096  6EF6               	movwf	tblptrl,c
   193  001098  0E11               	movlw	high __pidataCOMRAM
   194  00109A  6EF7               	movwf	tblptrh,c
   195  00109C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196  00109E  6EF8               	movwf	tblptru,c
   197  0010A0  0009               	tblrd		*+	;fetch initializer
   198  0010A2  CFF5 F015          	movff	tablat,__pdataCOMRAM
   199  0010A6  0009               	tblrd		*+	;fetch initializer
   200  0010A8  CFF5 F016          	movff	tablat,__pdataCOMRAM+1
   201                           
   202                           ; Clear objects allocated to COMRAM (2 bytes)
   203  0010AC  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
   204  0010AE  6A13               	clrf	__pbssCOMRAM& (0+255),c
   205  0010B0                     end_of_initialization:
   206                           	opt stack 0
   207  0010B0                     __end_of__initialization:
   208                           	opt stack 0
   209  0010B0  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210  0010B2  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211  0010B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   212  0010B6  6EF8               	movwf	tblptru,c
   213  0010B8  0100               	movlb	0
   214  0010BA  EF6D  F008         	goto	_main	;jump to C main() function
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           
   220                           	psect	bssCOMRAM
   221  000013                     __pbssCOMRAM:
   222                           	opt stack 0
   223  000013                     _bled_tmr0_tick:
   224                           	opt stack 0
   225  000013                     	ds	1
   226  000014                     _gled_tmr0_tick:
   227                           	opt stack 0
   228  000014                     	ds	1
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           
   234                           	psect	dataCOMRAM
   235  000015                     __pdataCOMRAM:
   236                           	opt stack 0
   237  000015                     _B_LED_STATE:
   238                           	opt stack 0
   239  000015                     	ds	1
   240  000016                     _G_LED_STATE:
   241                           	opt stack 0
   242  000016                     	ds	1
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           
   248                           	psect	cstackCOMRAM
   249  000001                     __pcstackCOMRAM:
   250                           	opt stack 0
   251  000001                     ??_isr:
   252  000001                     
   253                           ; 1 bytes @ 0x0
   254  000001                     	ds	18
   255  000013                     tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           
   260                           ; 1 bytes @ 0x12
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 71 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   284 ;;Total ram usage:        0 bytes
   285 ;; Hardware stack levels required when called:    3
   286 ;; This function calls:
   287 ;;		_init_pic
   288 ;;		_init_uart
   289 ;;		_reload_timer0
   290 ;;		_start_timer0
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  0010DA                     __ptext0:
   298                           	opt stack 0
   299  0010DA                     _main:
   300                           	opt stack 28
   301                           
   302                           ;main.c: 73: init_pic();
   303                           
   304                           ;incstack = 0
   305  0010DA  EC21  F008         	call	_init_pic	;wreg free
   306                           
   307                           ;main.c: 74: init_uart();
   308  0010DE  EC5F  F008         	call	_init_uart	;wreg free
   309                           
   310                           ;main.c: 77: start_timer0();
   311  0010E2  EC78  F008         	call	_start_timer0	;wreg free
   312                           
   313                           ;main.c: 78: reload_timer0();
   314  0010E6  EC82  F008         	call	_reload_timer0	;wreg free
   315                           
   316                           ;main.c: 80: WDTCONbits.SWDTEN = 0;
   317  0010EA  90D1               	bcf	4049,0,c	;volatile
   318  0010EC  0004               	clrwdt		;# 
   319  0010EE                     l96:
   320                           
   321                           ;main.c: 88: {
   322  0010EE  D7FF               	goto	l96
   323  0010F0                     __end_of_main:
   324                           	opt stack 0
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           
   330 ;; *************** function _start_timer0 *****************
   331 ;; Defined at:
   332 ;;		line 181 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels used:    1
   352 ;; Hardware stack levels required when called:    2
   353 ;; This function calls:
   354 ;;		Nothing
   355 ;; This function is called by:
   356 ;;		_main
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text1
   361  0010F0                     __ptext1:
   362                           	opt stack 0
   363  0010F0                     _start_timer0:
   364                           	opt stack 28
   365                           
   366                           ;main.c: 183: T0CON = 0x87;
   367                           
   368                           ;incstack = 0
   369  0010F0  0E87               	movlw	135
   370  0010F2  6ED5               	movwf	4053,c	;volatile
   371                           
   372                           ;main.c: 184: TMR0L = ((65535-780)%256);
   373  0010F4  0EF3               	movlw	243
   374  0010F6  6ED6               	movwf	4054,c	;volatile
   375                           
   376                           ;main.c: 185: TMR0H = ((65535-780)/256);
   377  0010F8  0EFC               	movlw	252
   378  0010FA  6ED7               	movwf	4055,c	;volatile
   379                           
   380                           ;main.c: 186: TMR0IF = 0;
   381  0010FC  94F2               	bcf	intcon,2,c	;volatile
   382                           
   383                           ;main.c: 187: TMR0IE = 1;
   384  0010FE  8AF2               	bsf	intcon,5,c	;volatile
   385                           
   386                           ;main.c: 188: INTCONbits.GIE = 1;
   387  001100  8EF2               	bsf	intcon,7,c	;volatile
   388  001102  0012               	return		;funcret
   389  001104                     __end_of_start_timer0:
   390                           	opt stack 0
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           intcon	equ	0xFF2
   396                           
   397 ;; *************** function _reload_timer0 *****************
   398 ;; Defined at:
   399 ;;		line 192 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    2
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text2
   428  001104                     __ptext2:
   429                           	opt stack 0
   430  001104                     _reload_timer0:
   431                           	opt stack 28
   432                           
   433                           ;main.c: 194: TMR0L = ((65535-780)%256);
   434                           
   435                           ;incstack = 0
   436  001104  0EF3               	movlw	243
   437  001106  6ED6               	movwf	4054,c	;volatile
   438                           
   439                           ;main.c: 195: TMR0H = ((65535-780)/256);
   440  001108  0EFC               	movlw	252
   441  00110A  6ED7               	movwf	4055,c	;volatile
   442  00110C  0012               	return		;funcret
   443  00110E                     __end_of_reload_timer0:
   444                           	opt stack 0
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           intcon	equ	0xFF2
   450                           
   451 ;; *************** function _init_uart *****************
   452 ;; Defined at:
   453 ;;		line 5 in file "uart.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; Hardware stack levels required when called:    2
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text3
   482  0010BE                     __ptext3:
   483                           	opt stack 0
   484  0010BE                     _init_uart:
   485                           	opt stack 28
   486                           
   487                           ;uart.c: 7: TX1STA = 0x26;
   488                           
   489                           ;incstack = 0
   490  0010BE  0E26               	movlw	38
   491  0010C0  6EAC               	movwf	4012,c	;volatile
   492                           
   493                           ;uart.c: 8: RC1STA = 0x90;
   494  0010C2  0E90               	movlw	144
   495  0010C4  6EAB               	movwf	4011,c	;volatile
   496                           
   497                           ;uart.c: 9: BAUDCON1 = 0xc8;
   498  0010C6  0EC8               	movlw	200
   499  0010C8  6EB8               	movwf	4024,c	;volatile
   500                           
   501                           ;uart.c: 10: SPBRG1 = 103;
   502  0010CA  0E67               	movlw	103
   503  0010CC  6EAF               	movwf	4015,c	;volatile
   504                           
   505                           ;uart.c: 11: SPBRGH1 = 0;
   506  0010CE  0E00               	movlw	0
   507  0010D0  6EB0               	movwf	4016,c	;volatile
   508                           
   509                           ;uart.c: 12: INTCONbits.PEIE = 1;
   510  0010D2  8CF2               	bsf	intcon,6,c	;volatile
   511                           
   512                           ;uart.c: 13: PIE1bits.RC1IE = 1;
   513  0010D4  8A9D               	bsf	3997,5,c	;volatile
   514                           
   515                           ;uart.c: 14: INTCONbits.GIE = 1;
   516  0010D6  8EF2               	bsf	intcon,7,c	;volatile
   517  0010D8  0012               	return		;funcret
   518  0010DA                     __end_of_init_uart:
   519                           	opt stack 0
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           intcon	equ	0xFF2
   525                           
   526 ;; *************** function _init_pic *****************
   527 ;; Defined at:
   528 ;;		line 105 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text4
   557  001042                     __ptext4:
   558                           	opt stack 0
   559  001042                     _init_pic:
   560                           	opt stack 28
   561                           
   562                           ;main.c: 108: OSCCONbits.IDLEN = 0;
   563                           
   564                           ;incstack = 0
   565  001042  9ED3               	bcf	4051,7,c	;volatile
   566                           
   567                           ;main.c: 109: OSCCONbits.IRCF = 0b110;
   568  001044  50D3               	movf	4051,w,c	;volatile
   569  001046  0B8F               	andlw	-113
   570  001048  0960               	iorlw	96
   571  00104A  6ED3               	movwf	4051,c	;volatile
   572                           
   573                           ;main.c: 110: OSCCONbits.OSTS = 1;
   574  00104C  86D3               	bsf	4051,3,c	;volatile
   575                           
   576                           ;main.c: 114: ANSELA = 0x01;
   577  00104E  0E01               	movlw	1
   578  001050  010F               	movlb	15	; () banked
   579  001052  6F38               	movwf	56,b	;volatile
   580                           
   581                           ; BSR set to: 15
   582                           ;main.c: 116: TRISAbits.TRISA0 = 1;
   583  001054  8092               	bsf	3986,0,c	;volatile
   584                           
   585                           ; BSR set to: 15
   586                           ;main.c: 117: TRISAbits.TRISA3 = 0;
   587  001056  9692               	bcf	3986,3,c	;volatile
   588                           
   589                           ; BSR set to: 15
   590                           ;main.c: 118: PORTAbits.RA3 = 0;
   591  001058  9680               	bcf	3968,3,c	;volatile
   592                           
   593                           ;main.c: 121: ANSELC = 0x00;
   594  00105A  0E00               	movlw	0
   595  00105C  6F3A               	movwf	58,b	;volatile
   596                           
   597                           ; BSR set to: 15
   598                           ;main.c: 122: PORTBbits.RB3 = 1;
   599  00105E  8681               	bsf	3969,3,c	;volatile
   600                           
   601                           ; BSR set to: 15
   602                           ;main.c: 123: TRISBbits.TRISB3 = 0;
   603  001060  9693               	bcf	3987,3,c	;volatile
   604                           
   605                           ; BSR set to: 15
   606                           ;main.c: 124: PORTCbits.RC6 = 1;
   607  001062  8C82               	bsf	3970,6,c	;volatile
   608                           
   609                           ; BSR set to: 15
   610                           ;main.c: 125: TRISCbits.TRISC6 = 0;
   611  001064  9C94               	bcf	3988,6,c	;volatile
   612                           
   613                           ; BSR set to: 15
   614                           ;main.c: 126: LATCbits.LATC7 = 1;
   615  001066  8E8B               	bsf	3979,7,c	;volatile
   616                           
   617                           ; BSR set to: 15
   618                           ;main.c: 127: TRISCbits.TRISC7 = 1;
   619  001068  8E94               	bsf	3988,7,c	;volatile
   620                           
   621                           ;main.c: 130: ANSELB = 0x00;
   622  00106A  0E00               	movlw	0
   623  00106C  6F39               	movwf	57,b	;volatile
   624                           
   625                           ; BSR set to: 15
   626                           ;main.c: 132: TRISBbits.TRISB0 = 1;
   627  00106E  8093               	bsf	3987,0,c	;volatile
   628                           
   629                           ; BSR set to: 15
   630                           ;main.c: 133: TRISCbits.TRISC1 = 1;
   631  001070  8294               	bsf	3988,1,c	;volatile
   632                           
   633                           ; BSR set to: 15
   634                           ;main.c: 134: LATBbits.LB1 = 1;
   635  001072  828A               	bsf	3978,1,c	;volatile
   636                           
   637                           ; BSR set to: 15
   638                           ;main.c: 135: TRISBbits.TRISB1 = 1;
   639  001074  8293               	bsf	3987,1,c	;volatile
   640                           
   641                           ; BSR set to: 15
   642                           ;main.c: 136: LATBbits.LATB2 = 1;
   643  001076  848A               	bsf	3978,2,c	;volatile
   644                           
   645                           ; BSR set to: 15
   646                           ;main.c: 137: TRISBbits.TRISB2 = 1;
   647  001078  8493               	bsf	3987,2,c	;volatile
   648                           
   649                           ; BSR set to: 15
   650                           ;main.c: 138: PORTCbits.RC4 = 1;
   651  00107A  8882               	bsf	3970,4,c	;volatile
   652                           
   653                           ; BSR set to: 15
   654                           ;main.c: 139: TRISCbits.TRISC4 = 0;
   655  00107C  9894               	bcf	3988,4,c	;volatile
   656                           
   657                           ; BSR set to: 15
   658                           ;main.c: 140: LATBbits.LATB4 = 1;
   659  00107E  888A               	bsf	3978,4,c	;volatile
   660                           
   661                           ; BSR set to: 15
   662                           ;main.c: 141: TRISBbits.TRISB4 = 1;
   663  001080  8893               	bsf	3987,4,c	;volatile
   664                           
   665                           ; BSR set to: 15
   666                           ;main.c: 142: LATBbits.LATB5 = 1;
   667  001082  8A8A               	bsf	3978,5,c	;volatile
   668                           
   669                           ; BSR set to: 15
   670                           ;main.c: 143: TRISBbits.TRISB5 = 1;
   671  001084  8A93               	bsf	3987,5,c	;volatile
   672                           
   673                           ; BSR set to: 15
   674                           ;main.c: 144: LATBbits.LATB6 = 1;
   675  001086  8C8A               	bsf	3978,6,c	;volatile
   676                           
   677                           ; BSR set to: 15
   678                           ;main.c: 145: TRISBbits.TRISB6 = 0;
   679  001088  9C93               	bcf	3987,6,c	;volatile
   680                           
   681                           ; BSR set to: 15
   682                           ;main.c: 146: PORTBbits.RB7 = 1;
   683  00108A  8E81               	bsf	3969,7,c	;volatile
   684                           
   685                           ; BSR set to: 15
   686                           ;main.c: 147: TRISBbits.TRISB7 = 1;
   687  00108C  8E93               	bsf	3987,7,c	;volatile
   688                           
   689                           ; BSR set to: 15
   690                           ;main.c: 149: PORTAbits.RA1 = 0;
   691  00108E  9280               	bcf	3968,1,c	;volatile
   692                           
   693                           ; BSR set to: 15
   694                           ;main.c: 150: TRISAbits.TRISA1 = 0;
   695  001090  9292               	bcf	3986,1,c	;volatile
   696                           
   697                           ; BSR set to: 15
   698  001092  0012               	return		;funcret
   699  001094                     __end_of_init_pic:
   700                           	opt stack 0
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           intcon	equ	0xFF2
   706                           
   707 ;; *************** function _isr *****************
   708 ;; Defined at:
   709 ;;		line 16 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;Total ram usage:       18 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    1
   730 ;; This function calls:
   731 ;;		i2_reload_timer0
   732 ;; This function is called by:
   733 ;;		Interrupt level 2
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	intcode
   738  000008                     __pintcode:
   739                           	opt stack 0
   740  000008                     _isr:
   741                           	opt stack 28
   742                           
   743                           ; BSR set to: 15
   744                           ;incstack = 0
   745  000008  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   746  00000A  CFFA F001          	movff	pclath,??_isr
   747  00000E  CFFB F002          	movff	pclatu,??_isr+1
   748  000012  CFE9 F003          	movff	fsr0l,??_isr+2
   749  000016  CFEA F004          	movff	fsr0h,??_isr+3
   750  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
   751  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
   752  000022  CFD9 F007          	movff	fsr2l,??_isr+6
   753  000026  CFDA F008          	movff	fsr2h,??_isr+7
   754  00002A  CFF3 F009          	movff	prodl,??_isr+8
   755  00002E  CFF4 F00A          	movff	prodh,??_isr+9
   756  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
   757  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
   758  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
   759  00003E  CFF5 F00E          	movff	tablat,??_isr+13
   760  000042  C017  F00F         	movff	btemp,??_isr+14
   761  000046  C018  F010         	movff	btemp+1,??_isr+15
   762  00004A  C019  F011         	movff	btemp+2,??_isr+16
   763  00004E  C01A  F012         	movff	btemp+3,??_isr+17
   764                           
   765                           ;main.c: 18: if (INTCON3bits.INT1IF){}
   766  000052  50F0               	movf	intcon3,w,c	;volatile
   767                           
   768                           ;main.c: 21: if(PIR1bits.RCIF)
   769  000054  AA9E               	btfss	3998,5,c	;volatile
   770  000056  D007               	goto	i2l78
   771                           
   772                           ;main.c: 22: {
   773                           ;main.c: 23: RCIF = 0;
   774  000058  9A9E               	bcf	3998,5,c	;volatile
   775                           
   776                           ;main.c: 24: if(RCSTAbits.FERR && !PORTCbits.RC7)
   777  00005A  B4AB               	btfsc	4011,2,c	;volatile
   778  00005C  BE82               	btfsc	3970,7,c	;volatile
   779  00005E  D001               	goto	i2l79
   780  000060  00FF               	reset		;# 
   781  000062                     i2l79:
   782                           
   783                           ;main.c: 28: }
   784                           ;main.c: 29: TXREG = RCREG;
   785  000062  CFAE FFAD          	movff	4014,4013	;volatile
   786  000066                     i2l78:
   787                           
   788                           ;main.c: 30: }
   789                           ;main.c: 33: if (TMR0IF)
   790  000066  A4F2               	btfss	intcon,2,c	;volatile
   791  000068  D02F               	goto	i2l90
   792                           
   793                           ;main.c: 34: {
   794                           ;main.c: 35: TMR0IF = 0;
   795  00006A  94F2               	bcf	intcon,2,c	;volatile
   796                           
   797                           ;main.c: 36: gled_tmr0_tick++;
   798  00006C  2A14               	incf	_gled_tmr0_tick,f,c
   799                           
   800                           ;main.c: 37: bled_tmr0_tick++;
   801  00006E  2A13               	incf	_bled_tmr0_tick,f,c
   802                           
   803                           ;main.c: 39: switch (gled_tmr0_tick)
   804  000070  D011               	goto	i2l81
   805  000072                     
   806                           ;main.c: 43: gled_tmr0_tick = 0;
   807  000072  0E00               	movlw	0
   808  000074  6E14               	movwf	_gled_tmr0_tick,c
   809                           
   810                           ;main.c: 44: if (G_LED_STATE)
   811  000076  5016               	movf	_G_LED_STATE,w,c
   812  000078  B4D8               	btfsc	status,2,c
   813  00007A  D002               	goto	i2l83
   814                           
   815                           ;main.c: 45: G_LED_STATE = 0;
   816  00007C  0E00               	movlw	0
   817  00007E  D001               	goto	L1
   818  000080                     i2l83:
   819                           
   820                           ;main.c: 46: else
   821                           ;main.c: 47: G_LED_STATE = 1;
   822  000080  0E01               	movlw	1
   823  000082                     L1:
   824  000082  6E16               	movwf	_G_LED_STATE,c
   825                           
   826                           ;main.c: 48: PORTBbits.RB3 = (bool)(G_LED_STATE);
   827  000084  B016               	btfsc	_G_LED_STATE,0,c
   828  000086  D002               	bra	i2u6_45
   829  000088  9681               	bcf	3969,3,c	;volatile
   830  00008A  D001               	bra	i2u6_46
   831  00008C                     i2u6_45:
   832  00008C  8681               	bsf	3969,3,c	;volatile
   833  00008E                     i2u6_46:
   834                           
   835                           ;main.c: 49: reload_timer0();
   836  00008E  EC87  F008         	call	i2_reload_timer0	;wreg free
   837                           
   838                           ;main.c: 51: }
   839                           
   840                           ;main.c: 50: break;
   841  000092  D016               	goto	i2l86
   842  000094                     i2l81:
   843  000094  5014               	movf	_gled_tmr0_tick,w,c
   844                           
   845                           ; Switch size 1, requested type "space"
   846                           ; Number of cases is 1, Range of values is 10 to 10
   847                           ; switch strategies available:
   848                           ; Name         Instructions Cycles
   849                           ; simple_byte            4     3 (average)
   850                           ;	Chosen strategy is simple_byte
   851  000096  0A0A               	xorlw	10	; case 10
   852  000098  B4D8               	btfsc	status,2,c
   853  00009A  D7EB               	goto	i2l82
   854                           
   855                           ;main.c: 53: switch (bled_tmr0_tick)
   856  00009C  D011               	goto	i2l86
   857  00009E                     
   858                           ;main.c: 56: bled_tmr0_tick = 0;
   859  00009E  0E00               	movlw	0
   860  0000A0  6E13               	movwf	_bled_tmr0_tick,c
   861                           
   862                           ;main.c: 57: if (B_LED_STATE)
   863  0000A2  5015               	movf	_B_LED_STATE,w,c
   864  0000A4  B4D8               	btfsc	status,2,c
   865  0000A6  D002               	goto	i2l88
   866                           
   867                           ;main.c: 58: B_LED_STATE = 0;
   868  0000A8  0E00               	movlw	0
   869  0000AA  D001               	goto	L2
   870  0000AC                     i2l88:
   871                           
   872                           ;main.c: 59: else
   873                           ;main.c: 60: B_LED_STATE = 1;
   874  0000AC  0E01               	movlw	1
   875  0000AE                     L2:
   876  0000AE  6E15               	movwf	_B_LED_STATE,c
   877                           
   878                           ;main.c: 61: PORTCbits.RC4 = (bool)(B_LED_STATE);
   879  0000B0  B015               	btfsc	_B_LED_STATE,0,c
   880  0000B2  D002               	bra	i2u8_45
   881  0000B4  9882               	bcf	3970,4,c	;volatile
   882  0000B6  D001               	bra	i2u8_46
   883  0000B8                     i2u8_45:
   884  0000B8  8882               	bsf	3970,4,c	;volatile
   885  0000BA                     i2u8_46:
   886                           
   887                           ;main.c: 62: reload_timer0();
   888  0000BA  EC87  F008         	call	i2_reload_timer0	;wreg free
   889                           
   890                           ;main.c: 64: }
   891                           
   892                           ;main.c: 63: break;
   893  0000BE  D004               	goto	i2l90
   894  0000C0                     i2l86:
   895  0000C0  5013               	movf	_bled_tmr0_tick,w,c
   896                           
   897                           ; Switch size 1, requested type "space"
   898                           ; Number of cases is 1, Range of values is 1 to 1
   899                           ; switch strategies available:
   900                           ; Name         Instructions Cycles
   901                           ; simple_byte            4     3 (average)
   902                           ;	Chosen strategy is simple_byte
   903  0000C2  0A01               	xorlw	1	; case 1
   904  0000C4  B4D8               	btfsc	status,2,c
   905  0000C6  D7EB               	goto	i2l87
   906  0000C8                     i2l90:
   907  0000C8  C012  F01A         	movff	??_isr+17,btemp+3
   908  0000CC  C011  F019         	movff	??_isr+16,btemp+2
   909  0000D0  C010  F018         	movff	??_isr+15,btemp+1
   910  0000D4  C00F  F017         	movff	??_isr+14,btemp
   911  0000D8  C00E  FFF5         	movff	??_isr+13,tablat
   912  0000DC  C00D  FFF8         	movff	??_isr+12,tblptru
   913  0000E0  C00C  FFF7         	movff	??_isr+11,tblptrh
   914  0000E4  C00B  FFF6         	movff	??_isr+10,tblptrl
   915  0000E8  C00A  FFF4         	movff	??_isr+9,prodh
   916  0000EC  C009  FFF3         	movff	??_isr+8,prodl
   917  0000F0  C008  FFDA         	movff	??_isr+7,fsr2h
   918  0000F4  C007  FFD9         	movff	??_isr+6,fsr2l
   919  0000F8  C006  FFE2         	movff	??_isr+5,fsr1h
   920  0000FC  C005  FFE1         	movff	??_isr+4,fsr1l
   921  000100  C004  FFEA         	movff	??_isr+3,fsr0h
   922  000104  C003  FFE9         	movff	??_isr+2,fsr0l
   923  000108  C002  FFFB         	movff	??_isr+1,pclatu
   924  00010C  C001  FFFA         	movff	??_isr,pclath
   925  000110  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   926  000112  0011               	retfie		f
   927  000114                     __end_of_isr:
   928                           	opt stack 0
   929                           pclatu	equ	0xFFB
   930                           pclath	equ	0xFFA
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           prodh	equ	0xFF4
   936                           prodl	equ	0xFF3
   937                           intcon	equ	0xFF2
   938                           intcon3	equ	0xFF0
   939                           fsr0h	equ	0xFEA
   940                           fsr0l	equ	0xFE9
   941                           fsr1h	equ	0xFE2
   942                           fsr1l	equ	0xFE1
   943                           fsr2h	equ	0xFDA
   944                           fsr2l	equ	0xFD9
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function i2_reload_timer0 *****************
   948 ;; Defined at:
   949 ;;		line 192 in file "main.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_isr
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text6
   977  00110E                     __ptext6:
   978                           	opt stack 0
   979  00110E                     i2_reload_timer0:
   980                           	opt stack 28
   981                           
   982                           ;main.c: 194: TMR0L = ((65535-780)%256);
   983                           
   984                           ;incstack = 0
   985  00110E  0EF3               	movlw	243
   986  001110  6ED6               	movwf	4054,c	;volatile
   987                           
   988                           ;main.c: 195: TMR0H = ((65535-780)/256);
   989  001112  0EFC               	movlw	252
   990  001114  6ED7               	movwf	4055,c	;volatile
   991  001116  0012               	return		;funcret
   992  001118                     __end_ofi2_reload_timer0:
   993                           	opt stack 0
   994                           pclatu	equ	0xFFB
   995                           pclath	equ	0xFFA
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           prodh	equ	0xFF4
  1001                           prodl	equ	0xFF3
  1002                           intcon	equ	0xFF2
  1003                           intcon3	equ	0xFF0
  1004                           fsr0h	equ	0xFEA
  1005                           fsr0l	equ	0xFE9
  1006                           fsr1h	equ	0xFE2
  1007                           fsr1l	equ	0xFE1
  1008                           fsr2h	equ	0xFDA
  1009                           fsr2l	equ	0xFD9
  1010                           status	equ	0xFD8
  1011                           pclatu	equ	0xFFB
  1012                           pclath	equ	0xFFA
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           prodh	equ	0xFF4
  1018                           prodl	equ	0xFF3
  1019                           intcon	equ	0xFF2
  1020                           intcon3	equ	0xFF0
  1021                           fsr0h	equ	0xFEA
  1022                           fsr0l	equ	0xFE9
  1023                           fsr1h	equ	0xFE2
  1024                           fsr1l	equ	0xFE1
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8
  1028                           
  1029                           	psect	rparam
  1030  0000                     pclatu	equ	0xFFB
  1031                           pclath	equ	0xFFA
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           prodh	equ	0xFF4
  1037                           prodl	equ	0xFF3
  1038                           intcon	equ	0xFF2
  1039                           intcon3	equ	0xFF0
  1040                           fsr0h	equ	0xFEA
  1041                           fsr0l	equ	0xFE9
  1042                           fsr1h	equ	0xFE2
  1043                           fsr1l	equ	0xFE1
  1044                           fsr2h	equ	0xFDA
  1045                           fsr2l	equ	0xFD9
  1046                           status	equ	0xFD8
  1047                           
  1048                           	psect	temp
  1049  000017                     btemp:
  1050                           	opt stack 0
  1051  000017                     	ds	1
  1052  0000                     int$flags	set	btemp
  1053  0000                     wtemp6	set	btemp+1
  1054                           pclatu	equ	0xFFB
  1055                           pclath	equ	0xFFA
  1056                           tblptru	equ	0xFF8
  1057                           tblptrh	equ	0xFF7
  1058                           tblptrl	equ	0xFF6
  1059                           tablat	equ	0xFF5
  1060                           prodh	equ	0xFF4
  1061                           prodl	equ	0xFF3
  1062                           intcon	equ	0xFF2
  1063                           intcon3	equ	0xFF0
  1064                           fsr0h	equ	0xFEA
  1065                           fsr0l	equ	0xFE9
  1066                           fsr1h	equ	0xFE2
  1067                           fsr1l	equ	0xFE1
  1068                           fsr2h	equ	0xFDA
  1069                           fsr2l	equ	0xFD9
  1070                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    63
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _init_pic
                          _init_uart
                      _reload_timer0
                       _start_timer0
 ---------------------------------------------------------------------------------
 (1) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reload_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 18    18      0       0
                                              0 COMRAM    18    18      0
                    i2_reload_timer0
 ---------------------------------------------------------------------------------
 (3) i2_reload_timer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_pic
   _init_uart
   _reload_timer0
   _start_timer0

 _isr (ROOT)
   i2_reload_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      16       1       23.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      12        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Oct 09 15:39:38 2018

   __size_of_start_timer0 0014                        l96 10EE              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       _isr 0008  
         i2_reload_timer0 110E              __CFG_LVP$OFF 000000                      ?_isr 0001  
                    _RCIF 007CF5                      i2l81 0094                      i2l90 00C8  
                    i2l82 0072                      i2l83 0080                      i2l86 00C0  
                    i2l78 0066                      i2l87 009E                      i2l79 0062  
                    i2l88 00AC              __CFG_WRT3$ON 000000             __CFG_FCMEN$ON 000000  
                    _main 10DA                      _scfg 1001                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr2h 000FDA                      fsr0l 000FE9  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 0017  
            _start_timer0 10F0             __CFG_BORV$190 000000                      prodh 000FF4  
                    prodl 000FF3                      start 0114             __CFG_IESO$OFF 000000  
            ___param_bank 000000                     ??_isr 0001                     ?_main 0001  
                   _T0CON 000FD5                     _RCREG 000FAE                     _TMR0H 000FD7  
                   _TMR0L 000FD6           __end_of_cgdcont 1031                     _TXREG 000FAD  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
          __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000        __CFG_MCLRE$INTMCLR 000000  
                   _sgact 1031            __CFG_BOREN$OFF 000000                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 0018  
          __CFG_HFOFST$ON 000000           __initialization 1094              __end_of_main 10F0  
            __end_of_scfg 101D     __end_of_reload_timer0 110E   __end_ofi2_reload_timer0 1118  
          _bled_tmr0_tick 0013                    ??_main 0013             __activetblptr 000002  
                  _ANSELA 000F38                    _ANSELB 000F39                    _ANSELC 000F3A  
                  _RC1STA 000FAB            __CFG_WDTEN$OFF 000000                    _TMR0IE 007F95  
                  _SPBRG1 000FAF                    _TMR0IF 007F92            __CFG_WDTPS$256 000000  
                  _TX1STA 000FAC                    i2u6_45 008C                    i2u6_46 008E  
                  i2u8_45 00B8                    i2u8_46 00BA            __CFG_XINST$OFF 000000  
          __CFG_STVREN$ON 000000          __end_of_init_pic 1094              __pdataCOMRAM 0015  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 10B0  
         __CFG_PBADEN$OFF 000000             ___rparam_used 000001            __pcstackCOMRAM 0001  
           __end_of_sgact 1040          ?i2_reload_timer0 0001           __CFG_PLLCFG$OFF 000000  
      __size_of_init_uart 001C        __CFG_CCP2MX$PORTC1 000000        __CFG_CCP3MX$PORTB5 000000  
                 _SPBRGH1 000FB0                 ?_init_pic 0001           __CFG_PWRTEN$OFF 000000  
                 __Hparam 0000                   __Lparam 0000              __psmallconst 1000  
                 _cgdcont 101D                   __pcinit 1094                   __ramtop 1000  
                 __ptext0 10DA                   __ptext1 10F0                   __ptext2 1104  
                 __ptext3 10BE                   __ptext4 1042                   __ptext6 110E  
            __size_of_isr 010C         __end_of_init_uart 10DA      end_of_initialization 10B0  
           __Lmediumconst 0000                ??_init_pic 0013                 _RCSTAbits 000FAB  
               _PORTAbits 000F80                 _PORTBbits 000F81                 _PORTCbits 000F82  
               _TRISAbits 000F92                 _TRISBbits 000F93                 _TRISCbits 000F94  
  __size_of_reload_timer0 000A             __pidataCOMRAM 1118       start_initialization 1094  
             __end_of_isr 0114             ?_start_timer0 0001             _reload_timer0 1104  
             __pbssCOMRAM 0013  __size_ofi2_reload_timer0 000A            ??_start_timer0 0013  
       __size_of_init_pic 0052                 __pintcode 0008            ?_reload_timer0 0001  
        __CFG_PRICLKEN$ON 000000               __smallconst 1000                  _BAUDCON1 000FB8  
               _init_uart 10BE                  _LATBbits 000F8A                  _LATCbits 000F8B  
                _PIE1bits 000F9D                  _PIR1bits 000F9E               _B_LED_STATE 0015  
              ?_init_uart 0001               _INTCON3bits 000FF0         ??i2_reload_timer0 0001  
                __Hrparam 0000           ??_reload_timer0 0013                  __Lrparam 0000  
       __CFG_P2BMX$PORTB5 000000      __end_of_start_timer0 1104            _gled_tmr0_tick 0014  
           __size_of_main 0016                  _init_pic 1042               _G_LED_STATE 0016  
                int$flags 0017                _INTCONbits 000FF2               ??_init_uart 0013  
                intlevel2 0000                _OSCCONbits 000FD3         __CFG_T3CMX$PORTC0 000000  
              _WDTCONbits 000FD1         __CFG_FOSC$INTIO67 000000  
