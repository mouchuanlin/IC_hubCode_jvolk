

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 17 16:58:52 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F26K22 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  001608                     __pidataCOMRAM:
    88                           	opt stack 0
    89                           
    90                           ;initializer for wakeup_module_ok@F6760
    91  001608  41                 	db	65
    92  001609  54                 	db	84
    93  00160A  2B                 	db	43
    94  00160B  49                 	db	73
    95  00160C  50                 	db	80
    96  00160D  52                 	db	82
    97  00160E  3D                 	db	61
    98  00160F  31                 	db	49
    99  001610  31                 	db	49
   100  001611  35                 	db	53
   101  001612  32                 	db	50
   102  001613  30                 	db	48
   103  001614  30                 	db	48
   104  001615  0D                 	db	13
   105  001616  0A                 	db	10
   106  001617  00                 	db	0
   107                           
   108                           ;initializer for wakeup_module_ok@F6758
   109  001618  41                 	db	65
   110  001619  54                 	db	84
   111  00161A  0D                 	db	13
   112  00161B  0A                 	db	10
   113  00161C  00                 	db	0
   114                           
   115                           ;initializer for _delayBetweenBytes
   116  00161D  000A               	dw	10
   117                           
   118                           ;initializer for _HL_freq
   119  00161F  01                 	db	1
   120                           
   121                           	psect	idataBANK0
   122  00166C                     __pidataBANK0:
   123                           	opt stack 0
   124                           
   125                           ;initializer for _inListenMode
   126  00166C  01                 	db	1
   127                           
   128                           ;initializer for _JENS_NUMBER
   129  00166D  38                 	db	56
   130  00166E  30                 	db	48
   131  00166F  35                 	db	53
   132  001670  36                 	db	54
   133  001671  34                 	db	52
   134  001672  30                 	db	48
   135  001673  35                 	db	53
   136  001674  31                 	db	49
   137  001675  32                 	db	50
   138  001676  37                 	db	55
   139  001677  00                 	db	0
   140                           
   141                           	psect	mediumconst
   142  00FE1C                     __pmediumconst:
   143                           	opt stack 0
   144  00FE1C  00                 	db	0
   145  00FE1D                     receive_sms_init@F6786:
   146                           	opt stack 0
   147  00FE1D  41                 	db	65
   148  00FE1E  54                 	db	84
   149  00FE1F  2B                 	db	43
   150  00FE20  43                 	db	67
   151  00FE21  50                 	db	80
   152  00FE22  4D                 	db	77
   153  00FE23  53                 	db	83
   154  00FE24  3D                 	db	61
   155  00FE25  22                 	db	34
   156  00FE26  4D                 	db	77
   157  00FE27  45                 	db	69
   158  00FE28  22                 	db	34
   159  00FE29  2C                 	db	44
   160  00FE2A  22                 	db	34
   161  00FE2B  4D                 	db	77
   162  00FE2C  45                 	db	69
   163  00FE2D  22                 	db	34
   164  00FE2E  2C                 	db	44
   165  00FE2F  22                 	db	34
   166  00FE30  4D                 	db	77
   167  00FE31  45                 	db	69
   168  00FE32  22                 	db	34
   169  00FE33  0D                 	db	13
   170  00FE34  0A                 	db	10
   171  00FE35  24                 	db	36
   172  00FE36  00                 	db	0
   173  00FE37                     __end_ofreceive_sms_init@F6786:
   174                           	opt stack 0
   175  00FE37                     socket_configured@F6782:
   176                           	opt stack 0
   177  00FE37  41                 	db	65
   178  00FE38  54                 	db	84
   179  00FE39  23                 	db	35
   180  00FE3A  53                 	db	83
   181  00FE3B  43                 	db	67
   182  00FE3C  46                 	db	70
   183  00FE3D  47                 	db	71
   184  00FE3E  45                 	db	69
   185  00FE3F  58                 	db	88
   186  00FE40  54                 	db	84
   187  00FE41  3D                 	db	61
   188  00FE42  31                 	db	49
   189  00FE43  2C                 	db	44
   190  00FE44  31                 	db	49
   191  00FE45  2C                 	db	44
   192  00FE46  30                 	db	48
   193  00FE47  2C                 	db	44
   194  00FE48  30                 	db	48
   195  00FE49  2C                 	db	44
   196  00FE4A  30                 	db	48
   197  00FE4B  2C                 	db	44
   198  00FE4C  30                 	db	48
   199  00FE4D  0D                 	db	13
   200  00FE4E  0A                 	db	10
   201  00FE4F  00                 	db	0
   202  00FE50                     __end_ofsocket_configured@F6782:
   203                           	opt stack 0
   204  00FE50                     init_modem_ok@F6780:
   205                           	opt stack 0
   206  00FE50  41                 	db	65
   207  00FE51  54                 	db	84
   208  00FE52  23                 	db	35
   209  00FE53  47                 	db	71
   210  00FE54  50                 	db	80
   211  00FE55  49                 	db	73
   212  00FE56  4F                 	db	79
   213  00FE57  3D                 	db	61
   214  00FE58  37                 	db	55
   215  00FE59  2C                 	db	44
   216  00FE5A  30                 	db	48
   217  00FE5B  2C                 	db	44
   218  00FE5C  32                 	db	50
   219  00FE5D  0D                 	db	13
   220  00FE5E  0A                 	db	10
   221  00FE5F  00                 	db	0
   222  00FE60                     __end_ofinit_modem_ok@F6780:
   223                           	opt stack 0
   224  00FE60                     check_sms@F6796:
   225                           	opt stack 0
   226  00FE60  41                 	db	65
   227  00FE61  54                 	db	84
   228  00FE62  2B                 	db	43
   229  00FE63  43                 	db	67
   230  00FE64  4D                 	db	77
   231  00FE65  47                 	db	71
   232  00FE66  4C                 	db	76
   233  00FE67  3D                 	db	61
   234  00FE68  22                 	db	34
   235  00FE69  41                 	db	65
   236  00FE6A  4C                 	db	76
   237  00FE6B  4C                 	db	76
   238  00FE6C  22                 	db	34
   239  00FE6D  0D                 	db	13
   240  00FE6E  0A                 	db	10
   241  00FE6F  00                 	db	0
   242  00FE70                     __end_ofcheck_sms@F6796:
   243                           	opt stack 0
   244  00FE70                     receive_sms_init@F6788:
   245                           	opt stack 0
   246  00FE70  41                 	db	65
   247  00FE71  54                 	db	84
   248  00FE72  2B                 	db	43
   249  00FE73  43                 	db	67
   250  00FE74  4E                 	db	78
   251  00FE75  4D                 	db	77
   252  00FE76  49                 	db	73
   253  00FE77  3D                 	db	61
   254  00FE78  31                 	db	49
   255  00FE79  2C                 	db	44
   256  00FE7A  31                 	db	49
   257  00FE7B  0D                 	db	13
   258  00FE7C  0A                 	db	10
   259  00FE7D  24                 	db	36
   260  00FE7E  00                 	db	0
   261  00FE7F                     __end_ofreceive_sms_init@F6788:
   262                           	opt stack 0
   263  00FE7F                     sim_card_ok@F6793:
   264                           	opt stack 0
   265  00FE7F  2B                 	db	43
   266  00FE80  43                 	db	67
   267  00FE81  50                 	db	80
   268  00FE82  49                 	db	73
   269  00FE83  4E                 	db	78
   270  00FE84  3A                 	db	58
   271  00FE85  20                 	db	32
   272  00FE86  52                 	db	82
   273  00FE87  45                 	db	69
   274  00FE88  41                 	db	65
   275  00FE89  44                 	db	68
   276  00FE8A  59                 	db	89
   277  00FE8B  00                 	db	0
   278  00FE8C                     __end_ofsim_card_ok@F6793:
   279                           	opt stack 0
   280  00FE8C                     receive_sms_init@F6784:
   281                           	opt stack 0
   282  00FE8C  41                 	db	65
   283  00FE8D  54                 	db	84
   284  00FE8E  2B                 	db	43
   285  00FE8F  43                 	db	67
   286  00FE90  4D                 	db	77
   287  00FE91  47                 	db	71
   288  00FE92  46                 	db	70
   289  00FE93  3D                 	db	61
   290  00FE94  31                 	db	49
   291  00FE95  0D                 	db	13
   292  00FE96  0A                 	db	10
   293  00FE97  24                 	db	36
   294  00FE98  00                 	db	0
   295  00FE99                     __end_ofreceive_sms_init@F6784:
   296                           	opt stack 0
   297  00FE99                     init_modem_ok@F6784:
   298                           	opt stack 0
   299  00FE99  41                 	db	65
   300  00FE9A  54                 	db	84
   301  00FE9B  23                 	db	35
   302  00FE9C  53                 	db	83
   303  00FE9D  4C                 	db	76
   304  00FE9E  45                 	db	69
   305  00FE9F  44                 	db	68
   306  00FEA0  3D                 	db	61
   307  00FEA1  34                 	db	52
   308  00FEA2  0D                 	db	13
   309  00FEA3  0A                 	db	10
   310  00FEA4  00                 	db	0
   311  00FEA5                     __end_ofinit_modem_ok@F6784:
   312                           	opt stack 0
   313  00FEA5                     md_attached@F6786:
   314                           	opt stack 0
   315  00FEA5  41                 	db	65
   316  00FEA6  54                 	db	84
   317  00FEA7  2B                 	db	43
   318  00FEA8  43                 	db	67
   319  00FEA9  47                 	db	71
   320  00FEAA  41                 	db	65
   321  00FEAB  54                 	db	84
   322  00FEAC  54                 	db	84
   323  00FEAD  3F                 	db	63
   324  00FEAE  0D                 	db	13
   325  00FEAF  0A                 	db	10
   326  00FEB0  00                 	db	0
   327  00FEB1                     __end_ofmd_attached@F6786:
   328                           	opt stack 0
   329  00FEB1                     registration_ok@F6760:
   330                           	opt stack 0
   331  00FEB1  41                 	db	65
   332  00FEB2  54                 	db	84
   333  00FEB3  2B                 	db	43
   334  00FEB4  43                 	db	67
   335  00FEB5  45                 	db	69
   336  00FEB6  52                 	db	82
   337  00FEB7  45                 	db	69
   338  00FEB8  47                 	db	71
   339  00FEB9  3F                 	db	63
   340  00FEBA  0D                 	db	13
   341  00FEBB  0A                 	db	10
   342  00FEBC  00                 	db	0
   343  00FEBD                     __end_ofregistration_ok@F6760:
   344                           	opt stack 0
   345  00FEBD                     sim_card_ok@F6791:
   346                           	opt stack 0
   347  00FEBD  41                 	db	65
   348  00FEBE  54                 	db	84
   349  00FEBF  2B                 	db	43
   350  00FEC0  43                 	db	67
   351  00FEC1  50                 	db	80
   352  00FEC2  49                 	db	73
   353  00FEC3  4E                 	db	78
   354  00FEC4  3F                 	db	63
   355  00FEC5  0D                 	db	13
   356  00FEC6  0A                 	db	10
   357  00FEC7  00                 	db	0
   358  00FEC8                     __end_ofsim_card_ok@F6791:
   359                           	opt stack 0
   360  00FEC8                     open_connection@F6810:
   361                           	opt stack 0
   362  00FEC8  41                 	db	65
   363  00FEC9  54                 	db	84
   364  00FECA  23                 	db	35
   365  00FECB  53                 	db	83
   366  00FECC  44                 	db	68
   367  00FECD  3D                 	db	61
   368  00FECE  31                 	db	49
   369  00FECF  2C                 	db	44
   370  00FED0  30                 	db	48
   371  00FED1  2C                 	db	44
   372  00FED2  00                 	db	0
   373  00FED3                     __end_ofopen_connection@F6810:
   374                           	opt stack 0
   375  00FED3                     md_attached@F6790:
   376                           	opt stack 0
   377  00FED3  41                 	db	65
   378  00FED4  54                 	db	84
   379  00FED5  2B                 	db	43
   380  00FED6  43                 	db	67
   381  00FED7  47                 	db	71
   382  00FED8  41                 	db	65
   383  00FED9  54                 	db	84
   384  00FEDA  54                 	db	84
   385  00FEDB  3D                 	db	61
   386  00FEDC  31                 	db	49
   387  00FEDD  00                 	db	0
   388  00FEDE                     __end_ofmd_attached@F6790:
   389                           	opt stack 0
   390  00FEDE                     registration_ok@F6756:
   391                           	opt stack 0
   392  00FEDE  41                 	db	65
   393  00FEDF  54                 	db	84
   394  00FEE0  2B                 	db	43
   395  00FEE1  43                 	db	67
   396  00FEE2  52                 	db	82
   397  00FEE3  45                 	db	69
   398  00FEE4  47                 	db	71
   399  00FEE5  3F                 	db	63
   400  00FEE6  0D                 	db	13
   401  00FEE7  0A                 	db	10
   402  00FEE8  00                 	db	0
   403  00FEE9                     __end_ofregistration_ok@F6756:
   404                           	opt stack 0
   405  00FEE9                     init_modem_ok@F6782:
   406                           	opt stack 0
   407  00FEE9  41                 	db	65
   408  00FEEA  54                 	db	84
   409  00FEEB  23                 	db	35
   410  00FEEC  43                 	db	67
   411  00FEED  47                 	db	71
   412  00FEEE  4D                 	db	77
   413  00FEEF  52                 	db	82
   414  00FEF0  0D                 	db	13
   415  00FEF1  0A                 	db	10
   416  00FEF2  00                 	db	0
   417  00FEF3                     __end_ofinit_modem_ok@F6782:
   418                           	opt stack 0
   419  00FEF3                     open_connection@F6812:
   420                           	opt stack 0
   421  00FEF3  22                 	db	34
   422  00FEF4  2C                 	db	44
   423  00FEF5  30                 	db	48
   424  00FEF6  2C                 	db	44
   425  00FEF7  30                 	db	48
   426  00FEF8  2C                 	db	44
   427  00FEF9  31                 	db	49
   428  00FEFA  0D                 	db	13
   429  00FEFB  0A                 	db	10
   430  00FEFC  00                 	db	0
   431  00FEFD                     __end_ofopen_connection@F6812:
   432                           	opt stack 0
   433  00FEFD                     md_attached@F6788:
   434                           	opt stack 0
   435  00FEFD  2B                 	db	43
   436  00FEFE  43                 	db	67
   437  00FEFF  47                 	db	71
   438  00FF00  41                 	db	65
   439  00FF01  54                 	db	84
   440  00FF02  54                 	db	84
   441  00FF03  3A                 	db	58
   442  00FF04  20                 	db	32
   443  00FF05  00                 	db	0
   444  00FF06                     __end_ofmd_attached@F6788:
   445                           	opt stack 0
   446  00FF06                     registration_ok@F6762:
   447                           	opt stack 0
   448  00FF06  2B                 	db	43
   449  00FF07  43                 	db	67
   450  00FF08  45                 	db	69
   451  00FF09  52                 	db	82
   452  00FF0A  45                 	db	69
   453  00FF0B  47                 	db	71
   454  00FF0C  3A                 	db	58
   455  00FF0D  20                 	db	32
   456  00FF0E  00                 	db	0
   457  00FF0F                     __end_ofregistration_ok@F6762:
   458                           	opt stack 0
   459  00FF0F                     delete_sms@F6825:
   460                           	opt stack 0
   461  00FF0F  41                 	db	65
   462  00FF10  54                 	db	84
   463  00FF11  2B                 	db	43
   464  00FF12  43                 	db	67
   465  00FF13  4D                 	db	77
   466  00FF14  47                 	db	71
   467  00FF15  44                 	db	68
   468  00FF16  3D                 	db	61
   469  00FF17  00                 	db	0
   470  00FF18                     __end_ofdelete_sms@F6825:
   471                           	opt stack 0
   472  00FF18                     read_sms@F6815:
   473                           	opt stack 0
   474  00FF18  41                 	db	65
   475  00FF19  54                 	db	84
   476  00FF1A  2B                 	db	43
   477  00FF1B  43                 	db	67
   478  00FF1C  4D                 	db	77
   479  00FF1D  47                 	db	71
   480  00FF1E  52                 	db	82
   481  00FF1F  3D                 	db	61
   482  00FF20  00                 	db	0
   483  00FF21                     __end_ofread_sms@F6815:
   484                           	opt stack 0
   485  00FF21                     registration_ok@F6758:
   486                           	opt stack 0
   487  00FF21  2B                 	db	43
   488  00FF22  43                 	db	67
   489  00FF23  52                 	db	82
   490  00FF24  45                 	db	69
   491  00FF25  47                 	db	71
   492  00FF26  3A                 	db	58
   493  00FF27  20                 	db	32
   494  00FF28  00                 	db	0
   495  00FF29                     __end_ofregistration_ok@F6758:
   496                           	opt stack 0
   497  00FF29                     check_sms@F6798:
   498                           	opt stack 0
   499  00FF29  2B                 	db	43
   500  00FF2A  43                 	db	67
   501  00FF2B  4D                 	db	77
   502  00FF2C  47                 	db	71
   503  00FF2D  4C                 	db	76
   504  00FF2E  3A                 	db	58
   505  00FF2F  20                 	db	32
   506  00FF30  00                 	db	0
   507  00FF31                     __end_ofcheck_sms@F6798:
   508                           	opt stack 0
   509  00FF31                     _UNIT_ACCT:
   510                           	opt stack 0
   511  00FF31  30                 	db	48
   512  00FF32  30                 	db	48
   513  00FF33  30                 	db	48
   514  00FF34  30                 	db	48
   515  00FF35  23                 	db	35
   516  00FF36  00                 	db	0
   517  00FF37                     __end_of_UNIT_ACCT:
   518                           	opt stack 0
   519  00FF37                     _ACCESS_CODE:
   520                           	opt stack 0
   521  00FF37  31                 	db	49
   522  00FF38  31                 	db	49
   523  00FF39  31                 	db	49
   524  00FF3A  31                 	db	49
   525  00FF3B  23                 	db	35
   526  00FF3C  00                 	db	0
   527  00FF3D                     __end_of_ACCESS_CODE:
   528                           	opt stack 0
   529  00FF3D                     _VERSION:
   530                           	opt stack 0
   531  00FF3D  32                 	db	50
   532  00FF3E  30                 	db	48
   533  00FF3F  30                 	db	48
   534  00FF40  30                 	db	48
   535  00FF41  00                 	db	0
   536  00FF42                     __end_of_VERSION:
   537                           	opt stack 0
   538  00FF42                     _LINE_CARD:
   539                           	opt stack 0
   540  00FF42  31                 	db	49
   541  00FF43  23                 	db	35
   542  00FF44  00                 	db	0
   543  00FF45                     __end_of_LINE_CARD:
   544                           	opt stack 0
   545  00FF45                     _PORT4:
   546                           	opt stack 0
   547  00FF45  07E4               	dw	2020
   548  00FF47                     __end_of_PORT4:
   549                           	opt stack 0
   550  00FF47                     _PORT3:
   551                           	opt stack 0
   552  00FF47  07E4               	dw	2020
   553  00FF49                     __end_of_PORT3:
   554                           	opt stack 0
   555  00FF49                     _PORT2:
   556                           	opt stack 0
   557  00FF49  07E4               	dw	2020
   558  00FF4B                     __end_of_PORT2:
   559                           	opt stack 0
   560  00FF4B                     _PORT1:
   561                           	opt stack 0
   562  00FF4B  07E4               	dw	2020
   563  00FF4D                     __end_of_PORT1:
   564                           	opt stack 0
   565  00FF4D                     _IP4:
   566                           	opt stack 0
   567  00FF4D  23                 	db	35
   568  00FF4E  00                 	db	0
   569  00FF4F                     __end_of_IP4:
   570                           	opt stack 0
   571  00FF4F                     _IP3:
   572                           	opt stack 0
   573  00FF4F  23                 	db	35
   574  00FF50  00                 	db	0
   575  00FF51                     __end_of_IP3:
   576                           	opt stack 0
   577  00FF51                     _IP2:
   578                           	opt stack 0
   579  00FF51  23                 	db	35
   580  00FF52  00                 	db	0
   581  00FF53                     __end_of_IP2:
   582                           	opt stack 0
   583  00FF53                     _IP1:
   584                           	opt stack 0
   585  00FF53  23                 	db	35
   586  00FF54  00                 	db	0
   587  00FF55                     __end_of_IP1:
   588                           	opt stack 0
   589  00FF55                     _APN:
   590                           	opt stack 0
   591  00FF55  23                 	db	35
   592  00FF56  00                 	db	0
   593  00FF57                     __end_of_APN:
   594                           	opt stack 0
   595  00FF57                     _ENCRYPTION:
   596                           	opt stack 0
   597  00FF57  01                 	db	1
   598  00FF58                     __end_of_ENCRYPTION:
   599                           	opt stack 0
   600  00FF58                     _SMS_WAIT_TIME:
   601                           	opt stack 0
   602  00FF58  0A                 	db	10
   603  00FF59                     __end_of_SMS_WAIT_TIME:
   604                           	opt stack 0
   605  00FF59                     _RETRY:
   606                           	opt stack 0
   607  00FF59  0A                 	db	10
   608  00FF5A                     __end_of_RETRY:
   609                           	opt stack 0
   610  00FF5A                     _CYCLE:
   611                           	opt stack 0
   612  00FF5A  02                 	db	2
   613  00FF5B                     __end_of_CYCLE:
   614                           	opt stack 0
   615  00FF5B                     _TP_PIN:
   616                           	opt stack 0
   617  00FF5B  00                 	db	0
   618  00FF5C                     __end_of_TP_PIN:
   619                           	opt stack 0
   620  00FF5C                     _ZONE2:
   621                           	opt stack 0
   622  00FF5C  14                 	db	20
   623  00FF5D                     __end_of_ZONE2:
   624                           	opt stack 0
   625  00FF5D                     _ZONE1:
   626                           	opt stack 0
   627  00FF5D  01                 	db	1
   628  00FF5E                     __end_of_ZONE1:
   629                           	opt stack 0
   630  00FF5E                     _SERVER_ACK_TIME:
   631                           	opt stack 0
   632  00FF5E  2D                 	db	45
   633  00FF5F                     __end_of_SERVER_ACK_TIME:
   634                           	opt stack 0
   635  00FF5F                     _TEST_FREQ:
   636                           	opt stack 0
   637  00FF5F  0F                 	db	15
   638  00FF60                     __end_of_TEST_FREQ:
   639                           	opt stack 0
   640  00FF60                     _PROGRAM_ACK:
   641                           	opt stack 0
   642  00FF60  01                 	db	1
   643  00FF61                     __end_of_PROGRAM_ACK:
   644                           	opt stack 0
   645  00FF61                     _scfg:
   646                           	opt stack 0
   647  00FF61  41                 	db	65
   648  00FF62  54                 	db	84
   649  00FF63  23                 	db	35
   650  00FF64  53                 	db	83
   651  00FF65  43                 	db	67
   652  00FF66  46                 	db	70
   653  00FF67  47                 	db	71
   654  00FF68  3D                 	db	61
   655  00FF69  31                 	db	49
   656  00FF6A  2C                 	db	44
   657  00FF6B  33                 	db	51
   658  00FF6C  2C                 	db	44
   659  00FF6D  33                 	db	51
   660  00FF6E  30                 	db	48
   661  00FF6F  30                 	db	48
   662  00FF70  2C                 	db	44
   663  00FF71  39                 	db	57
   664  00FF72  30                 	db	48
   665  00FF73  2C                 	db	44
   666  00FF74  36                 	db	54
   667  00FF75  30                 	db	48
   668  00FF76  30                 	db	48
   669  00FF77  2C                 	db	44
   670  00FF78  35                 	db	53
   671  00FF79  30                 	db	48
   672  00FF7A  0D                 	db	13
   673  00FF7B  0A                 	db	10
   674  00FF7C  00                 	db	0
   675  00FF7D                     __end_of_scfg:
   676                           	opt stack 0
   677  00FF7D                     _cgdcont:
   678                           	opt stack 0
   679  00FF7D  41                 	db	65
   680  00FF7E  54                 	db	84
   681  00FF7F  2B                 	db	43
   682  00FF80  43                 	db	67
   683  00FF81  47                 	db	71
   684  00FF82  44                 	db	68
   685  00FF83  43                 	db	67
   686  00FF84  4F                 	db	79
   687  00FF85  4E                 	db	78
   688  00FF86  54                 	db	84
   689  00FF87  3D                 	db	61
   690  00FF88  33                 	db	51
   691  00FF89  2C                 	db	44
   692  00FF8A  22                 	db	34
   693  00FF8B  49                 	db	73
   694  00FF8C  50                 	db	80
   695  00FF8D  22                 	db	34
   696  00FF8E  2C                 	db	44
   697  00FF8F  22                 	db	34
   698  00FF90  00                 	db	0
   699  00FF91                     __end_of_cgdcont:
   700                           	opt stack 0
   701  00FF91                     _sgact:
   702                           	opt stack 0
   703  00FF91  41                 	db	65
   704  00FF92  54                 	db	84
   705  00FF93  23                 	db	35
   706  00FF94  53                 	db	83
   707  00FF95  47                 	db	71
   708  00FF96  41                 	db	65
   709  00FF97  43                 	db	67
   710  00FF98  54                 	db	84
   711  00FF99  3D                 	db	61
   712  00FF9A  33                 	db	51
   713  00FF9B  2C                 	db	44
   714  00FF9C  31                 	db	49
   715  00FF9D  0D                 	db	13
   716  00FF9E  0A                 	db	10
   717  00FF9F  00                 	db	0
   718  00FFA0                     __end_of_sgact:
   719                           	opt stack 0
   720  00FFA0                     STR_1:
   721  00FFA0  54                 	db	84	;'T'
   722  00FFA1  65                 	db	101	;'e'
   723  00FFA2  73                 	db	115	;'s'
   724  00FFA3  74                 	db	116	;'t'
   725  00FFA4  69                 	db	105	;'i'
   726  00FFA5  6E                 	db	110	;'n'
   727  00FFA6  67                 	db	103	;'g'
   728  00FFA7  20                 	db	32
   729  00FFA8  73                 	db	115	;'s'
   730  00FFA9  6D                 	db	109	;'m'
   731  00FFAA  6F                 	db	111	;'o'
   732  00FFAB  6B                 	db	107	;'k'
   733  00FFAC  65                 	db	101	;'e'
   734  00FFAD  20                 	db	32
   735  00FFAE  68                 	db	104	;'h'
   736  00FFAF  75                 	db	117	;'u'
   737  00FFB0  62                 	db	98	;'b'
   738  00FFB1  20                 	db	32
   739  00FFB2  2D                 	db	45
   740  00FFB3  20                 	db	32
   741  00FFB4  4A                 	db	74	;'J'
   742  00FFB5  65                 	db	101	;'e'
   743  00FFB6  6E                 	db	110	;'n'
   744  00FFB7  27                 	db	39
   745  00FFB8  73                 	db	115	;'s'
   746  00FFB9  20                 	db	32
   747  00FFBA  63                 	db	99	;'c'
   748  00FFBB  6F                 	db	111	;'o'
   749  00FFBC  64                 	db	100	;'d'
   750  00FFBD  65                 	db	101	;'e'
   751  00FFBE  2C                 	db	44
   752  00FFBF  20                 	db	32
   753  00FFC0  4B                 	db	75	;'K'
   754  00FFC1  6F                 	db	111	;'o'
   755  00FFC2  72                 	db	114	;'r'
   756  00FFC3  65                 	db	101	;'e'
   757  00FFC4  20                 	db	32
   758  00FFC5  53                 	db	83	;'S'
   759  00FFC6  49                 	db	73	;'I'
   760  00FFC7  4D                 	db	77	;'M'
   761  00FFC8  2E                 	db	46
   762  00FFC9  0D                 	db	13
   763  00FFCA  0A                 	db	10
   764  00FFCB  00                 	db	0
   765  00FFCC                     STR_9:
   766  00FFCC  41                 	db	65	;'A'
   767  00FFCD  54                 	db	84	;'T'
   768  00FFCE  2B                 	db	43
   769  00FFCF  43                 	db	67	;'C'
   770  00FFD0  4D                 	db	77	;'M'
   771  00FFD1  45                 	db	69	;'E'
   772  00FFD2  45                 	db	69	;'E'
   773  00FFD3  3D                 	db	61	;'='
   774  00FFD4  32                 	db	50	;'2'
   775  00FFD5  0D                 	db	13
   776  00FFD6  0A                 	db	10
   777  00FFD7  00                 	db	0
   778  00FFD8                     STR_2:
   779  00FFD8  41                 	db	65	;'A'
   780  00FFD9  54                 	db	84	;'T'
   781  00FFDA  2B                 	db	43
   782  00FFDB  43                 	db	67	;'C'
   783  00FFDC  4D                 	db	77	;'M'
   784  00FFDD  47                 	db	71	;'G'
   785  00FFDE  46                 	db	70	;'F'
   786  00FFDF  3D                 	db	61	;'='
   787  00FFE0  31                 	db	49	;'1'
   788  00FFE1  0D                 	db	13
   789  00FFE2  0A                 	db	10
   790  00FFE3  00                 	db	0
   791  00FFE4                     STR_7:
   792  00FFE4  41                 	db	65	;'A'
   793  00FFE5  54                 	db	84	;'T'
   794  00FFE6  2B                 	db	43
   795  00FFE7  43                 	db	67	;'C'
   796  00FFE8  52                 	db	82	;'R'
   797  00FFE9  45                 	db	69	;'E'
   798  00FFEA  47                 	db	71	;'G'
   799  00FFEB  3D                 	db	61	;'='
   800  00FFEC  31                 	db	49	;'1'
   801  00FFED  00                 	db	0
   802  00FFEE                     STR_3:
   803  00FFEE  41                 	db	65	;'A'
   804  00FFEF  54                 	db	84	;'T'
   805  00FFF0  2B                 	db	43
   806  00FFF1  43                 	db	67	;'C'
   807  00FFF2  4D                 	db	77	;'M'
   808  00FFF3  47                 	db	71	;'G'
   809  00FFF4  53                 	db	83	;'S'
   810  00FFF5  3D                 	db	61	;'='
   811  00FFF6  00                 	db	0
   812  00FFF7                     STR_8:
   813  00FFF7  41                 	db	65	;'A'
   814  00FFF8  54                 	db	84	;'T'
   815  00FFF9  45                 	db	69	;'E'
   816  00FFFA  31                 	db	49	;'1'
   817  00FFFB  0D                 	db	13
   818  00FFFC  0A                 	db	10
   819  00FFFD  00                 	db	0
   820  0000                     
   821                           ; #config settings
   822  00FFFE  00                 	db	0	; dummy byte at the end
   823  0000                     
   824                           	psect	nvBANK0
   825  0000B9                     __pnvBANK0:
   826                           	opt stack 0
   827  0000B9                     _ledPattern:
   828                           	opt stack 0
   829  0000B9                     	ds	1
   830  0000                     _ANSELB	set	3897
   831  0000                     _ANSELC	set	3898
   832  0000                     _ANSELA	set	3896
   833  0000                     _TMR3L	set	4018
   834  0000                     _TMR3H	set	4019
   835  0000                     _T3CON	set	4017
   836  0000                     _INTCON	set	4082
   837  0000                     _PIR2bits	set	4001
   838  0000                     _EECON2	set	4007
   839  0000                     _EEDATA	set	4008
   840  0000                     _EEADR	set	4009
   841  0000                     _EEADRH	set	4010
   842  0000                     _TX1REG	set	4013
   843  0000                     _RCSTA2	set	3953
   844  0000                     _RCSTA1	set	4011
   845  0000                     _PIR1bits	set	3998
   846  0000                     _RCSTA1bits	set	4011
   847  0000                     _RC1STAbits	set	4011
   848  0000                     _SPBRG1	set	4015
   849  0000                     _SPBRGH1	set	4016
   850  0000                     _TXSTA1bits	set	4012
   851  0000                     _BAUDCONbits	set	4024
   852  0000                     _BAUDCON1bits	set	4024
   853  0000                     _RC1REG	set	4014
   854  0000                     _INTCONbits	set	4082
   855  0000                     _TMR0L	set	4054
   856  0000                     _TMR0H	set	4055
   857  0000                     _T0CON	set	4053
   858  0000                     _PORTBbits	set	3969
   859  0000                     _LATCbits	set	3979
   860  0000                     _TRISCbits	set	3988
   861  0000                     _PORTCbits	set	3970
   862  0000                     _TRISBbits	set	3987
   863  0000                     _PORTAbits	set	3968
   864  0000                     _TRISAbits	set	3986
   865  0000                     _OSCCONbits	set	4051
   866  0000                     _LATBbits	set	3978
   867  0000                     _WR	set	32049
   868  0000                     _WREN	set	32050
   869  0000                     _RD	set	32048
   870  0000                     _EEPGD	set	32055
   871  0000                     _CFGS	set	32054
   872  0000                     _GIE	set	32663
   873  0000                     _RCIE	set	31981
   874  0000                     _TRMT1	set	32097
   875  0000                     _RC2IE	set	32029
   876  0000                     _TXEN2	set	31637
   877  0000                     _TXEN1	set	32101
   878  0000                     _TMR3ON	set	32136
   879  0000                     _TMR3IF	set	32009
   880  0000                     _RC1IF	set	31989
   881  0000                     _CREN1	set	32092
   882  0000                     _RC1IE	set	31981
   883  0000                     _TMR0IE	set	32661
   884  0000                     _TMR0IF	set	32658
   885                           
   886                           	psect	cinit
   887  0013A6                     __pcinit:
   888                           	opt stack 0
   889  0013A6                     start_initialization:
   890                           	opt stack 0
   891  0013A6                     __initialization:
   892                           	opt stack 0
   893                           
   894                           ; Initialize objects allocated to BANK0 (12 bytes)
   895                           ; load TBLPTR registers with __pidataBANK0
   896  0013A6  0E6C               	movlw	low __pidataBANK0
   897  0013A8  6EF6               	movwf	tblptrl,c
   898  0013AA  0E16               	movlw	high __pidataBANK0
   899  0013AC  6EF7               	movwf	tblptrh,c
   900  0013AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   901  0013B0  6EF8               	movwf	tblptru,c
   902  0013B2  EE00  F0AD         	lfsr	0,__pdataBANK0
   903  0013B6  EE10 F00C          	lfsr	1,12
   904  0013BA                     copy_data0:
   905  0013BA  0009               	tblrd		*+
   906  0013BC  CFF5 FFEE          	movff	tablat,postinc0
   907  0013C0  50E5               	movf	postdec1,w,c
   908  0013C2  50E1               	movf	fsr1l,w,c
   909  0013C4  E1FA               	bnz	copy_data0
   910                           
   911                           ; Initialize objects allocated to COMRAM (24 bytes)
   912                           ; load TBLPTR registers with __pidataCOMRAM
   913  0013C6  0E08               	movlw	low __pidataCOMRAM
   914  0013C8  6EF6               	movwf	tblptrl,c
   915  0013CA  0E16               	movlw	high __pidataCOMRAM
   916  0013CC  6EF7               	movwf	tblptrh,c
   917  0013CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   918  0013D0  6EF8               	movwf	tblptru,c
   919  0013D2  EE00  F031         	lfsr	0,__pdataCOMRAM
   920  0013D6  EE10 F018          	lfsr	1,24
   921  0013DA                     copy_data1:
   922  0013DA  0009               	tblrd		*+
   923  0013DC  CFF5 FFEE          	movff	tablat,postinc0
   924  0013E0  50E5               	movf	postdec1,w,c
   925  0013E2  50E1               	movf	fsr1l,w,c
   926  0013E4  E1FA               	bnz	copy_data1
   927                           
   928                           ; Clear objects allocated to BANK1 (160 bytes)
   929  0013E6  EE01  F000         	lfsr	0,__pbssBANK1
   930  0013EA  0EA0               	movlw	160
   931  0013EC                     clear_0:
   932  0013EC  6AEE               	clrf	postinc0,c
   933  0013EE  06E8               	decf	wreg,f,c
   934  0013F0  E1FD               	bnz	clear_0
   935                           
   936                           ; Clear objects allocated to COMRAM (2 bytes)
   937  0013F2  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   938  0013F4  6A49               	clrf	__pbssCOMRAM& (0+255),c
   939  0013F6                     end_of_initialization:
   940                           	opt stack 0
   941  0013F6                     __end_of__initialization:
   942                           	opt stack 0
   943  0013F6  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   944  0013F8  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   945  0013FA  0100               	movlb	0
   946  0013FC  EF21  F00A         	goto	_main	;jump to C main() function
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           
   956                           	psect	bssCOMRAM
   957  000049                     __pbssCOMRAM:
   958                           	opt stack 0
   959  000049                     _saveINTCONbits:
   960                           	opt stack 0
   961  000049                     	ds	1
   962  00004A                     _ledPatternCount:
   963                           	opt stack 0
   964  00004A                     	ds	1
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1l	equ	0xFE1
   973                           
   974                           	psect	dataCOMRAM
   975  000031                     __pdataCOMRAM:
   976                           	opt stack 0
   977  000031                     wakeup_module_ok@F6760:
   978                           	opt stack 0
   979  000031                     	ds	16
   980  000041                     wakeup_module_ok@F6758:
   981                           	opt stack 0
   982  000041                     	ds	5
   983  000046                     _delayBetweenBytes:
   984                           	opt stack 0
   985  000046                     	ds	2
   986  000048                     _HL_freq:
   987                           	opt stack 0
   988  000048                     	ds	1
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           postdec1	equ	0xFE5
   996                           fsr1l	equ	0xFE1
   997                           
   998                           	psect	dataBANK0
   999  0000AD                     __pdataBANK0:
  1000                           	opt stack 0
  1001  0000AD                     _inListenMode:
  1002                           	opt stack 0
  1003  0000AD                     	ds	1
  1004  0000AE                     _JENS_NUMBER:
  1005                           	opt stack 0
  1006  0000AE                     	ds	11
  1007                           tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postdec1	equ	0xFE5
  1014                           fsr1l	equ	0xFE1
  1015                           
  1016                           	psect	bssBANK1
  1017  000100                     __pbssBANK1:
  1018                           	opt stack 0
  1019  000100                     _mdRxBuf:
  1020                           	opt stack 0
  1021  000100                     	ds	160
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           
  1031                           	psect	cstackBANK0
  1032  000060                     __pcstackBANK0:
  1033                           	opt stack 0
  1034  000060                     ??_check_sms:
  1035  000060                     registration_ok@cereg:
  1036                           	opt stack 0
  1037  000060                     wakeup_module_ok@ipr:
  1038                           	opt stack 0
  1039  000060                     init_modem_ok@ledCfg:
  1040                           	opt stack 0
  1041  000060                     receive_sms_init@cpms:
  1042                           	opt stack 0
  1043  000060                     sim_card_ok@buf:
  1044                           	opt stack 0
  1045  000060                     send_text@buf:
  1046                           	opt stack 0
  1047  000060                     md_attached@buf:
  1048                           	opt stack 0
  1049                           
  1050                           ; 40 bytes @ 0x0
  1051  000060                     	ds	2
  1052  000062                     check_sms@cmgl:
  1053                           	opt stack 0
  1054                           
  1055                           ; 16 bytes @ 0x2
  1056  000062                     	ds	10
  1057  00006C                     registration_ok@creg:
  1058                           	opt stack 0
  1059                           
  1060                           ; 11 bytes @ 0xC
  1061  00006C                     	ds	4
  1062  000070                     wakeup_module_ok@initStr:
  1063                           	opt stack 0
  1064  000070                     init_modem_ok@ledPattern:
  1065                           	opt stack 0
  1066                           
  1067                           ; 12 bytes @ 0x10
  1068  000070                     	ds	2
  1069  000072                     check_sms@cmgl_check:
  1070                           	opt stack 0
  1071                           
  1072                           ; 8 bytes @ 0x12
  1073  000072                     	ds	3
  1074  000075                     _wakeup_module_ok$2062:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x15
  1078  000075                     	ds	1
  1079  000076                     wakeup_module_ok@rsp1_ok:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x16
  1083  000076                     	ds	1
  1084  000077                     wakeup_module_ok@rsp2_ok:
  1085                           	opt stack 0
  1086  000077                     registration_ok@cereg_resp:
  1087                           	opt stack 0
  1088                           
  1089                           ; 9 bytes @ 0x17
  1090  000077                     	ds	1
  1091  000078                     wakeup_module_ok@cnt:
  1092                           	opt stack 0
  1093                           
  1094                           ; 1 bytes @ 0x18
  1095  000078                     	ds	1
  1096  000079                     wakeup_module_ok@i:
  1097                           	opt stack 0
  1098                           
  1099                           ; 1 bytes @ 0x19
  1100  000079                     	ds	1
  1101  00007A                     check_sms@temp:
  1102                           	opt stack 0
  1103  00007A                     receive_sms_init@cnmi:
  1104                           	opt stack 0
  1105                           
  1106                           ; 15 bytes @ 0x1A
  1107  00007A                     	ds	1
  1108  00007B                     check_sms@msgPlace3:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x1B
  1112  00007B                     	ds	1
  1113  00007C                     check_sms@msgPlace1:
  1114                           	opt stack 0
  1115  00007C                     init_modem_ok@queryVersion:
  1116                           	opt stack 0
  1117                           
  1118                           ; 10 bytes @ 0x1C
  1119  00007C                     	ds	1
  1120  00007D                     check_sms@msgPlace2:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x1D
  1124  00007D                     	ds	1
  1125  00007E                     check_sms@i:
  1126                           	opt stack 0
  1127                           
  1128                           ; 1 bytes @ 0x1E
  1129  00007E                     	ds	1
  1130  00007F                     receive_sms@sms_time:
  1131                           	opt stack 0
  1132                           
  1133                           ; 1 bytes @ 0x1F
  1134  00007F                     	ds	1
  1135  000080                     receive_sms@cnt:
  1136                           	opt stack 0
  1137  000080                     sim_card_ok@cpinResponse:
  1138                           	opt stack 0
  1139  000080                     registration_ok@buf:
  1140                           	opt stack 0
  1141                           
  1142                           ; 32 bytes @ 0x20
  1143  000080                     	ds	6
  1144  000086                     init_modem_ok@index:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x26
  1148  000086                     	ds	1
  1149  000087                     init_modem_ok@c5:
  1150                           	opt stack 0
  1151                           
  1152                           ; 1 bytes @ 0x27
  1153  000087                     	ds	1
  1154  000088                     send_text@temp:
  1155                           	opt stack 0
  1156  000088                     init_modem_ok@c1:
  1157                           	opt stack 0
  1158  000088                     md_attached@gprs_check:
  1159                           	opt stack 0
  1160                           
  1161                           ; 12 bytes @ 0x28
  1162  000088                     	ds	1
  1163  000089                     send_text@count:
  1164                           	opt stack 0
  1165  000089                     init_modem_ok@c2:
  1166                           	opt stack 0
  1167  000089                     receive_sms_init@cmgf:
  1168                           	opt stack 0
  1169                           
  1170                           ; 13 bytes @ 0x29
  1171  000089                     	ds	1
  1172  00008A                     send_text@ctrlz:
  1173                           	opt stack 0
  1174  00008A                     init_modem_ok@c3:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x2A
  1178  00008A                     	ds	1
  1179  00008B                     send_text@i:
  1180                           	opt stack 0
  1181  00008B                     init_modem_ok@c4:
  1182                           	opt stack 0
  1183                           
  1184                           ; 1 bytes @ 0x2B
  1185  00008B                     	ds	1
  1186  00008C                     send_text@ready_to_write:
  1187                           	opt stack 0
  1188  00008C                     init_modem_ok@repeat:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0x2C
  1192  00008C                     	ds	1
  1193  00008D                     sim_card_ok@cpin:
  1194                           	opt stack 0
  1195                           
  1196                           ; 11 bytes @ 0x2D
  1197  00008D                     	ds	7
  1198  000094                     md_attached@gprs_attach:
  1199                           	opt stack 0
  1200                           
  1201                           ; 11 bytes @ 0x34
  1202  000094                     	ds	4
  1203  000098                     sim_card_ok@count:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x38
  1207  000098                     	ds	1
  1208  000099                     sim_card_ok@matches:
  1209                           	opt stack 0
  1210                           
  1211                           ; 1 bytes @ 0x39
  1212  000099                     	ds	1
  1213  00009A                     sim_card_ok@temp:
  1214                           	opt stack 0
  1215                           
  1216                           ; 1 bytes @ 0x3A
  1217  00009A                     	ds	1
  1218  00009B                     sim_card_ok@j:
  1219                           	opt stack 0
  1220                           
  1221                           ; 1 bytes @ 0x3B
  1222  00009B                     	ds	1
  1223  00009C                     sim_card_ok@i:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x3C
  1227  00009C                     	ds	3
  1228  00009F                     md_attached@gprs_resp:
  1229                           	opt stack 0
  1230                           
  1231                           ; 9 bytes @ 0x3F
  1232  00009F                     	ds	1
  1233  0000A0                     registration_ok@creg_resp:
  1234                           	opt stack 0
  1235                           
  1236                           ; 8 bytes @ 0x40
  1237  0000A0                     	ds	8
  1238  0000A8                     _registration_ok$1870:
  1239                           	opt stack 0
  1240  0000A8                     md_attached@cnt:
  1241                           	opt stack 0
  1242                           
  1243                           ; 1 bytes @ 0x48
  1244  0000A8                     	ds	1
  1245  0000A9                     registration_ok@temp:
  1246                           	opt stack 0
  1247  0000A9                     md_attached@attached:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0x49
  1251  0000A9                     	ds	1
  1252  0000AA                     registration_ok@matches:
  1253                           	opt stack 0
  1254  0000AA                     md_attached@i:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x4A
  1258  0000AA                     	ds	1
  1259  0000AB                     registration_ok@j:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x4B
  1263  0000AB                     	ds	1
  1264  0000AC                     registration_ok@i:
  1265                           	opt stack 0
  1266                           
  1267                           ; 1 bytes @ 0x4C
  1268  0000AC                     	ds	1
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           
  1278                           	psect	cstackCOMRAM
  1279  000001                     __pcstackCOMRAM:
  1280                           	opt stack 0
  1281  000001                     ??_check_leds:
  1282  000001                     
  1283                           ; 1 bytes @ 0x0
  1284  000001                     	ds	1
  1285  000002                     ??_isr:
  1286                           
  1287                           ; 1 bytes @ 0x1
  1288  000002                     	ds	18
  1289  000014                     md_uart_send@data:
  1290                           	opt stack 0
  1291  000014                     ee_read@addr:
  1292                           	opt stack 0
  1293  000014                     ee_write@addr:
  1294                           	opt stack 0
  1295  000014                     str_matches@raw:
  1296                           	opt stack 0
  1297  000014                     delay5ms@cnt:
  1298                           	opt stack 0
  1299                           
  1300                           ; 2 bytes @ 0x13
  1301  000014                     	ds	1
  1302  000015                     ee_read@page:
  1303                           	opt stack 0
  1304  000015                     ee_write@data:
  1305                           	opt stack 0
  1306  000015                     md_uart_write_str@data:
  1307                           	opt stack 0
  1308                           
  1309                           ; 2 bytes @ 0x14
  1310  000015                     	ds	1
  1311  000016                     delay5ms@i:
  1312                           	opt stack 0
  1313  000016                     ee_read@data:
  1314                           	opt stack 0
  1315  000016                     ee_write@page:
  1316                           	opt stack 0
  1317  000016                     str_matches@expected:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x15
  1321  000016                     	ds	1
  1322  000017                     ??_write_defaults:
  1323  000017                     md_uart_write_str@len:
  1324                           	opt stack 0
  1325  000017                     delay5ms@j:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x16
  1329  000017                     	ds	1
  1330  000018                     md_uart_write_str@currentChar:
  1331                           	opt stack 0
  1332  000018                     str_matches@len:
  1333                           	opt stack 0
  1334                           
  1335                           ; 1 bytes @ 0x17
  1336  000018                     	ds	1
  1337  000019                     md_uart_write_str@index:
  1338                           	opt stack 0
  1339  000019                     write_defaults@addr:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x18
  1343  000019                     	ds	1
  1344  00001A                     write_defaults@temp:
  1345                           	opt stack 0
  1346  00001A                     md_uart_write_str_ok@toSend:
  1347                           	opt stack 0
  1348                           
  1349                           ; 2 bytes @ 0x19
  1350  00001A                     	ds	1
  1351  00001B                     str_matches@matches:
  1352                           	opt stack 0
  1353  00001B                     write_defaults@page:
  1354                           	opt stack 0
  1355                           
  1356                           ; 1 bytes @ 0x1A
  1357  00001B                     	ds	1
  1358  00001C                     str_matches@i:
  1359                           	opt stack 0
  1360  00001C                     md_uart_write_str_ok@lengthToSend:
  1361                           	opt stack 0
  1362  00001C                     write_defaults@i:
  1363                           	opt stack 0
  1364                           
  1365                           ; 1 bytes @ 0x1B
  1366  00001C                     	ds	1
  1367  00001D                     md_uart_write_str_ok@wantOk:
  1368                           	opt stack 0
  1369                           
  1370                           ; 1 bytes @ 0x1C
  1371  00001D                     	ds	1
  1372  00001E                     ??_md_uart_write_str_ok:
  1373                           
  1374                           ; 1 bytes @ 0x1D
  1375  00001E                     	ds	2
  1376  000020                     md_uart_write_str_ok@temp:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x1F
  1380  000020                     	ds	1
  1381  000021                     md_uart_write_str_ok@count:
  1382                           	opt stack 0
  1383                           
  1384                           ; 1 bytes @ 0x20
  1385  000021                     	ds	1
  1386  000022                     md_uart_write_str_ok@i:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x21
  1390  000022                     	ds	1
  1391  000023                     ??_md_attached:
  1392  000023                     ??_sim_card_ok:
  1393  000023                     ??_registration_ok:
  1394  000023                     read_sms@txtAddr2:
  1395                           	opt stack 0
  1396  000023                     delete_sms@p2:
  1397                           	opt stack 0
  1398  000023                     send_text@msg:
  1399                           	opt stack 0
  1400                           
  1401                           ; 2 bytes @ 0x22
  1402  000023                     	ds	1
  1403  000024                     read_sms@txtAddr3:
  1404                           	opt stack 0
  1405  000024                     delete_sms@p3:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x23
  1409  000024                     	ds	1
  1410  000025                     ??_delete_sms:
  1411  000025                     send_text@len:
  1412                           	opt stack 0
  1413  000025                     read_sms@cmgr:
  1414                           	opt stack 0
  1415                           
  1416                           ; 9 bytes @ 0x24
  1417  000025                     	ds	1
  1418  000026                     send_text@number:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x25
  1422  000026                     	ds	1
  1423  000027                     delete_sms@cmgd:
  1424                           	opt stack 0
  1425                           
  1426                           ; 9 bytes @ 0x26
  1427  000027                     	ds	1
  1428  000028                     
  1429                           ; 1 bytes @ 0x27
  1430  000028                     	ds	6
  1431  00002E                     read_sms@txtAddr1:
  1432                           	opt stack 0
  1433                           
  1434                           ; 1 bytes @ 0x2D
  1435  00002E                     	ds	2
  1436  000030                     delete_sms@p1:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x2F
  1440  000030                     	ds	1
  1441  000031                     tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1l	equ	0xFE1
  1449                           
  1450                           ; 1 bytes @ 0x30
  1451 ;;
  1452 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1453 ;;
  1454 ;; *************** function _main *****************
  1455 ;; Defined at:
  1456 ;;		line 26 in file "main.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:        0 bytes
  1475 ;; Hardware stack levels required when called:    8
  1476 ;; This function calls:
  1477 ;;		_init_pic
  1478 ;;		_md_restart
  1479 ;;		_receive_sms
  1480 ;;		_receive_sms_init
  1481 ;;		_send_text
  1482 ;;		_startup_md_ok
  1483 ;; This function is called by:
  1484 ;;		Startup code after reset
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text0
  1489  001442                     __ptext0:
  1490                           	opt stack 0
  1491  001442                     _main:
  1492                           	opt stack 23
  1493                           
  1494                           ;main.c: 28: init_pic();
  1495                           
  1496                           ;incstack = 0
  1497  001442  EC9E  F009         	call	_init_pic	;wreg free
  1498                           
  1499                           ;main.c: 30: while (!startup_md_ok())
  1500  001446  D002               	goto	l119
  1501  001448                     
  1502                           ;main.c: 31: md_restart();
  1503  001448  EC1C  F00B         	call	_md_restart	;wreg free
  1504  00144C                     l119:
  1505  00144C  EC41  F00A         	call	_startup_md_ok	;wreg free
  1506  001450  0900               	iorlw	0
  1507  001452  B4D8               	btfsc	status,2,c
  1508  001454  D7F9               	goto	l120
  1509                           
  1510                           ;main.c: 38: if (inListenMode)
  1511  001456  0100               	movlb	0	; () banked
  1512  001458  51AD               	movf	_inListenMode& (0+255),w,b
  1513  00145A  B4D8               	btfsc	status,2,c
  1514  00145C  D004               	goto	l122
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;main.c: 39: {
  1518                           ;main.c: 40: receive_sms_init();
  1519  00145E  EC46  F008         	call	_receive_sms_init	;wreg free
  1520                           
  1521                           ;main.c: 41: receive_sms();
  1522  001462  EC81  F00A         	call	_receive_sms	;wreg free
  1523  001466                     l122:
  1524                           
  1525                           ;main.c: 42: }
  1526                           ;main.c: 44: send_text((uint8_t *)"Testing smoke hub - Jen's code, Kore SIM.\r\n", 42, (
      +                          uint8_t *)&JENS_NUMBER[0]);
  1527  001466  0EA0               	movlw	low STR_1
  1528  001468  6E23               	movwf	send_text@msg,c
  1529  00146A  0EFF               	movlw	high STR_1
  1530  00146C  6E24               	movwf	send_text@msg+1,c
  1531  00146E  0E2A               	movlw	42
  1532  001470  6E25               	movwf	send_text@len,c
  1533  001472  0EAE               	movlw	low _JENS_NUMBER
  1534  001474  6E26               	movwf	send_text@number,c
  1535  001476  0E00               	movlw	high _JENS_NUMBER
  1536  001478  6E27               	movwf	send_text@number+1,c
  1537  00147A  ECCD  F006         	call	_send_text	;wreg free
  1538  00147E                     
  1539                           ;main.c: 46: {
  1540                           ;main.c: 48: LATBbits.LATB3 = 0;
  1541  00147E  968A               	bcf	3978,3,c	;volatile
  1542  001480  D7FE               	goto	l123
  1543  001482                     __end_of_main:
  1544                           	opt stack 0
  1545                           tblptru	equ	0xFF8
  1546                           tblptrh	equ	0xFF7
  1547                           tblptrl	equ	0xFF6
  1548                           tablat	equ	0xFF5
  1549                           postinc0	equ	0xFEE
  1550                           wreg	equ	0xFE8
  1551                           postdec1	equ	0xFE5
  1552                           fsr1l	equ	0xFE1
  1553                           status	equ	0xFD8
  1554                           
  1555 ;; *************** function _startup_md_ok *****************
  1556 ;; Defined at:
  1557 ;;		line 180 in file "module.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      unsigned char 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    7
  1578 ;; This function calls:
  1579 ;;		_init_uart_modem
  1580 ;;		_is_connected
  1581 ;;		_md_io_setup_ok
  1582 ;;		_registration_ok
  1583 ;;		_wakeup_module_ok
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text1
  1590  001482                     __ptext1:
  1591                           	opt stack 0
  1592  001482                     _startup_md_ok:
  1593                           	opt stack 23
  1594                           
  1595                           ;module.c: 182: init_uart_modem();
  1596                           
  1597                           ;incstack = 0
  1598  001482  ECE3  F00A         	call	_init_uart_modem	;wreg free
  1599                           
  1600                           ;module.c: 183: if (!wakeup_module_ok())
  1601  001486  ECB0  F008         	call	_wakeup_module_ok	;wreg free
  1602  00148A  0900               	iorlw	0
  1603  00148C  A4D8               	btfss	status,2,c
  1604  00148E  D002               	goto	l875
  1605                           
  1606                           ;module.c: 184: return 0;
  1607  001490  0E00               	movlw	0
  1608  001492  0012               	return	
  1609  001494                     l875:
  1610                           
  1611                           ;module.c: 185: if (!md_io_setup_ok())
  1612  001494  EC9D  F00A         	call	_md_io_setup_ok	;wreg free
  1613  001498  0900               	iorlw	0
  1614  00149A  A4D8               	btfss	status,2,c
  1615  00149C  D002               	goto	l877
  1616                           
  1617                           ;module.c: 186: return 0;
  1618  00149E  0E00               	movlw	0
  1619  0014A0  0012               	return	
  1620  0014A2                     l877:
  1621                           
  1622                           ;module.c: 187: if (!registration_ok())
  1623  0014A2  EC1D  F003         	call	_registration_ok	;wreg free
  1624  0014A6  0900               	iorlw	0
  1625  0014A8  A4D8               	btfss	status,2,c
  1626  0014AA  D002               	goto	l878
  1627                           
  1628                           ;module.c: 188: return 0;
  1629  0014AC  0E00               	movlw	0
  1630  0014AE  0012               	return	
  1631  0014B0                     l878:
  1632                           
  1633                           ;module.c: 189: if (!is_connected())
  1634  0014B0  EC42  F00B         	call	_is_connected	;wreg free
  1635  0014B4  0900               	iorlw	0
  1636  0014B6  A4D8               	btfss	status,2,c
  1637  0014B8  D002               	goto	l879
  1638                           
  1639                           ;module.c: 190: return 0;
  1640  0014BA  0E00               	movlw	0
  1641  0014BC  0012               	return	
  1642  0014BE                     l879:
  1643                           
  1644                           ;module.c: 196: return 1;
  1645  0014BE  0E01               	movlw	1
  1646  0014C0  0012               	return	
  1647  0014C2                     __end_of_startup_md_ok:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1l	equ	0xFE1
  1657                           status	equ	0xFD8
  1658                           
  1659 ;; *************** function _registration_ok *****************
  1660 ;; Defined at:
  1661 ;;		line 30 in file "network.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  j               1   75[BANK0 ] unsigned char 
  1666 ;;  buf            32   32[BANK0 ] unsigned char [32]
  1667 ;;  cereg          12    0[BANK0 ] const unsigned char [12]
  1668 ;;  creg           11   12[BANK0 ] const unsigned char [11]
  1669 ;;  cereg_resp      9   23[BANK0 ] const unsigned char [9]
  1670 ;;  creg_resp       8   64[BANK0 ] const unsigned char [8]
  1671 ;;  i               1   76[BANK0 ] unsigned char 
  1672 ;;  matches         1   74[BANK0 ] unsigned char 
  1673 ;;  temp            1   73[BANK0 ] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      unsigned char 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Locals:         0      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Totals:         2      77       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;Total ram usage:       79 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    5
  1690 ;; This function calls:
  1691 ;;		_delay5ms
  1692 ;;		_md_uart_write_str_ok
  1693 ;;		_setup_timer3
  1694 ;;		_str_matches
  1695 ;; This function is called by:
  1696 ;;		_startup_md_ok
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text2
  1701  00063A                     __ptext2:
  1702                           	opt stack 0
  1703  00063A                     _registration_ok:
  1704                           	opt stack 24
  1705                           
  1706                           ;network.c: 32: const uint8_t creg[] = "AT+CREG?\r\n";
  1707                           
  1708                           ;incstack = 0
  1709  00063A  0EDE               	movlw	low registration_ok@F6756
  1710  00063C  6EF6               	movwf	tblptrl,c
  1711  00063E                     	if	1	;There is more than 1 active tblptr byte
  1712  00063E  0EFE               	movlw	high registration_ok@F6756
  1713  000640  6EF7               	movwf	tblptrh,c
  1714  000642                     	endif
  1715  000642                     	if	1	;There are 3 active tblptr bytes
  1716  000642  0E00               	movlw	low (registration_ok@F6756 shr (0+16))
  1717  000644  6EF8               	movwf	tblptru,c
  1718  000646                     	endif
  1719  000646  EE20  F06C         	lfsr	2,registration_ok@creg
  1720  00064A  0E0A               	movlw	10
  1721  00064C                     u4070:
  1722  00064C  0009               	tblrd		*+
  1723  00064E  CFF5 FFDE          	movff	tablat,postinc2
  1724  000652  06E8               	decf	wreg,f,c
  1725  000654  E2FB               	bc	u4070
  1726                           
  1727                           ;network.c: 33: const uint8_t creg_resp[] = "+CREG: ";
  1728  000656  0E21               	movlw	low registration_ok@F6758
  1729  000658  6EF6               	movwf	tblptrl,c
  1730  00065A                     	if	1	;There is more than 1 active tblptr byte
  1731  00065A  0EFF               	movlw	high registration_ok@F6758
  1732  00065C  6EF7               	movwf	tblptrh,c
  1733  00065E                     	endif
  1734  00065E                     	if	1	;There are 3 active tblptr bytes
  1735  00065E  0E00               	movlw	low (registration_ok@F6758 shr (0+16))
  1736  000660  6EF8               	movwf	tblptru,c
  1737  000662                     	endif
  1738  000662  EE20  F0A0         	lfsr	2,registration_ok@creg_resp
  1739  000666  0E07               	movlw	7
  1740  000668                     u4080:
  1741  000668  0009               	tblrd		*+
  1742  00066A  CFF5 FFDE          	movff	tablat,postinc2
  1743  00066E  06E8               	decf	wreg,f,c
  1744  000670  E2FB               	bc	u4080
  1745                           
  1746                           ;network.c: 34: const uint8_t cereg[] = "AT+CEREG?\r\n";
  1747  000672  0EB1               	movlw	low registration_ok@F6760
  1748  000674  6EF6               	movwf	tblptrl,c
  1749  000676                     	if	1	;There is more than 1 active tblptr byte
  1750  000676  0EFE               	movlw	high registration_ok@F6760
  1751  000678  6EF7               	movwf	tblptrh,c
  1752  00067A                     	endif
  1753  00067A                     	if	1	;There are 3 active tblptr bytes
  1754  00067A  0E00               	movlw	low (registration_ok@F6760 shr (0+16))
  1755  00067C  6EF8               	movwf	tblptru,c
  1756  00067E                     	endif
  1757  00067E  EE20  F060         	lfsr	2,registration_ok@cereg
  1758  000682  0E0B               	movlw	11
  1759  000684                     u4090:
  1760  000684  0009               	tblrd		*+
  1761  000686  CFF5 FFDE          	movff	tablat,postinc2
  1762  00068A  06E8               	decf	wreg,f,c
  1763  00068C  E2FB               	bc	u4090
  1764                           
  1765                           ;network.c: 35: const uint8_t cereg_resp[] = "+CEREG: ";
  1766  00068E  0E06               	movlw	low registration_ok@F6762
  1767  000690  6EF6               	movwf	tblptrl,c
  1768  000692                     	if	1	;There is more than 1 active tblptr byte
  1769  000692  0EFF               	movlw	high registration_ok@F6762
  1770  000694  6EF7               	movwf	tblptrh,c
  1771  000696                     	endif
  1772  000696                     	if	1	;There are 3 active tblptr bytes
  1773  000696  0E00               	movlw	low (registration_ok@F6762 shr (0+16))
  1774  000698  6EF8               	movwf	tblptru,c
  1775  00069A                     	endif
  1776  00069A  EE20  F077         	lfsr	2,registration_ok@cereg_resp
  1777  00069E  0E08               	movlw	8
  1778  0006A0                     u4100:
  1779  0006A0  0009               	tblrd		*+
  1780  0006A2  CFF5 FFDE          	movff	tablat,postinc2
  1781  0006A6  06E8               	decf	wreg,f,c
  1782  0006A8  E2FB               	bc	u4100
  1783                           
  1784                           ;network.c: 37: uint8_t buf[32], i = 0, temp;
  1785  0006AA  0E00               	movlw	0
  1786  0006AC  0100               	movlb	0	; () banked
  1787  0006AE  6FAC               	movwf	registration_ok@i& (0+255),b
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;network.c: 38: bool matches = 1;
  1791  0006B0  0E01               	movlw	1
  1792  0006B2  6FAA               	movwf	registration_ok@matches& (0+255),b
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;network.c: 40: for (uint8_t j = 0; j < 4; j ++)
  1796  0006B4  0E00               	movlw	0
  1797  0006B6  6FAB               	movwf	registration_ok@j& (0+255),b
  1798  0006B8                     l4203:
  1799                           
  1800                           ; BSR set to: 0
  1801  0006B8  0E03               	movlw	3
  1802  0006BA  65AB               	cpfsgt	registration_ok@j& (0+255),b
  1803  0006BC  D001               	goto	l603
  1804  0006BE  D0C6               	goto	u4270
  1805  0006C0                     l603:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;network.c: 41: {
  1809                           ;network.c: 42: if (j % 2 == 0)
  1810  0006C0  B1AB               	btfsc	registration_ok@j& (0+255),0,b
  1811  0006C2  D00F               	goto	l605
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;network.c: 43: {
  1815                           ;network.c: 44: if (!md_uart_write_str_ok((unsigned char *)&creg[0], sizeof(creg), 0))
  1816  0006C4  0E6C               	movlw	low registration_ok@creg
  1817  0006C6  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  1818  0006C8  0E00               	movlw	high registration_ok@creg
  1819  0006CA  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  1820  0006CC  0E0B               	movlw	11
  1821  0006CE  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  1822  0006D0  0E00               	movlw	0
  1823  0006D2  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  1824  0006D4  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  1825  0006D8  0900               	iorlw	0
  1826  0006DA  A4D8               	btfss	status,2,c
  1827  0006DC  D013               	goto	l610
  1828                           
  1829                           ;network.c: 45: return 0;
  1830  0006DE  0E00               	movlw	0
  1831  0006E0  0012               	return	
  1832  0006E2                     l605:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;network.c: 47: else if (j % 2 == 1)
  1836  0006E2  A1AB               	btfss	registration_ok@j& (0+255),0,b
  1837  0006E4  D00F               	goto	l610
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;network.c: 48: {
  1841                           ;network.c: 49: if (!md_uart_write_str_ok((unsigned char *)&cereg[0], sizeof(cereg), 0))
  1842  0006E6  0E60               	movlw	low registration_ok@cereg
  1843  0006E8  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  1844  0006EA  0E00               	movlw	high registration_ok@cereg
  1845  0006EC  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  1846  0006EE  0E0C               	movlw	12
  1847  0006F0  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  1848  0006F2  0E00               	movlw	0
  1849  0006F4  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  1850  0006F6  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  1851  0006FA  0900               	iorlw	0
  1852  0006FC  A4D8               	btfss	status,2,c
  1853  0006FE  D002               	goto	l610
  1854                           
  1855                           ;network.c: 50: return 0;
  1856  000700  0E00               	movlw	0
  1857  000702  0012               	return	
  1858  000704                     l610:
  1859                           
  1860                           ;network.c: 51: }
  1861                           ;network.c: 53: RCIE = 0;
  1862  000704  9A9D               	bcf	3997,5,c	;volatile
  1863                           
  1864                           ;network.c: 54: CREN1 = 1;
  1865  000706  88AB               	bsf	4011,4,c	;volatile
  1866                           
  1867                           ;network.c: 55: while (!TMR3IF && !matches)
  1868  000708  D092               	goto	l615
  1869  00070A                     
  1870                           ;network.c: 56: {
  1871                           ;network.c: 57: setup_timer3();
  1872  00070A  EC2F  F00B         	call	_setup_timer3	;wreg free
  1873                           
  1874                           ;network.c: 58: if (RC1IF)
  1875  00070E  AA9E               	btfss	3998,5,c	;volatile
  1876  000710  D08E               	goto	l615
  1877                           
  1878                           ;network.c: 59: {
  1879                           ;network.c: 60: temp = RC1REG;
  1880  000712  CFAE F0A9          	movff	4014,registration_ok@temp	;volatile
  1881                           
  1882                           ;network.c: 61: buf[i++] = temp;
  1883  000716  0100               	movlb	0	; () banked
  1884  000718  51AC               	movf	registration_ok@i& (0+255),w,b
  1885  00071A  0D01               	mullw	1
  1886  00071C  0E80               	movlw	low registration_ok@buf
  1887  00071E  24F3               	addwf	prodl,w,c
  1888  000720  6ED9               	movwf	fsr2l,c
  1889  000722  0E00               	movlw	high registration_ok@buf
  1890  000724  20F4               	addwfc	prodh,w,c
  1891  000726  6EDA               	movwf	fsr2h,c
  1892  000728  C0A9  FFDF         	movff	registration_ok@temp,indf2
  1893                           
  1894                           ; BSR set to: 0
  1895  00072C  2BAC               	incf	registration_ok@i& (0+255),f,b
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;network.c: 62: if (i >= 32)
  1899  00072E  0E1F               	movlw	31
  1900  000730  65AC               	cpfsgt	registration_ok@i& (0+255),b
  1901  000732  D002               	goto	l614
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;network.c: 63: i = 31;
  1905  000734  0E1F               	movlw	31
  1906  000736  6FAC               	movwf	registration_ok@i& (0+255),b
  1907  000738                     l614:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;network.c: 64: if (temp == 'K')
  1911                           
  1912                           ; BSR set to: 0
  1913  000738  0E4B               	movlw	75
  1914  00073A  19A9               	xorwf	registration_ok@temp& (0+255),w,b
  1915  00073C  A4D8               	btfss	status,2,c
  1916  00073E  D077               	goto	l615
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;network.c: 65: {
  1920                           ;network.c: 66: if (j == 0)
  1921  000740  51AB               	movf	registration_ok@j& (0+255),w,b
  1922  000742  A4D8               	btfss	status,2,c
  1923  000744  D015               	goto	l616
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;network.c: 67: matches &= str_matches((uint8_t *)&buf[(uint8_t)(i - 16)], (uint8_t *)&c
      +                          reg_resp[0], sizeof(creg_resp));
  1927  000746  C0AC  F023         	movff	registration_ok@i,??_registration_ok
  1928  00074A  0EF0               	movlw	240
  1929  00074C  2623               	addwf	??_registration_ok,f,c
  1930  00074E  5023               	movf	??_registration_ok,w,c
  1931  000750  0D01               	mullw	1
  1932  000752  0E80               	movlw	low registration_ok@buf
  1933  000754  24F3               	addwf	prodl,w,c
  1934  000756  6E14               	movwf	str_matches@raw,c
  1935  000758  0E00               	movlw	high registration_ok@buf
  1936  00075A  20F4               	addwfc	prodh,w,c
  1937  00075C  6E15               	movwf	str_matches@raw+1,c
  1938  00075E  0EA0               	movlw	low registration_ok@creg_resp
  1939  000760  6E16               	movwf	str_matches@expected,c
  1940  000762  0E00               	movlw	high registration_ok@creg_resp
  1941  000764  6E17               	movwf	str_matches@expected+1,c
  1942  000766  0E08               	movlw	8
  1943  000768  6E18               	movwf	str_matches@len,c
  1944  00076A  EC61  F00A         	call	_str_matches	;wreg free
  1945  00076E  D017               	goto	L1
  1946  000770                     l616:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;network.c: 68: else if (j == 1)
  1950                           
  1951                           ; BSR set to: 0
  1952  000770  05AB               	decf	registration_ok@j& (0+255),w,b
  1953  000772  A4D8               	btfss	status,2,c
  1954  000774  D016               	goto	l618
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;network.c: 69: matches &= str_matches((uint8_t *)&buf[(uint8_t)(i - 17)], (uint8_t *)&c
      +                          ereg_resp[0], sizeof(cereg_resp));
  1958  000776  C0AC  F023         	movff	registration_ok@i,??_registration_ok
  1959  00077A  0EEF               	movlw	239
  1960  00077C  2623               	addwf	??_registration_ok,f,c
  1961  00077E  5023               	movf	??_registration_ok,w,c
  1962  000780  0D01               	mullw	1
  1963  000782  0E80               	movlw	low registration_ok@buf
  1964  000784  24F3               	addwf	prodl,w,c
  1965  000786  6E14               	movwf	str_matches@raw,c
  1966  000788  0E00               	movlw	high registration_ok@buf
  1967  00078A  20F4               	addwfc	prodh,w,c
  1968  00078C  6E15               	movwf	str_matches@raw+1,c
  1969  00078E  0E77               	movlw	low registration_ok@cereg_resp
  1970  000790  6E16               	movwf	str_matches@expected,c
  1971  000792  0E00               	movlw	high registration_ok@cereg_resp
  1972  000794  6E17               	movwf	str_matches@expected+1,c
  1973  000796  0E09               	movlw	9
  1974  000798  6E18               	movwf	str_matches@len,c
  1975  00079A  EC61  F00A         	call	_str_matches	;wreg free
  1976  00079E                     L1:
  1977  00079E  0100               	movlb	0	; () banked
  1978  0007A0  17AA               	andwf	registration_ok@matches& (0+255),f,b
  1979  0007A2                     l618:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;network.c: 71: if (j == 0 && buf[(uint8_t)(i - 9)] == '0')
  1983                           
  1984                           ; BSR set to: 0
  1985                           
  1986                           ; BSR set to: 0
  1987  0007A2  51AB               	movf	registration_ok@j& (0+255),w,b
  1988  0007A4  A4D8               	btfss	status,2,c
  1989  0007A6  D01A               	goto	l620
  1990                           
  1991                           ; BSR set to: 0
  1992  0007A8  C0AC  F023         	movff	registration_ok@i,??_registration_ok
  1993  0007AC  0EF7               	movlw	247
  1994  0007AE  2623               	addwf	??_registration_ok,f,c
  1995  0007B0  5023               	movf	??_registration_ok,w,c
  1996  0007B2  0D01               	mullw	1
  1997  0007B4  0E80               	movlw	low registration_ok@buf
  1998  0007B6  24F3               	addwf	prodl,w,c
  1999  0007B8  6ED9               	movwf	fsr2l,c
  2000  0007BA  0E00               	movlw	high registration_ok@buf
  2001  0007BC  20F4               	addwfc	prodh,w,c
  2002  0007BE  6EDA               	movwf	fsr2h,c
  2003  0007C0  0E30               	movlw	48
  2004  0007C2  18DE               	xorwf	postinc2,w,c
  2005  0007C4  A4D8               	btfss	status,2,c
  2006  0007C6  D00A               	goto	l620
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;network.c: 72: if (!md_uart_write_str_ok((unsigned char *)"AT+CREG=1", sizeof(creg), 1)
      +                          ){}
  2010  0007C8  0EE4               	movlw	low STR_7
  2011  0007CA  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  2012  0007CC  0EFF               	movlw	high STR_7
  2013  0007CE  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  2014  0007D0  0E0B               	movlw	11
  2015  0007D2  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  2016  0007D4  0E01               	movlw	1
  2017  0007D6  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  2018  0007D8  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  2019  0007DC                     l620:
  2020                           
  2021                           ;network.c: 74: matches &= (bool)((buf[(uint8_t)(i - 7)] == '1') || (buf[(uint8_t)(i - 7
      +                          )] == '5'));
  2022  0007DC  0E01               	movlw	1
  2023  0007DE  0100               	movlb	0	; () banked
  2024  0007E0  6FA8               	movwf	_registration_ok$1870& (0+255),b
  2025                           
  2026                           ; BSR set to: 0
  2027  0007E2  C0AC  F023         	movff	registration_ok@i,??_registration_ok
  2028  0007E6  0EF9               	movlw	249
  2029  0007E8  2623               	addwf	??_registration_ok,f,c
  2030  0007EA  5023               	movf	??_registration_ok,w,c
  2031  0007EC  0D01               	mullw	1
  2032  0007EE  0E80               	movlw	low registration_ok@buf
  2033  0007F0  24F3               	addwf	prodl,w,c
  2034  0007F2  6ED9               	movwf	fsr2l,c
  2035  0007F4  0E00               	movlw	high registration_ok@buf
  2036  0007F6  20F4               	addwfc	prodh,w,c
  2037  0007F8  6EDA               	movwf	fsr2h,c
  2038  0007FA  0E31               	movlw	49
  2039  0007FC  18DE               	xorwf	postinc2,w,c
  2040  0007FE  B4D8               	btfsc	status,2,c
  2041  000800  D012               	goto	l622
  2042                           
  2043                           ; BSR set to: 0
  2044  000802  C0AC  F023         	movff	registration_ok@i,??_registration_ok
  2045  000806  0EF9               	movlw	249
  2046  000808  2623               	addwf	??_registration_ok,f,c
  2047  00080A  5023               	movf	??_registration_ok,w,c
  2048  00080C  0D01               	mullw	1
  2049  00080E  0E80               	movlw	low registration_ok@buf
  2050  000810  24F3               	addwf	prodl,w,c
  2051  000812  6ED9               	movwf	fsr2l,c
  2052  000814  0E00               	movlw	high registration_ok@buf
  2053  000816  20F4               	addwfc	prodh,w,c
  2054  000818  6EDA               	movwf	fsr2h,c
  2055  00081A  0E35               	movlw	53
  2056  00081C  18DE               	xorwf	postinc2,w,c
  2057  00081E  B4D8               	btfsc	status,2,c
  2058  000820  D002               	goto	l622
  2059                           
  2060                           ; BSR set to: 0
  2061  000822  0E00               	movlw	0
  2062  000824  6FA8               	movwf	_registration_ok$1870& (0+255),b
  2063  000826                     l622:
  2064                           
  2065                           ; BSR set to: 0
  2066                           
  2067                           ; BSR set to: 0
  2068  000826  51A8               	movf	_registration_ok$1870& (0+255),w,b
  2069  000828  17AA               	andwf	registration_ok@matches& (0+255),f,b
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;network.c: 77: i = 0;
  2073  00082A  0E00               	movlw	0
  2074  00082C  6FAC               	movwf	registration_ok@i& (0+255),b
  2075  00082E                     l615:
  2076                           
  2077                           ; BSR set to: 0
  2078                           
  2079                           ; BSR set to: 0
  2080                           
  2081                           ; BSR set to: 0
  2082  00082E  B2A1               	btfsc	4001,1,c	;volatile
  2083  000830  D004               	goto	u4260
  2084  000832  0100               	movlb	0	; () banked
  2085  000834  51AA               	movf	registration_ok@matches& (0+255),w,b
  2086  000836  B4D8               	btfsc	status,2,c
  2087  000838  D768               	goto	l612
  2088  00083A                     u4260:
  2089                           
  2090                           ;network.c: 78: }
  2091                           ;network.c: 80: }
  2092                           ;network.c: 81: }
  2093                           ;network.c: 82: delay5ms(200);
  2094                           
  2095                           ; BSR set to: 0
  2096                           
  2097                           ; BSR set to: 0
  2098  00083A  0E00               	movlw	0
  2099  00083C  6E15               	movwf	delay5ms@cnt+1,c
  2100  00083E  0EC8               	movlw	200
  2101  000840  6E14               	movwf	delay5ms@cnt,c
  2102  000842  ECCE  F00A         	call	_delay5ms	;wreg free
  2103  000846  0100               	movlb	0	; () banked
  2104  000848  2BAB               	incf	registration_ok@j& (0+255),f,b
  2105  00084A  D736               	goto	l4203
  2106  00084C                     u4270:
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;network.c: 83: }
  2110                           ;network.c: 84: return matches;
  2111                           
  2112                           ; BSR set to: 0
  2113  00084C  51AA               	movf	registration_ok@matches& (0+255),w,b
  2114  00084E  0012               	return	
  2115  000850                     __end_of_registration_ok:
  2116                           	opt stack 0
  2117                           tblptru	equ	0xFF8
  2118                           tblptrh	equ	0xFF7
  2119                           tblptrl	equ	0xFF6
  2120                           tablat	equ	0xFF5
  2121                           prodh	equ	0xFF4
  2122                           prodl	equ	0xFF3
  2123                           postinc0	equ	0xFEE
  2124                           wreg	equ	0xFE8
  2125                           postdec1	equ	0xFE5
  2126                           fsr1l	equ	0xFE1
  2127                           indf2	equ	0xFDF
  2128                           postinc2	equ	0xFDE
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _md_io_setup_ok *****************
  2134 ;; Defined at:
  2135 ;;		line 119 in file "module.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      unsigned char 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    6
  2156 ;; This function calls:
  2157 ;;		_init_modem_ok
  2158 ;;		_is_first_run
  2159 ;;		_save_first_run
  2160 ;;		_sim_card_ok
  2161 ;;		_write_defaults
  2162 ;; This function is called by:
  2163 ;;		_startup_md_ok
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text3
  2168  00153A                     __ptext3:
  2169                           	opt stack 0
  2170  00153A                     _md_io_setup_ok:
  2171                           	opt stack 23
  2172                           
  2173                           ;module.c: 121: if(is_first_run())
  2174                           
  2175                           ;incstack = 0
  2176  00153A  EC10  F00B         	call	_is_first_run	;wreg free
  2177  00153E  0900               	iorlw	0
  2178  001540  B4D8               	btfsc	status,2,c
  2179  001542  D00B               	goto	l849
  2180                           
  2181                           ;module.c: 122: {
  2182                           ;module.c: 123: write_defaults();
  2183  001544  EC61  F000         	call	_write_defaults	;wreg free
  2184                           
  2185                           ;module.c: 124: if (!init_modem_ok())
  2186  001548  EC28  F004         	call	_init_modem_ok	;wreg free
  2187  00154C  0900               	iorlw	0
  2188  00154E  A4D8               	btfss	status,2,c
  2189  001550  D002               	goto	l850
  2190                           
  2191                           ;module.c: 125: return 0;
  2192  001552  0E00               	movlw	0
  2193  001554  0012               	return	
  2194  001556                     l850:
  2195                           
  2196                           ;module.c: 126: save_first_run();
  2197  001556  EC27  F00B         	call	_save_first_run	;wreg free
  2198  00155A                     l849:
  2199                           
  2200                           ;module.c: 127: }
  2201                           ;module.c: 128: if (sim_card_ok())
  2202  00155A  EC45  F006         	call	_sim_card_ok	;wreg free
  2203  00155E  0900               	iorlw	0
  2204  001560  B4D8               	btfsc	status,2,c
  2205  001562  D002               	goto	l852
  2206                           
  2207                           ;module.c: 129: return 1;
  2208  001564  0E01               	movlw	1
  2209  001566  0012               	return	
  2210  001568                     l852:
  2211                           
  2212                           ;module.c: 130: return 0;
  2213  001568  0E00               	movlw	0
  2214  00156A  0012               	return	
  2215  00156C                     __end_of_md_io_setup_ok:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           prodh	equ	0xFF4
  2222                           prodl	equ	0xFF3
  2223                           postinc0	equ	0xFEE
  2224                           wreg	equ	0xFE8
  2225                           postdec1	equ	0xFE5
  2226                           fsr1l	equ	0xFE1
  2227                           indf2	equ	0xFDF
  2228                           postinc2	equ	0xFDE
  2229                           fsr2h	equ	0xFDA
  2230                           fsr2l	equ	0xFD9
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _write_defaults *****************
  2234 ;; Defined at:
  2235 ;;		line 18 in file "setup.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  i               1   27[COMRAM] unsigned char 
  2240 ;;  page            1   26[COMRAM] unsigned char 
  2241 ;;  temp            1   25[COMRAM] unsigned char 
  2242 ;;  addr            1   24[COMRAM] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;Total ram usage:        6 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    3
  2259 ;; This function calls:
  2260 ;;		_ee_read
  2261 ;;		_ee_write
  2262 ;; This function is called by:
  2263 ;;		_md_io_setup_ok
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text4
  2268  0000C2                     __ptext4:
  2269                           	opt stack 0
  2270  0000C2                     _write_defaults:
  2271                           	opt stack 25
  2272                           
  2273                           ;setup.c: 20: saveINTCONbits = INTCON;
  2274                           
  2275                           ;incstack = 0
  2276  0000C2  CFF2 F049          	movff	intcon,_saveINTCONbits	;volatile
  2277                           
  2278                           ;setup.c: 21: INTCONbits.GIE = 0;
  2279  0000C6  9EF2               	bcf	intcon,7,c	;volatile
  2280                           
  2281                           ;setup.c: 22: INTCONbits.GIEH = 0;
  2282  0000C8  9EF2               	bcf	intcon,7,c	;volatile
  2283                           
  2284                           ;setup.c: 23: INTCONbits.GIEL = 0;
  2285  0000CA  9CF2               	bcf	intcon,6,c	;volatile
  2286                           
  2287                           ;setup.c: 25: uint8_t page, addr, i, temp;
  2288                           ;setup.c: 28: if( ee_read(0, 0x00)==VERSION[0] )
  2289  0000CC  0E00               	movlw	0
  2290  0000CE  6E14               	movwf	ee_read@addr,c
  2291  0000D0  0E00               	movlw	0
  2292  0000D2  ECF6  F00A         	call	_ee_read
  2293  0000D6  6E17               	movwf	??_write_defaults& (0+255),c
  2294  0000D8  0E3D               	movlw	low _VERSION
  2295  0000DA  6EF6               	movwf	tblptrl,c
  2296  0000DC                     	if	1	;There is more than 1 active tblptr byte
  2297  0000DC  0EFF               	movlw	high _VERSION
  2298  0000DE  6EF7               	movwf	tblptrh,c
  2299  0000E0                     	endif
  2300  0000E0                     	if	1	;There are 3 active tblptr bytes
  2301  0000E0  0E00               	movlw	low (_VERSION shr (0+16))
  2302  0000E2  6EF8               	movwf	tblptru,c
  2303  0000E4                     	endif
  2304  0000E4  0008               	tblrd		*
  2305  0000E6  50F5               	movf	tablat,w,c
  2306  0000E8  1817               	xorwf	??_write_defaults,w,c
  2307  0000EA  A4D8               	btfss	status,2,c
  2308  0000EC  D020               	goto	l997
  2309                           
  2310                           ;setup.c: 29: {
  2311                           ;setup.c: 30: if( ee_read(0, 0x01)==VERSION[1] )
  2312  0000EE  0E01               	movlw	1
  2313  0000F0  6E14               	movwf	ee_read@addr,c
  2314  0000F2  0E00               	movlw	0
  2315  0000F4  ECF6  F00A         	call	_ee_read
  2316  0000F8  6E17               	movwf	??_write_defaults& (0+255),c
  2317  0000FA  0E3E               	movlw	low (_VERSION+1)
  2318  0000FC  6EF6               	movwf	tblptrl,c
  2319  0000FE  0EFF               	movlw	high (_VERSION+1)
  2320  000100  6EF7               	movwf	tblptrh,c
  2321  000102                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2322  000102  6AF8               	clrf	tblptru,c
  2323  000104                     	endif
  2324  000104                     	if	0	;tblptru may be non-zero
  2325  000104                     	endif
  2326  000104  0008               	tblrd		*
  2327  000106  50F5               	movf	tablat,w,c
  2328  000108  1817               	xorwf	??_write_defaults,w,c
  2329  00010A  A4D8               	btfss	status,2,c
  2330  00010C  D010               	goto	l997
  2331                           
  2332                           ;setup.c: 31: {
  2333                           ;setup.c: 32: if( ee_read(0, 0x02)==VERSION[2] )
  2334  00010E  0E02               	movlw	2
  2335  000110  6E14               	movwf	ee_read@addr,c
  2336  000112  0E00               	movlw	0
  2337  000114  ECF6  F00A         	call	_ee_read
  2338  000118  6E17               	movwf	??_write_defaults& (0+255),c
  2339  00011A  0E3F               	movlw	low (_VERSION+2)
  2340  00011C  6EF6               	movwf	tblptrl,c
  2341  00011E  0EFF               	movlw	high (_VERSION+2)
  2342  000120  6EF7               	movwf	tblptrh,c
  2343  000122                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2344  000122  6AF8               	clrf	tblptru,c
  2345  000124                     	endif
  2346  000124                     	if	0	;tblptru may be non-zero
  2347  000124                     	endif
  2348  000124  0008               	tblrd		*
  2349  000126  50F5               	movf	tablat,w,c
  2350  000128  1817               	xorwf	??_write_defaults,w,c
  2351  00012A  B4D8               	btfsc	status,2,c
  2352  00012C  0012               	return	
  2353  00012E                     l997:
  2354                           
  2355                           ;setup.c: 34: }
  2356                           ;setup.c: 35: }
  2357                           ;setup.c: 38: page = 0x00;
  2358  00012E  0E00               	movlw	0
  2359  000130  6E1B               	movwf	write_defaults@page,c
  2360                           
  2361                           ;setup.c: 39: addr = 0x10;
  2362  000132  0E10               	movlw	16
  2363  000134  6E19               	movwf	write_defaults@addr,c
  2364                           
  2365                           ;setup.c: 40: i = 0;
  2366  000136  0E00               	movlw	0
  2367  000138  6E1C               	movwf	write_defaults@i,c
  2368                           
  2369                           ;setup.c: 41: while (i++ < 0x20 && temp != '#')
  2370  00013A  D016               	goto	l999
  2371  00013C                     
  2372                           ;setup.c: 42: {
  2373                           ;setup.c: 43: temp = APN[i];
  2374  00013C  501C               	movf	write_defaults@i,w,c
  2375  00013E  0D01               	mullw	1
  2376  000140  0E55               	movlw	low _APN
  2377  000142  24F3               	addwf	prodl,w,c
  2378  000144  6EF6               	movwf	tblptrl,c
  2379  000146  0EFF               	movlw	high _APN
  2380  000148  20F4               	addwfc	prodh,w,c
  2381  00014A  6EF7               	movwf	tblptrh,c
  2382  00014C                     	if	1	;There are 3 active tblptr bytes
  2383  00014C  6AF8               	clrf	tblptru,c
  2384  00014E  0E00               	movlw	low (__mediumconst shr (0+16))
  2385  000150  22F8               	addwfc	tblptru,f,c
  2386  000152                     	endif
  2387  000152  0008               	tblrd		*
  2388  000154  CFF5 F01A          	movff	tablat,write_defaults@temp
  2389                           
  2390                           ;setup.c: 44: ee_write(page, (uint8_t)(addr + i), temp);
  2391  000158  5019               	movf	write_defaults@addr,w,c
  2392  00015A  241C               	addwf	write_defaults@i,w,c
  2393  00015C  6E14               	movwf	ee_write@addr,c
  2394  00015E  C01A  F015         	movff	write_defaults@temp,ee_write@data
  2395  000162  501B               	movf	write_defaults@page,w,c
  2396  000164  ECB6  F00A         	call	_ee_write
  2397  000168                     l999:
  2398  000168  2A1C               	incf	write_defaults@i,f,c
  2399  00016A  041C               	decf	write_defaults@i,w,c
  2400  00016C  6E17               	movwf	??_write_defaults& (0+255),c
  2401  00016E  0E20               	movlw	32
  2402  000170  6017               	cpfslt	??_write_defaults,c
  2403  000172  D004               	goto	u3770
  2404  000174  0E23               	movlw	35
  2405  000176  181A               	xorwf	write_defaults@temp,w,c
  2406  000178  A4D8               	btfss	status,2,c
  2407  00017A  D7E0               	goto	l1000
  2408  00017C                     u3770:
  2409                           
  2410                           ;setup.c: 45: }
  2411                           ;setup.c: 47: page = 0x00;
  2412  00017C  0E00               	movlw	0
  2413  00017E  6E1B               	movwf	write_defaults@page,c
  2414                           
  2415                           ;setup.c: 48: addr = 0x30;
  2416  000180  0E30               	movlw	48
  2417  000182  6E19               	movwf	write_defaults@addr,c
  2418                           
  2419                           ;setup.c: 49: temp = 0x00;
  2420  000184  0E00               	movlw	0
  2421  000186  6E1A               	movwf	write_defaults@temp,c
  2422                           
  2423                           ;setup.c: 50: i = 0;
  2424  000188  0E00               	movlw	0
  2425  00018A  6E1C               	movwf	write_defaults@i,c
  2426                           
  2427                           ;setup.c: 51: while (temp != '#')
  2428  00018C  D017               	goto	l1004
  2429  00018E                     
  2430                           ;setup.c: 52: {
  2431                           ;setup.c: 53: temp = IP1[i];
  2432  00018E  501C               	movf	write_defaults@i,w,c
  2433  000190  0D01               	mullw	1
  2434  000192  0E53               	movlw	low _IP1
  2435  000194  24F3               	addwf	prodl,w,c
  2436  000196  6EF6               	movwf	tblptrl,c
  2437  000198  0EFF               	movlw	high _IP1
  2438  00019A  20F4               	addwfc	prodh,w,c
  2439  00019C  6EF7               	movwf	tblptrh,c
  2440  00019E                     	if	1	;There are 3 active tblptr bytes
  2441  00019E  6AF8               	clrf	tblptru,c
  2442  0001A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2443  0001A2  22F8               	addwfc	tblptru,f,c
  2444  0001A4                     	endif
  2445  0001A4  0008               	tblrd		*
  2446  0001A6  CFF5 F01A          	movff	tablat,write_defaults@temp
  2447                           
  2448                           ;setup.c: 54: ee_write(page, (uint8_t)(addr + i), temp);
  2449  0001AA  5019               	movf	write_defaults@addr,w,c
  2450  0001AC  241C               	addwf	write_defaults@i,w,c
  2451  0001AE  6E14               	movwf	ee_write@addr,c
  2452  0001B0  C01A  F015         	movff	write_defaults@temp,ee_write@data
  2453  0001B4  501B               	movf	write_defaults@page,w,c
  2454  0001B6  ECB6  F00A         	call	_ee_write
  2455                           
  2456                           ;setup.c: 55: i++;
  2457  0001BA  2A1C               	incf	write_defaults@i,f,c
  2458  0001BC                     l1004:
  2459  0001BC  0E23               	movlw	35
  2460  0001BE  181A               	xorwf	write_defaults@temp,w,c
  2461  0001C0  A4D8               	btfss	status,2,c
  2462  0001C2  D7E5               	goto	l1005
  2463                           
  2464                           ;setup.c: 56: }
  2465                           ;setup.c: 58: page = 0x00;
  2466  0001C4  0E00               	movlw	0
  2467  0001C6  6E1B               	movwf	write_defaults@page,c
  2468                           
  2469                           ;setup.c: 59: addr = 0x50;
  2470  0001C8  0E50               	movlw	80
  2471  0001CA  6E19               	movwf	write_defaults@addr,c
  2472                           
  2473                           ;setup.c: 60: temp = 0x00;
  2474  0001CC  0E00               	movlw	0
  2475  0001CE  6E1A               	movwf	write_defaults@temp,c
  2476                           
  2477                           ;setup.c: 61: i = 0;
  2478  0001D0  0E00               	movlw	0
  2479  0001D2  6E1C               	movwf	write_defaults@i,c
  2480                           
  2481                           ;setup.c: 62: while (temp != '#')
  2482  0001D4  D017               	goto	l1007
  2483  0001D6                     
  2484                           ;setup.c: 63: {
  2485                           ;setup.c: 64: temp = IP2[i];
  2486  0001D6  501C               	movf	write_defaults@i,w,c
  2487  0001D8  0D01               	mullw	1
  2488  0001DA  0E51               	movlw	low _IP2
  2489  0001DC  24F3               	addwf	prodl,w,c
  2490  0001DE  6EF6               	movwf	tblptrl,c
  2491  0001E0  0EFF               	movlw	high _IP2
  2492  0001E2  20F4               	addwfc	prodh,w,c
  2493  0001E4  6EF7               	movwf	tblptrh,c
  2494  0001E6                     	if	1	;There are 3 active tblptr bytes
  2495  0001E6  6AF8               	clrf	tblptru,c
  2496  0001E8  0E00               	movlw	low (__mediumconst shr (0+16))
  2497  0001EA  22F8               	addwfc	tblptru,f,c
  2498  0001EC                     	endif
  2499  0001EC  0008               	tblrd		*
  2500  0001EE  CFF5 F01A          	movff	tablat,write_defaults@temp
  2501                           
  2502                           ;setup.c: 65: ee_write(page, (uint8_t)(addr + i), temp);
  2503  0001F2  5019               	movf	write_defaults@addr,w,c
  2504  0001F4  241C               	addwf	write_defaults@i,w,c
  2505  0001F6  6E14               	movwf	ee_write@addr,c
  2506  0001F8  C01A  F015         	movff	write_defaults@temp,ee_write@data
  2507  0001FC  501B               	movf	write_defaults@page,w,c
  2508  0001FE  ECB6  F00A         	call	_ee_write
  2509                           
  2510                           ;setup.c: 66: i++;
  2511  000202  2A1C               	incf	write_defaults@i,f,c
  2512  000204                     l1007:
  2513  000204  0E23               	movlw	35
  2514  000206  181A               	xorwf	write_defaults@temp,w,c
  2515  000208  A4D8               	btfss	status,2,c
  2516  00020A  D7E5               	goto	l1008
  2517                           
  2518                           ;setup.c: 67: }
  2519                           ;setup.c: 69: page = 0x00;
  2520  00020C  0E00               	movlw	0
  2521  00020E  6E1B               	movwf	write_defaults@page,c
  2522                           
  2523                           ;setup.c: 70: addr = 0x70;
  2524  000210  0E70               	movlw	112
  2525  000212  6E19               	movwf	write_defaults@addr,c
  2526                           
  2527                           ;setup.c: 71: temp = 0x00;
  2528  000214  0E00               	movlw	0
  2529  000216  6E1A               	movwf	write_defaults@temp,c
  2530                           
  2531                           ;setup.c: 72: i = 0;
  2532  000218  0E00               	movlw	0
  2533  00021A  6E1C               	movwf	write_defaults@i,c
  2534                           
  2535                           ;setup.c: 73: while (temp != '#')
  2536  00021C  D017               	goto	l1010
  2537  00021E                     
  2538                           ;setup.c: 74: {
  2539                           ;setup.c: 75: temp = IP3[i];
  2540  00021E  501C               	movf	write_defaults@i,w,c
  2541  000220  0D01               	mullw	1
  2542  000222  0E4F               	movlw	low _IP3
  2543  000224  24F3               	addwf	prodl,w,c
  2544  000226  6EF6               	movwf	tblptrl,c
  2545  000228  0EFF               	movlw	high _IP3
  2546  00022A  20F4               	addwfc	prodh,w,c
  2547  00022C  6EF7               	movwf	tblptrh,c
  2548  00022E                     	if	1	;There are 3 active tblptr bytes
  2549  00022E  6AF8               	clrf	tblptru,c
  2550  000230  0E00               	movlw	low (__mediumconst shr (0+16))
  2551  000232  22F8               	addwfc	tblptru,f,c
  2552  000234                     	endif
  2553  000234  0008               	tblrd		*
  2554  000236  CFF5 F01A          	movff	tablat,write_defaults@temp
  2555                           
  2556                           ;setup.c: 76: ee_write(page, (uint8_t)(addr + i), temp);
  2557  00023A  5019               	movf	write_defaults@addr,w,c
  2558  00023C  241C               	addwf	write_defaults@i,w,c
  2559  00023E  6E14               	movwf	ee_write@addr,c
  2560  000240  C01A  F015         	movff	write_defaults@temp,ee_write@data
  2561  000244  501B               	movf	write_defaults@page,w,c
  2562  000246  ECB6  F00A         	call	_ee_write
  2563                           
  2564                           ;setup.c: 77: i++;
  2565  00024A  2A1C               	incf	write_defaults@i,f,c
  2566  00024C                     l1010:
  2567  00024C  0E23               	movlw	35
  2568  00024E  181A               	xorwf	write_defaults@temp,w,c
  2569  000250  A4D8               	btfss	status,2,c
  2570  000252  D7E5               	goto	l1011
  2571                           
  2572                           ;setup.c: 78: }
  2573                           ;setup.c: 80: page = 0x00;
  2574  000254  0E00               	movlw	0
  2575  000256  6E1B               	movwf	write_defaults@page,c
  2576                           
  2577                           ;setup.c: 81: addr = 0x90;
  2578  000258  0E90               	movlw	144
  2579  00025A  6E19               	movwf	write_defaults@addr,c
  2580                           
  2581                           ;setup.c: 82: temp = 0x00;
  2582  00025C  0E00               	movlw	0
  2583  00025E  6E1A               	movwf	write_defaults@temp,c
  2584                           
  2585                           ;setup.c: 83: i = 0;
  2586  000260  0E00               	movlw	0
  2587  000262  6E1C               	movwf	write_defaults@i,c
  2588                           
  2589                           ;setup.c: 84: while (temp != '#')
  2590  000264  D017               	goto	l1013
  2591  000266                     
  2592                           ;setup.c: 85: {
  2593                           ;setup.c: 86: temp = IP4[i];
  2594  000266  501C               	movf	write_defaults@i,w,c
  2595  000268  0D01               	mullw	1
  2596  00026A  0E4D               	movlw	low _IP4
  2597  00026C  24F3               	addwf	prodl,w,c
  2598  00026E  6EF6               	movwf	tblptrl,c
  2599  000270  0EFF               	movlw	high _IP4
  2600  000272  20F4               	addwfc	prodh,w,c
  2601  000274  6EF7               	movwf	tblptrh,c
  2602  000276                     	if	1	;There are 3 active tblptr bytes
  2603  000276  6AF8               	clrf	tblptru,c
  2604  000278  0E00               	movlw	low (__mediumconst shr (0+16))
  2605  00027A  22F8               	addwfc	tblptru,f,c
  2606  00027C                     	endif
  2607  00027C  0008               	tblrd		*
  2608  00027E  CFF5 F01A          	movff	tablat,write_defaults@temp
  2609                           
  2610                           ;setup.c: 87: ee_write(page, (uint8_t)(addr + i), temp);
  2611  000282  5019               	movf	write_defaults@addr,w,c
  2612  000284  241C               	addwf	write_defaults@i,w,c
  2613  000286  6E14               	movwf	ee_write@addr,c
  2614  000288  C01A  F015         	movff	write_defaults@temp,ee_write@data
  2615  00028C  501B               	movf	write_defaults@page,w,c
  2616  00028E  ECB6  F00A         	call	_ee_write
  2617                           
  2618                           ;setup.c: 88: i++;
  2619  000292  2A1C               	incf	write_defaults@i,f,c
  2620  000294                     l1013:
  2621  000294  0E23               	movlw	35
  2622  000296  181A               	xorwf	write_defaults@temp,w,c
  2623  000298  A4D8               	btfss	status,2,c
  2624  00029A  D7E5               	goto	l1014
  2625                           
  2626                           ;setup.c: 89: }
  2627                           ;setup.c: 92: page = 0x00;
  2628  00029C  0E00               	movlw	0
  2629  00029E  6E1B               	movwf	write_defaults@page,c
  2630                           
  2631                           ;setup.c: 93: addr = 0xB0;
  2632  0002A0  0EB0               	movlw	176
  2633  0002A2  6E19               	movwf	write_defaults@addr,c
  2634                           
  2635                           ;setup.c: 94: ee_write(page, addr, (PORT1 >> 8));
  2636  0002A4  C019  F014         	movff	write_defaults@addr,ee_write@addr
  2637  0002A8  0E4B               	movlw	low _PORT1
  2638  0002AA  6EF6               	movwf	tblptrl,c
  2639  0002AC                     	if	1	;There is more than 1 active tblptr byte
  2640  0002AC  0EFF               	movlw	high _PORT1
  2641  0002AE  6EF7               	movwf	tblptrh,c
  2642  0002B0                     	endif
  2643  0002B0                     	if	1	;There are 3 active tblptr bytes
  2644  0002B0  0E00               	movlw	low (_PORT1 shr (0+16))
  2645  0002B2  6EF8               	movwf	tblptru,c
  2646  0002B4                     	endif
  2647  0002B4  0009               	tblrd		*+
  2648  0002B6  CFF5 F017          	movff	tablat,??_write_defaults
  2649  0002BA  0009               	tblrd		*+
  2650  0002BC  CFF5 F018          	movff	tablat,??_write_defaults+1
  2651  0002C0  C018  F017         	movff	??_write_defaults+1,??_write_defaults
  2652  0002C4  6A18               	clrf	??_write_defaults+1,c
  2653  0002C6  5017               	movf	??_write_defaults,w,c
  2654  0002C8  6E15               	movwf	ee_write@data,c
  2655  0002CA  501B               	movf	write_defaults@page,w,c
  2656  0002CC  ECB6  F00A         	call	_ee_write
  2657                           
  2658                           ;setup.c: 95: ee_write(page, (uint8_t)(addr + 1), (PORT1 & 0x00FF));
  2659  0002D0  2819               	incf	write_defaults@addr,w,c
  2660  0002D2  6E14               	movwf	ee_write@addr,c
  2661  0002D4  0E4B               	movlw	low _PORT1
  2662  0002D6  6EF6               	movwf	tblptrl,c
  2663  0002D8                     	if	1	;There is more than 1 active tblptr byte
  2664  0002D8  0EFF               	movlw	high _PORT1
  2665  0002DA  6EF7               	movwf	tblptrh,c
  2666  0002DC                     	endif
  2667  0002DC                     	if	1	;There are 3 active tblptr bytes
  2668  0002DC  0E00               	movlw	low (_PORT1 shr (0+16))
  2669  0002DE  6EF8               	movwf	tblptru,c
  2670  0002E0                     	endif
  2671  0002E0  0008               	tblrd		*
  2672  0002E2  CFF5 F015          	movff	tablat,ee_write@data
  2673  0002E6  501B               	movf	write_defaults@page,w,c
  2674  0002E8  ECB6  F00A         	call	_ee_write
  2675                           
  2676                           ;setup.c: 97: page = 0x00;
  2677  0002EC  0E00               	movlw	0
  2678  0002EE  6E1B               	movwf	write_defaults@page,c
  2679                           
  2680                           ;setup.c: 98: addr = 0xB2;
  2681  0002F0  0EB2               	movlw	178
  2682  0002F2  6E19               	movwf	write_defaults@addr,c
  2683                           
  2684                           ;setup.c: 99: ee_write(page, addr, (PORT2 >> 8));
  2685  0002F4  C019  F014         	movff	write_defaults@addr,ee_write@addr
  2686  0002F8  0E49               	movlw	low _PORT2
  2687  0002FA  6EF6               	movwf	tblptrl,c
  2688  0002FC                     	if	1	;There is more than 1 active tblptr byte
  2689  0002FC  0EFF               	movlw	high _PORT2
  2690  0002FE  6EF7               	movwf	tblptrh,c
  2691  000300                     	endif
  2692  000300                     	if	1	;There are 3 active tblptr bytes
  2693  000300  0E00               	movlw	low (_PORT2 shr (0+16))
  2694  000302  6EF8               	movwf	tblptru,c
  2695  000304                     	endif
  2696  000304  0009               	tblrd		*+
  2697  000306  CFF5 F017          	movff	tablat,??_write_defaults
  2698  00030A  0009               	tblrd		*+
  2699  00030C  CFF5 F018          	movff	tablat,??_write_defaults+1
  2700  000310  C018  F017         	movff	??_write_defaults+1,??_write_defaults
  2701  000314  6A18               	clrf	??_write_defaults+1,c
  2702  000316  5017               	movf	??_write_defaults,w,c
  2703  000318  6E15               	movwf	ee_write@data,c
  2704  00031A  501B               	movf	write_defaults@page,w,c
  2705  00031C  ECB6  F00A         	call	_ee_write
  2706                           
  2707                           ;setup.c: 100: ee_write(page, (uint8_t)(addr + 1), (PORT2 & 0x00FF));
  2708  000320  2819               	incf	write_defaults@addr,w,c
  2709  000322  6E14               	movwf	ee_write@addr,c
  2710  000324  0E49               	movlw	low _PORT2
  2711  000326  6EF6               	movwf	tblptrl,c
  2712  000328                     	if	1	;There is more than 1 active tblptr byte
  2713  000328  0EFF               	movlw	high _PORT2
  2714  00032A  6EF7               	movwf	tblptrh,c
  2715  00032C                     	endif
  2716  00032C                     	if	1	;There are 3 active tblptr bytes
  2717  00032C  0E00               	movlw	low (_PORT2 shr (0+16))
  2718  00032E  6EF8               	movwf	tblptru,c
  2719  000330                     	endif
  2720  000330  0008               	tblrd		*
  2721  000332  CFF5 F015          	movff	tablat,ee_write@data
  2722  000336  501B               	movf	write_defaults@page,w,c
  2723  000338  ECB6  F00A         	call	_ee_write
  2724                           
  2725                           ;setup.c: 102: page = 0x00;
  2726  00033C  0E00               	movlw	0
  2727  00033E  6E1B               	movwf	write_defaults@page,c
  2728                           
  2729                           ;setup.c: 103: addr = 0xB4;
  2730  000340  0EB4               	movlw	180
  2731  000342  6E19               	movwf	write_defaults@addr,c
  2732                           
  2733                           ;setup.c: 104: ee_write(page, addr, (PORT3 >> 8));
  2734  000344  C019  F014         	movff	write_defaults@addr,ee_write@addr
  2735  000348  0E47               	movlw	low _PORT3
  2736  00034A  6EF6               	movwf	tblptrl,c
  2737  00034C                     	if	1	;There is more than 1 active tblptr byte
  2738  00034C  0EFF               	movlw	high _PORT3
  2739  00034E  6EF7               	movwf	tblptrh,c
  2740  000350                     	endif
  2741  000350                     	if	1	;There are 3 active tblptr bytes
  2742  000350  0E00               	movlw	low (_PORT3 shr (0+16))
  2743  000352  6EF8               	movwf	tblptru,c
  2744  000354                     	endif
  2745  000354  0009               	tblrd		*+
  2746  000356  CFF5 F017          	movff	tablat,??_write_defaults
  2747  00035A  0009               	tblrd		*+
  2748  00035C  CFF5 F018          	movff	tablat,??_write_defaults+1
  2749  000360  C018  F017         	movff	??_write_defaults+1,??_write_defaults
  2750  000364  6A18               	clrf	??_write_defaults+1,c
  2751  000366  5017               	movf	??_write_defaults,w,c
  2752  000368  6E15               	movwf	ee_write@data,c
  2753  00036A  501B               	movf	write_defaults@page,w,c
  2754  00036C  ECB6  F00A         	call	_ee_write
  2755                           
  2756                           ;setup.c: 105: ee_write(page, (uint8_t)(addr + 1), (PORT3 & 0x00FF));
  2757  000370  2819               	incf	write_defaults@addr,w,c
  2758  000372  6E14               	movwf	ee_write@addr,c
  2759  000374  0E47               	movlw	low _PORT3
  2760  000376  6EF6               	movwf	tblptrl,c
  2761  000378                     	if	1	;There is more than 1 active tblptr byte
  2762  000378  0EFF               	movlw	high _PORT3
  2763  00037A  6EF7               	movwf	tblptrh,c
  2764  00037C                     	endif
  2765  00037C                     	if	1	;There are 3 active tblptr bytes
  2766  00037C  0E00               	movlw	low (_PORT3 shr (0+16))
  2767  00037E  6EF8               	movwf	tblptru,c
  2768  000380                     	endif
  2769  000380  0008               	tblrd		*
  2770  000382  CFF5 F015          	movff	tablat,ee_write@data
  2771  000386  501B               	movf	write_defaults@page,w,c
  2772  000388  ECB6  F00A         	call	_ee_write
  2773                           
  2774                           ;setup.c: 107: page = 0x00;
  2775  00038C  0E00               	movlw	0
  2776  00038E  6E1B               	movwf	write_defaults@page,c
  2777                           
  2778                           ;setup.c: 108: addr = 0xB6;
  2779  000390  0EB6               	movlw	182
  2780  000392  6E19               	movwf	write_defaults@addr,c
  2781                           
  2782                           ;setup.c: 109: ee_write(page, addr, (PORT4 >> 8));
  2783  000394  C019  F014         	movff	write_defaults@addr,ee_write@addr
  2784  000398  0E45               	movlw	low _PORT4
  2785  00039A  6EF6               	movwf	tblptrl,c
  2786  00039C                     	if	1	;There is more than 1 active tblptr byte
  2787  00039C  0EFF               	movlw	high _PORT4
  2788  00039E  6EF7               	movwf	tblptrh,c
  2789  0003A0                     	endif
  2790  0003A0                     	if	1	;There are 3 active tblptr bytes
  2791  0003A0  0E00               	movlw	low (_PORT4 shr (0+16))
  2792  0003A2  6EF8               	movwf	tblptru,c
  2793  0003A4                     	endif
  2794  0003A4  0009               	tblrd		*+
  2795  0003A6  CFF5 F017          	movff	tablat,??_write_defaults
  2796  0003AA  0009               	tblrd		*+
  2797  0003AC  CFF5 F018          	movff	tablat,??_write_defaults+1
  2798  0003B0  C018  F017         	movff	??_write_defaults+1,??_write_defaults
  2799  0003B4  6A18               	clrf	??_write_defaults+1,c
  2800  0003B6  5017               	movf	??_write_defaults,w,c
  2801  0003B8  6E15               	movwf	ee_write@data,c
  2802  0003BA  501B               	movf	write_defaults@page,w,c
  2803  0003BC  ECB6  F00A         	call	_ee_write
  2804                           
  2805                           ;setup.c: 110: ee_write(page, (uint8_t)(addr + 1), (PORT4 & 0x00FF));
  2806  0003C0  2819               	incf	write_defaults@addr,w,c
  2807  0003C2  6E14               	movwf	ee_write@addr,c
  2808  0003C4  0E45               	movlw	low _PORT4
  2809  0003C6  6EF6               	movwf	tblptrl,c
  2810  0003C8                     	if	1	;There is more than 1 active tblptr byte
  2811  0003C8  0EFF               	movlw	high _PORT4
  2812  0003CA  6EF7               	movwf	tblptrh,c
  2813  0003CC                     	endif
  2814  0003CC                     	if	1	;There are 3 active tblptr bytes
  2815  0003CC  0E00               	movlw	low (_PORT4 shr (0+16))
  2816  0003CE  6EF8               	movwf	tblptru,c
  2817  0003D0                     	endif
  2818  0003D0  0008               	tblrd		*
  2819  0003D2  CFF5 F015          	movff	tablat,ee_write@data
  2820  0003D6  501B               	movf	write_defaults@page,w,c
  2821  0003D8  ECB6  F00A         	call	_ee_write
  2822                           
  2823                           ;setup.c: 113: page = 0x00;
  2824  0003DC  0E00               	movlw	0
  2825  0003DE  6E1B               	movwf	write_defaults@page,c
  2826                           
  2827                           ;setup.c: 114: addr = 0xC0;
  2828  0003E0  0EC0               	movlw	192
  2829  0003E2  6E19               	movwf	write_defaults@addr,c
  2830                           
  2831                           ;setup.c: 115: temp = 0x00;
  2832  0003E4  0E00               	movlw	0
  2833  0003E6  6E1A               	movwf	write_defaults@temp,c
  2834                           
  2835                           ;setup.c: 116: i = 0;
  2836  0003E8  0E00               	movlw	0
  2837  0003EA  6E1C               	movwf	write_defaults@i,c
  2838                           
  2839                           ;setup.c: 117: while (temp != '#')
  2840  0003EC  D017               	goto	l1016
  2841  0003EE                     
  2842                           ;setup.c: 118: {
  2843                           ;setup.c: 119: temp = ACCESS_CODE[i];
  2844  0003EE  501C               	movf	write_defaults@i,w,c
  2845  0003F0  0D01               	mullw	1
  2846  0003F2  0E37               	movlw	low _ACCESS_CODE
  2847  0003F4  24F3               	addwf	prodl,w,c
  2848  0003F6  6EF6               	movwf	tblptrl,c
  2849  0003F8  0EFF               	movlw	high _ACCESS_CODE
  2850  0003FA  20F4               	addwfc	prodh,w,c
  2851  0003FC  6EF7               	movwf	tblptrh,c
  2852  0003FE                     	if	1	;There are 3 active tblptr bytes
  2853  0003FE  6AF8               	clrf	tblptru,c
  2854  000400  0E00               	movlw	low (__mediumconst shr (0+16))
  2855  000402  22F8               	addwfc	tblptru,f,c
  2856  000404                     	endif
  2857  000404  0008               	tblrd		*
  2858  000406  CFF5 F01A          	movff	tablat,write_defaults@temp
  2859                           
  2860                           ;setup.c: 120: ee_write(page, (uint8_t)(addr + i), temp);
  2861  00040A  5019               	movf	write_defaults@addr,w,c
  2862  00040C  241C               	addwf	write_defaults@i,w,c
  2863  00040E  6E14               	movwf	ee_write@addr,c
  2864  000410  C01A  F015         	movff	write_defaults@temp,ee_write@data
  2865  000414  501B               	movf	write_defaults@page,w,c
  2866  000416  ECB6  F00A         	call	_ee_write
  2867                           
  2868                           ;setup.c: 121: i ++;
  2869  00041A  2A1C               	incf	write_defaults@i,f,c
  2870  00041C                     l1016:
  2871  00041C  0E23               	movlw	35
  2872  00041E  181A               	xorwf	write_defaults@temp,w,c
  2873  000420  A4D8               	btfss	status,2,c
  2874  000422  D7E5               	goto	l1017
  2875                           
  2876                           ;setup.c: 122: }
  2877                           ;setup.c: 125: ee_write(0x00, 0xC7, PROGRAM_ACK);
  2878  000424  0EC7               	movlw	199
  2879  000426  6E14               	movwf	ee_write@addr,c
  2880  000428  0E60               	movlw	low _PROGRAM_ACK
  2881  00042A  6EF6               	movwf	tblptrl,c
  2882  00042C                     	if	1	;There is more than 1 active tblptr byte
  2883  00042C  0EFF               	movlw	high _PROGRAM_ACK
  2884  00042E  6EF7               	movwf	tblptrh,c
  2885  000430                     	endif
  2886  000430                     	if	1	;There are 3 active tblptr bytes
  2887  000430  0E00               	movlw	low (_PROGRAM_ACK shr (0+16))
  2888  000432  6EF8               	movwf	tblptru,c
  2889  000434                     	endif
  2890  000434  0008               	tblrd		*
  2891  000436  CFF5 F015          	movff	tablat,ee_write@data
  2892  00043A  0E00               	movlw	0
  2893  00043C  ECB6  F00A         	call	_ee_write
  2894                           
  2895                           ;setup.c: 127: ee_write(0x00, 0xC8, TEST_FREQ);
  2896  000440  0EC8               	movlw	200
  2897  000442  6E14               	movwf	ee_write@addr,c
  2898  000444  0E5F               	movlw	low _TEST_FREQ
  2899  000446  6EF6               	movwf	tblptrl,c
  2900  000448                     	if	1	;There is more than 1 active tblptr byte
  2901  000448  0EFF               	movlw	high _TEST_FREQ
  2902  00044A  6EF7               	movwf	tblptrh,c
  2903  00044C                     	endif
  2904  00044C                     	if	1	;There are 3 active tblptr bytes
  2905  00044C  0E00               	movlw	low (_TEST_FREQ shr (0+16))
  2906  00044E  6EF8               	movwf	tblptru,c
  2907  000450                     	endif
  2908  000450  0008               	tblrd		*
  2909  000452  CFF5 F015          	movff	tablat,ee_write@data
  2910  000456  0E00               	movlw	0
  2911  000458  ECB6  F00A         	call	_ee_write
  2912                           
  2913                           ;setup.c: 129: ee_write(0x00, 0xC9, SERVER_ACK_TIME);
  2914  00045C  0EC9               	movlw	201
  2915  00045E  6E14               	movwf	ee_write@addr,c
  2916  000460  0E5E               	movlw	low _SERVER_ACK_TIME
  2917  000462  6EF6               	movwf	tblptrl,c
  2918  000464                     	if	1	;There is more than 1 active tblptr byte
  2919  000464  0EFF               	movlw	high _SERVER_ACK_TIME
  2920  000466  6EF7               	movwf	tblptrh,c
  2921  000468                     	endif
  2922  000468                     	if	1	;There are 3 active tblptr bytes
  2923  000468  0E00               	movlw	low (_SERVER_ACK_TIME shr (0+16))
  2924  00046A  6EF8               	movwf	tblptru,c
  2925  00046C                     	endif
  2926  00046C  0008               	tblrd		*
  2927  00046E  CFF5 F015          	movff	tablat,ee_write@data
  2928  000472  0E00               	movlw	0
  2929  000474  ECB6  F00A         	call	_ee_write
  2930                           
  2931                           ;setup.c: 131: ee_write(0x00, 0xB8, SMS_WAIT_TIME);
  2932  000478  0EB8               	movlw	184
  2933  00047A  6E14               	movwf	ee_write@addr,c
  2934  00047C  0E58               	movlw	low _SMS_WAIT_TIME
  2935  00047E  6EF6               	movwf	tblptrl,c
  2936  000480                     	if	1	;There is more than 1 active tblptr byte
  2937  000480  0EFF               	movlw	high _SMS_WAIT_TIME
  2938  000482  6EF7               	movwf	tblptrh,c
  2939  000484                     	endif
  2940  000484                     	if	1	;There are 3 active tblptr bytes
  2941  000484  0E00               	movlw	low (_SMS_WAIT_TIME shr (0+16))
  2942  000486  6EF8               	movwf	tblptru,c
  2943  000488                     	endif
  2944  000488  0008               	tblrd		*
  2945  00048A  CFF5 F015          	movff	tablat,ee_write@data
  2946  00048E  0E00               	movlw	0
  2947  000490  ECB6  F00A         	call	_ee_write
  2948                           
  2949                           ;setup.c: 133: page = 0x00;
  2950  000494  0E00               	movlw	0
  2951  000496  6E1B               	movwf	write_defaults@page,c
  2952                           
  2953                           ;setup.c: 134: addr = 0xCA;
  2954  000498  0ECA               	movlw	202
  2955  00049A  6E19               	movwf	write_defaults@addr,c
  2956                           
  2957                           ;setup.c: 135: temp = 0x00;
  2958  00049C  0E00               	movlw	0
  2959  00049E  6E1A               	movwf	write_defaults@temp,c
  2960                           
  2961                           ;setup.c: 136: i = 0;
  2962  0004A0  0E00               	movlw	0
  2963  0004A2  6E1C               	movwf	write_defaults@i,c
  2964                           
  2965                           ;setup.c: 137: while (temp != '#')
  2966  0004A4  D017               	goto	l1019
  2967  0004A6                     
  2968                           ;setup.c: 138: {
  2969                           ;setup.c: 139: temp = UNIT_ACCT[i];
  2970  0004A6  501C               	movf	write_defaults@i,w,c
  2971  0004A8  0D01               	mullw	1
  2972  0004AA  0E31               	movlw	low _UNIT_ACCT
  2973  0004AC  24F3               	addwf	prodl,w,c
  2974  0004AE  6EF6               	movwf	tblptrl,c
  2975  0004B0  0EFF               	movlw	high _UNIT_ACCT
  2976  0004B2  20F4               	addwfc	prodh,w,c
  2977  0004B4  6EF7               	movwf	tblptrh,c
  2978  0004B6                     	if	1	;There are 3 active tblptr bytes
  2979  0004B6  6AF8               	clrf	tblptru,c
  2980  0004B8  0E00               	movlw	low (__mediumconst shr (0+16))
  2981  0004BA  22F8               	addwfc	tblptru,f,c
  2982  0004BC                     	endif
  2983  0004BC  0008               	tblrd		*
  2984  0004BE  CFF5 F01A          	movff	tablat,write_defaults@temp
  2985                           
  2986                           ;setup.c: 140: ee_write(page, (uint8_t)(addr + i), temp);
  2987  0004C2  5019               	movf	write_defaults@addr,w,c
  2988  0004C4  241C               	addwf	write_defaults@i,w,c
  2989  0004C6  6E14               	movwf	ee_write@addr,c
  2990  0004C8  C01A  F015         	movff	write_defaults@temp,ee_write@data
  2991  0004CC  501B               	movf	write_defaults@page,w,c
  2992  0004CE  ECB6  F00A         	call	_ee_write
  2993                           
  2994                           ;setup.c: 141: i ++;
  2995  0004D2  2A1C               	incf	write_defaults@i,f,c
  2996  0004D4                     l1019:
  2997  0004D4  0E23               	movlw	35
  2998  0004D6  181A               	xorwf	write_defaults@temp,w,c
  2999  0004D8  A4D8               	btfss	status,2,c
  3000  0004DA  D7E5               	goto	l1020
  3001                           
  3002                           ;setup.c: 142: }
  3003                           ;setup.c: 144: page = 0x00;
  3004  0004DC  0E00               	movlw	0
  3005  0004DE  6E1B               	movwf	write_defaults@page,c
  3006                           
  3007                           ;setup.c: 145: addr = 0xD0;
  3008  0004E0  0ED0               	movlw	208
  3009  0004E2  6E19               	movwf	write_defaults@addr,c
  3010                           
  3011                           ;setup.c: 146: temp = 0x00;
  3012  0004E4  0E00               	movlw	0
  3013  0004E6  6E1A               	movwf	write_defaults@temp,c
  3014                           
  3015                           ;setup.c: 147: i = 0;
  3016  0004E8  0E00               	movlw	0
  3017  0004EA  6E1C               	movwf	write_defaults@i,c
  3018                           
  3019                           ;setup.c: 148: while (temp != '#')
  3020  0004EC  D017               	goto	l1022
  3021  0004EE                     
  3022                           ;setup.c: 149: {
  3023                           ;setup.c: 150: temp = LINE_CARD[i];
  3024  0004EE  501C               	movf	write_defaults@i,w,c
  3025  0004F0  0D01               	mullw	1
  3026  0004F2  0E42               	movlw	low _LINE_CARD
  3027  0004F4  24F3               	addwf	prodl,w,c
  3028  0004F6  6EF6               	movwf	tblptrl,c
  3029  0004F8  0EFF               	movlw	high _LINE_CARD
  3030  0004FA  20F4               	addwfc	prodh,w,c
  3031  0004FC  6EF7               	movwf	tblptrh,c
  3032  0004FE                     	if	1	;There are 3 active tblptr bytes
  3033  0004FE  6AF8               	clrf	tblptru,c
  3034  000500  0E00               	movlw	low (__mediumconst shr (0+16))
  3035  000502  22F8               	addwfc	tblptru,f,c
  3036  000504                     	endif
  3037  000504  0008               	tblrd		*
  3038  000506  CFF5 F01A          	movff	tablat,write_defaults@temp
  3039                           
  3040                           ;setup.c: 151: ee_write(page, (uint8_t)(addr + i), temp);
  3041  00050A  5019               	movf	write_defaults@addr,w,c
  3042  00050C  241C               	addwf	write_defaults@i,w,c
  3043  00050E  6E14               	movwf	ee_write@addr,c
  3044  000510  C01A  F015         	movff	write_defaults@temp,ee_write@data
  3045  000514  501B               	movf	write_defaults@page,w,c
  3046  000516  ECB6  F00A         	call	_ee_write
  3047                           
  3048                           ;setup.c: 152: i ++;
  3049  00051A  2A1C               	incf	write_defaults@i,f,c
  3050  00051C                     l1022:
  3051  00051C  0E23               	movlw	35
  3052  00051E  181A               	xorwf	write_defaults@temp,w,c
  3053  000520  A4D8               	btfss	status,2,c
  3054  000522  D7E5               	goto	l1023
  3055                           
  3056                           ;setup.c: 153: }
  3057                           ;setup.c: 155: ee_write(0, 0xB9, ZONE1);
  3058  000524  0EB9               	movlw	185
  3059  000526  6E14               	movwf	ee_write@addr,c
  3060  000528  0E5D               	movlw	low _ZONE1
  3061  00052A  6EF6               	movwf	tblptrl,c
  3062  00052C                     	if	1	;There is more than 1 active tblptr byte
  3063  00052C  0EFF               	movlw	high _ZONE1
  3064  00052E  6EF7               	movwf	tblptrh,c
  3065  000530                     	endif
  3066  000530                     	if	1	;There are 3 active tblptr bytes
  3067  000530  0E00               	movlw	low (_ZONE1 shr (0+16))
  3068  000532  6EF8               	movwf	tblptru,c
  3069  000534                     	endif
  3070  000534  0008               	tblrd		*
  3071  000536  CFF5 F015          	movff	tablat,ee_write@data
  3072  00053A  0E00               	movlw	0
  3073  00053C  ECB6  F00A         	call	_ee_write
  3074                           
  3075                           ;setup.c: 156: ee_write(0, 0xBA, ZONE2);
  3076  000540  0EBA               	movlw	186
  3077  000542  6E14               	movwf	ee_write@addr,c
  3078  000544  0E5C               	movlw	low _ZONE2
  3079  000546  6EF6               	movwf	tblptrl,c
  3080  000548                     	if	1	;There is more than 1 active tblptr byte
  3081  000548  0EFF               	movlw	high _ZONE2
  3082  00054A  6EF7               	movwf	tblptrh,c
  3083  00054C                     	endif
  3084  00054C                     	if	1	;There are 3 active tblptr bytes
  3085  00054C  0E00               	movlw	low (_ZONE2 shr (0+16))
  3086  00054E  6EF8               	movwf	tblptru,c
  3087  000550                     	endif
  3088  000550  0008               	tblrd		*
  3089  000552  CFF5 F015          	movff	tablat,ee_write@data
  3090  000556  0E00               	movlw	0
  3091  000558  ECB6  F00A         	call	_ee_write
  3092                           
  3093                           ;setup.c: 157: ee_write(0, 0xBB, TP_PIN);
  3094  00055C  0EBB               	movlw	187
  3095  00055E  6E14               	movwf	ee_write@addr,c
  3096  000560  0E5B               	movlw	low _TP_PIN
  3097  000562  6EF6               	movwf	tblptrl,c
  3098  000564                     	if	1	;There is more than 1 active tblptr byte
  3099  000564  0EFF               	movlw	high _TP_PIN
  3100  000566  6EF7               	movwf	tblptrh,c
  3101  000568                     	endif
  3102  000568                     	if	1	;There are 3 active tblptr bytes
  3103  000568  0E00               	movlw	low (_TP_PIN shr (0+16))
  3104  00056A  6EF8               	movwf	tblptru,c
  3105  00056C                     	endif
  3106  00056C  0008               	tblrd		*
  3107  00056E  CFF5 F015          	movff	tablat,ee_write@data
  3108  000572  0E00               	movlw	0
  3109  000574  ECB6  F00A         	call	_ee_write
  3110                           
  3111                           ;setup.c: 158: ee_write(0, 0xBC, CYCLE);
  3112  000578  0EBC               	movlw	188
  3113  00057A  6E14               	movwf	ee_write@addr,c
  3114  00057C  0E5A               	movlw	low _CYCLE
  3115  00057E  6EF6               	movwf	tblptrl,c
  3116  000580                     	if	1	;There is more than 1 active tblptr byte
  3117  000580  0EFF               	movlw	high _CYCLE
  3118  000582  6EF7               	movwf	tblptrh,c
  3119  000584                     	endif
  3120  000584                     	if	1	;There are 3 active tblptr bytes
  3121  000584  0E00               	movlw	low (_CYCLE shr (0+16))
  3122  000586  6EF8               	movwf	tblptru,c
  3123  000588                     	endif
  3124  000588  0008               	tblrd		*
  3125  00058A  CFF5 F015          	movff	tablat,ee_write@data
  3126  00058E  0E00               	movlw	0
  3127  000590  ECB6  F00A         	call	_ee_write
  3128                           
  3129                           ;setup.c: 159: ee_write(0, 0xBD, RETRY);
  3130  000594  0EBD               	movlw	189
  3131  000596  6E14               	movwf	ee_write@addr,c
  3132  000598  0E59               	movlw	low _RETRY
  3133  00059A  6EF6               	movwf	tblptrl,c
  3134  00059C                     	if	1	;There is more than 1 active tblptr byte
  3135  00059C  0EFF               	movlw	high _RETRY
  3136  00059E  6EF7               	movwf	tblptrh,c
  3137  0005A0                     	endif
  3138  0005A0                     	if	1	;There are 3 active tblptr bytes
  3139  0005A0  0E00               	movlw	low (_RETRY shr (0+16))
  3140  0005A2  6EF8               	movwf	tblptru,c
  3141  0005A4                     	endif
  3142  0005A4  0008               	tblrd		*
  3143  0005A6  CFF5 F015          	movff	tablat,ee_write@data
  3144  0005AA  0E00               	movlw	0
  3145  0005AC  ECB6  F00A         	call	_ee_write
  3146                           
  3147                           ;setup.c: 161: ee_write(0, 0xE0,ENCRYPTION);
  3148  0005B0  0EE0               	movlw	224
  3149  0005B2  6E14               	movwf	ee_write@addr,c
  3150  0005B4  0E57               	movlw	low _ENCRYPTION
  3151  0005B6  6EF6               	movwf	tblptrl,c
  3152  0005B8                     	if	1	;There is more than 1 active tblptr byte
  3153  0005B8  0EFF               	movlw	high _ENCRYPTION
  3154  0005BA  6EF7               	movwf	tblptrh,c
  3155  0005BC                     	endif
  3156  0005BC                     	if	1	;There are 3 active tblptr bytes
  3157  0005BC  0E00               	movlw	low (_ENCRYPTION shr (0+16))
  3158  0005BE  6EF8               	movwf	tblptru,c
  3159  0005C0                     	endif
  3160  0005C0  0008               	tblrd		*
  3161  0005C2  CFF5 F015          	movff	tablat,ee_write@data
  3162  0005C6  0E00               	movlw	0
  3163  0005C8  ECB6  F00A         	call	_ee_write
  3164                           
  3165                           ;setup.c: 163: ee_write(0, 0x0F, 0x00);
  3166  0005CC  0E0F               	movlw	15
  3167  0005CE  6E14               	movwf	ee_write@addr,c
  3168  0005D0  0E00               	movlw	0
  3169  0005D2  6E15               	movwf	ee_write@data,c
  3170  0005D4  0E00               	movlw	0
  3171  0005D6  ECB6  F00A         	call	_ee_write
  3172                           
  3173                           ;setup.c: 165: ee_write(0, 0x00, VERSION[0]);
  3174  0005DA  0E00               	movlw	0
  3175  0005DC  6E14               	movwf	ee_write@addr,c
  3176  0005DE  0E3D               	movlw	low _VERSION
  3177  0005E0  6EF6               	movwf	tblptrl,c
  3178  0005E2                     	if	1	;There is more than 1 active tblptr byte
  3179  0005E2  0EFF               	movlw	high _VERSION
  3180  0005E4  6EF7               	movwf	tblptrh,c
  3181  0005E6                     	endif
  3182  0005E6                     	if	1	;There are 3 active tblptr bytes
  3183  0005E6  0E00               	movlw	low (_VERSION shr (0+16))
  3184  0005E8  6EF8               	movwf	tblptru,c
  3185  0005EA                     	endif
  3186  0005EA  0008               	tblrd		*
  3187  0005EC  CFF5 F015          	movff	tablat,ee_write@data
  3188  0005F0  0E00               	movlw	0
  3189  0005F2  ECB6  F00A         	call	_ee_write
  3190                           
  3191                           ;setup.c: 166: ee_write(0, 0x01, VERSION[1]);
  3192  0005F6  0E01               	movlw	1
  3193  0005F8  6E14               	movwf	ee_write@addr,c
  3194  0005FA  0E3E               	movlw	low (_VERSION+1)
  3195  0005FC  6EF6               	movwf	tblptrl,c
  3196  0005FE  0EFF               	movlw	high (_VERSION+1)
  3197  000600  6EF7               	movwf	tblptrh,c
  3198  000602                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3199  000602  6AF8               	clrf	tblptru,c
  3200  000604                     	endif
  3201  000604                     	if	0	;tblptru may be non-zero
  3202  000604                     	endif
  3203  000604  0008               	tblrd		*
  3204  000606  CFF5 F015          	movff	tablat,ee_write@data
  3205  00060A  0E00               	movlw	0
  3206  00060C  ECB6  F00A         	call	_ee_write
  3207                           
  3208                           ;setup.c: 167: ee_write(0, 0x02, VERSION[2]);
  3209  000610  0E02               	movlw	2
  3210  000612  6E14               	movwf	ee_write@addr,c
  3211  000614  0E3F               	movlw	low (_VERSION+2)
  3212  000616  6EF6               	movwf	tblptrl,c
  3213  000618  0EFF               	movlw	high (_VERSION+2)
  3214  00061A  6EF7               	movwf	tblptrh,c
  3215  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3216  00061C  6AF8               	clrf	tblptru,c
  3217  00061E                     	endif
  3218  00061E                     	if	0	;tblptru may be non-zero
  3219  00061E                     	endif
  3220  00061E  0008               	tblrd		*
  3221  000620  CFF5 F015          	movff	tablat,ee_write@data
  3222  000624  0E00               	movlw	0
  3223  000626  ECB6  F00A         	call	_ee_write
  3224                           
  3225                           ;setup.c: 169: ee_write(page, 0xF0, 0x57);
  3226  00062A  0EF0               	movlw	240
  3227  00062C  6E14               	movwf	ee_write@addr,c
  3228  00062E  0E57               	movlw	87
  3229  000630  6E15               	movwf	ee_write@data,c
  3230  000632  501B               	movf	write_defaults@page,w,c
  3231  000634  ECB6  F00A         	call	_ee_write
  3232  000638  0012               	return		;funcret
  3233  00063A                     __end_of_write_defaults:
  3234                           	opt stack 0
  3235                           tblptru	equ	0xFF8
  3236                           tblptrh	equ	0xFF7
  3237                           tblptrl	equ	0xFF6
  3238                           tablat	equ	0xFF5
  3239                           prodh	equ	0xFF4
  3240                           prodl	equ	0xFF3
  3241                           intcon	equ	0xFF2
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           postdec1	equ	0xFE5
  3245                           fsr1l	equ	0xFE1
  3246                           indf2	equ	0xFDF
  3247                           postinc2	equ	0xFDE
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _sim_card_ok *****************
  3253 ;; Defined at:
  3254 ;;		line 134 in file "module.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  j               1   59[BANK0 ] unsigned char 
  3259 ;;  buf            32    0[BANK0 ] unsigned char [32]
  3260 ;;  cpinResponse   13   32[BANK0 ] const unsigned char [13]
  3261 ;;  cpin           11   45[BANK0 ] const unsigned char [11]
  3262 ;;  i               1   60[BANK0 ] unsigned char 
  3263 ;;  temp            1   58[BANK0 ] unsigned char 
  3264 ;;  matches         1   57[BANK0 ] unsigned char 
  3265 ;;  count           1   56[BANK0 ] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         0      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:         1      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:       62 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    5
  3282 ;; This function calls:
  3283 ;;		_delay5ms
  3284 ;;		_md_uart_write_str_ok
  3285 ;;		_setup_timer3
  3286 ;;		_str_matches
  3287 ;; This function is called by:
  3288 ;;		_md_io_setup_ok
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text5
  3293  000C8A                     __ptext5:
  3294                           	opt stack 0
  3295  000C8A                     _sim_card_ok:
  3296                           	opt stack 23
  3297                           
  3298                           ;module.c: 136: const unsigned char cpin[] = "AT+CPIN?\r\n";
  3299                           
  3300                           ;incstack = 0
  3301  000C8A  0EBD               	movlw	low sim_card_ok@F6791
  3302  000C8C  6EF6               	movwf	tblptrl,c
  3303  000C8E                     	if	1	;There is more than 1 active tblptr byte
  3304  000C8E  0EFE               	movlw	high sim_card_ok@F6791
  3305  000C90  6EF7               	movwf	tblptrh,c
  3306  000C92                     	endif
  3307  000C92                     	if	1	;There are 3 active tblptr bytes
  3308  000C92  0E00               	movlw	low (sim_card_ok@F6791 shr (0+16))
  3309  000C94  6EF8               	movwf	tblptru,c
  3310  000C96                     	endif
  3311  000C96  EE20  F08D         	lfsr	2,sim_card_ok@cpin
  3312  000C9A  0E0A               	movlw	10
  3313  000C9C                     u3850:
  3314  000C9C  0009               	tblrd		*+
  3315  000C9E  CFF5 FFDE          	movff	tablat,postinc2
  3316  000CA2  06E8               	decf	wreg,f,c
  3317  000CA4  E2FB               	bc	u3850
  3318                           
  3319                           ;module.c: 137: const unsigned char cpinResponse[] = "+CPIN: READY";
  3320  000CA6  0E7F               	movlw	low sim_card_ok@F6793
  3321  000CA8  6EF6               	movwf	tblptrl,c
  3322  000CAA                     	if	1	;There is more than 1 active tblptr byte
  3323  000CAA  0EFE               	movlw	high sim_card_ok@F6793
  3324  000CAC  6EF7               	movwf	tblptrh,c
  3325  000CAE                     	endif
  3326  000CAE                     	if	1	;There are 3 active tblptr bytes
  3327  000CAE  0E00               	movlw	low (sim_card_ok@F6793 shr (0+16))
  3328  000CB0  6EF8               	movwf	tblptru,c
  3329  000CB2                     	endif
  3330  000CB2  EE20  F080         	lfsr	2,sim_card_ok@cpinResponse
  3331  000CB6  0E0C               	movlw	12
  3332  000CB8                     u3860:
  3333  000CB8  0009               	tblrd		*+
  3334  000CBA  CFF5 FFDE          	movff	tablat,postinc2
  3335  000CBE  06E8               	decf	wreg,f,c
  3336  000CC0  E2FB               	bc	u3860
  3337                           
  3338                           ;module.c: 138: uint8_t buf[32], temp, i, count = 15;
  3339  000CC2  0E0F               	movlw	15
  3340  000CC4  0100               	movlb	0	; () banked
  3341  000CC6  6F98               	movwf	sim_card_ok@count& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;module.c: 139: bool matches = 0;
  3345  000CC8  0E00               	movlw	0
  3346  000CCA  6F99               	movwf	sim_card_ok@matches& (0+255),b
  3347                           
  3348                           ;module.c: 143: while (count-- != 0)
  3349  000CCC  D05F               	goto	l859
  3350  000CCE                     
  3351                           ; BSR set to: 0
  3352                           ;module.c: 144: {
  3353                           ;module.c: 145: if (!md_uart_write_str_ok((unsigned char *)&cpin[0], sizeof(cpin), 0))
  3354                           
  3355                           ; BSR set to: 0
  3356  000CCE  0E8D               	movlw	low sim_card_ok@cpin
  3357  000CD0  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  3358  000CD2  0E00               	movlw	high sim_card_ok@cpin
  3359  000CD4  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  3360  000CD6  0E0B               	movlw	11
  3361  000CD8  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  3362  000CDA  0E00               	movlw	0
  3363  000CDC  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  3364  000CDE  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  3365  000CE2  0900               	iorlw	0
  3366  000CE4  A4D8               	btfss	status,2,c
  3367  000CE6  D002               	goto	l861
  3368                           
  3369                           ;module.c: 146: return 0;
  3370  000CE8  0E00               	movlw	0
  3371  000CEA  0012               	return	
  3372  000CEC                     l861:
  3373                           
  3374                           ;module.c: 147: RCIE = 0;
  3375  000CEC  9A9D               	bcf	3997,5,c	;volatile
  3376                           
  3377                           ;module.c: 148: CREN1 = 1;
  3378  000CEE  88AB               	bsf	4011,4,c	;volatile
  3379                           
  3380                           ;module.c: 149: setup_timer3();
  3381  000CF0  EC2F  F00B         	call	_setup_timer3	;wreg free
  3382                           
  3383                           ;module.c: 151: while (!TMR3IF)
  3384  000CF4  D043               	goto	l867
  3385  000CF6                     l864:
  3386                           
  3387                           ;module.c: 152: {
  3388                           ;module.c: 153: if (RC1IF)
  3389  000CF6  AA9E               	btfss	3998,5,c	;volatile
  3390  000CF8  D041               	goto	l867
  3391                           
  3392                           ;module.c: 154: {
  3393                           ;module.c: 155: temp = RC1REG;
  3394  000CFA  CFAE F09A          	movff	4014,sim_card_ok@temp	;volatile
  3395                           
  3396                           ;module.c: 156: buf[i++] = temp;
  3397  000CFE  0100               	movlb	0	; () banked
  3398  000D00  519C               	movf	sim_card_ok@i& (0+255),w,b
  3399  000D02  0D01               	mullw	1
  3400  000D04  0E60               	movlw	low sim_card_ok@buf
  3401  000D06  24F3               	addwf	prodl,w,c
  3402  000D08  6ED9               	movwf	fsr2l,c
  3403  000D0A  0E00               	movlw	high sim_card_ok@buf
  3404  000D0C  20F4               	addwfc	prodh,w,c
  3405  000D0E  6EDA               	movwf	fsr2h,c
  3406  000D10  C09A  FFDF         	movff	sim_card_ok@temp,indf2
  3407                           
  3408                           ; BSR set to: 0
  3409  000D14  2B9C               	incf	sim_card_ok@i& (0+255),f,b
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;module.c: 157: if (i >= 32)
  3413  000D16  0E1F               	movlw	31
  3414  000D18  659C               	cpfsgt	sim_card_ok@i& (0+255),b
  3415  000D1A  D002               	goto	l866
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;module.c: 158: i = 31;
  3419  000D1C  0E1F               	movlw	31
  3420  000D1E  6F9C               	movwf	sim_card_ok@i& (0+255),b
  3421  000D20                     l866:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;module.c: 159: if (temp == 'Y')
  3425                           
  3426                           ; BSR set to: 0
  3427  000D20  0E59               	movlw	89
  3428  000D22  199A               	xorwf	sim_card_ok@temp& (0+255),w,b
  3429  000D24  A4D8               	btfss	status,2,c
  3430  000D26  D02A               	goto	l867
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;module.c: 160: {
  3434                           ;module.c: 161: matches = str_matches((uint8_t *)&buf[(uint8_t)(i-12)], (uint8_t *)&cpin
      +                          Response[0], sizeof(cpinResponse));
  3435  000D28  C09C  F023         	movff	sim_card_ok@i,??_sim_card_ok
  3436  000D2C  0EF4               	movlw	244
  3437  000D2E  2623               	addwf	??_sim_card_ok,f,c
  3438  000D30  5023               	movf	??_sim_card_ok,w,c
  3439  000D32  0D01               	mullw	1
  3440  000D34  0E60               	movlw	low sim_card_ok@buf
  3441  000D36  24F3               	addwf	prodl,w,c
  3442  000D38  6E14               	movwf	str_matches@raw,c
  3443  000D3A  0E00               	movlw	high sim_card_ok@buf
  3444  000D3C  20F4               	addwfc	prodh,w,c
  3445  000D3E  6E15               	movwf	str_matches@raw+1,c
  3446  000D40  0E80               	movlw	low sim_card_ok@cpinResponse
  3447  000D42  6E16               	movwf	str_matches@expected,c
  3448  000D44  0E00               	movlw	high sim_card_ok@cpinResponse
  3449  000D46  6E17               	movwf	str_matches@expected+1,c
  3450  000D48  0E0D               	movlw	13
  3451  000D4A  6E18               	movwf	str_matches@len,c
  3452  000D4C  EC61  F00A         	call	_str_matches	;wreg free
  3453  000D50  0100               	movlb	0	; () banked
  3454  000D52  6F99               	movwf	sim_card_ok@matches& (0+255),b
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;module.c: 162: if (matches)
  3458  000D54  5199               	movf	sim_card_ok@matches& (0+255),w,b
  3459  000D56  B4D8               	btfsc	status,2,c
  3460  000D58  D00F               	goto	l868
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;module.c: 163: {
  3464                           ;module.c: 164: for (uint8_t j = 0; j < 5; j ++)
  3465  000D5A  0E00               	movlw	0
  3466  000D5C  6F9B               	movwf	sim_card_ok@j& (0+255),b
  3467  000D5E                     l4127:
  3468                           
  3469                           ; BSR set to: 0
  3470  000D5E  0E04               	movlw	4
  3471  000D60  659B               	cpfsgt	sim_card_ok@j& (0+255),b
  3472  000D62  D001               	goto	l869
  3473  000D64  D004               	goto	u3930
  3474  000D66                     l869:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;module.c: 165: temp = RC1REG;
  3478  000D66  CFAE F09A          	movff	4014,sim_card_ok@temp	;volatile
  3479                           
  3480                           ; BSR set to: 0
  3481  000D6A  2B9B               	incf	sim_card_ok@j& (0+255),f,b
  3482  000D6C  D7F8               	goto	l4127
  3483  000D6E                     u3930:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;module.c: 166: RC1REG = 1;
  3487                           
  3488                           ; BSR set to: 0
  3489  000D6E  0E01               	movlw	1
  3490  000D70  6EAE               	movwf	4014,c	;volatile
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;module.c: 167: TMR3ON = 0;
  3494  000D72  90B1               	bcf	4017,0,c	;volatile
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;module.c: 168: return 1;
  3498  000D74  0E01               	movlw	1
  3499                           
  3500                           ; BSR set to: 0
  3501  000D76  0012               	return	
  3502  000D78                     l868:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;module.c: 169: }
  3506                           ;module.c: 170: i = 0;
  3507                           
  3508                           ; BSR set to: 0
  3509  000D78  0E00               	movlw	0
  3510  000D7A  6F9C               	movwf	sim_card_ok@i& (0+255),b
  3511  000D7C                     l867:
  3512                           
  3513                           ; BSR set to: 0
  3514                           
  3515                           ; BSR set to: 0
  3516                           
  3517                           ; BSR set to: 0
  3518  000D7C  A2A1               	btfss	4001,1,c	;volatile
  3519  000D7E  D7BB               	goto	l864
  3520                           
  3521                           ;module.c: 171: }
  3522                           ;module.c: 172: }
  3523                           ;module.c: 173: }
  3524                           ;module.c: 174: delay5ms(20);
  3525  000D80  0E00               	movlw	0
  3526  000D82  6E15               	movwf	delay5ms@cnt+1,c
  3527  000D84  0E14               	movlw	20
  3528  000D86  6E14               	movwf	delay5ms@cnt,c
  3529  000D88  ECCE  F00A         	call	_delay5ms	;wreg free
  3530  000D8C                     l859:
  3531  000D8C  0100               	movlb	0	; () banked
  3532  000D8E  0798               	decf	sim_card_ok@count& (0+255),f,b
  3533  000D90  2998               	incf	sim_card_ok@count& (0+255),w,b
  3534  000D92  A4D8               	btfss	status,2,c
  3535  000D94  D79C               	goto	l860
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;module.c: 175: }
  3539                           ;module.c: 176: return 0;
  3540                           
  3541                           ; BSR set to: 0
  3542  000D96  0E00               	movlw	0
  3543  000D98  0012               	return	
  3544  000D9A                     __end_of_sim_card_ok:
  3545                           	opt stack 0
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           intcon	equ	0xFF2
  3553                           postinc0	equ	0xFEE
  3554                           wreg	equ	0xFE8
  3555                           postdec1	equ	0xFE5
  3556                           fsr1l	equ	0xFE1
  3557                           indf2	equ	0xFDF
  3558                           postinc2	equ	0xFDE
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _save_first_run *****************
  3564 ;; Defined at:
  3565 ;;		line 74 in file "module.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    3
  3586 ;; This function calls:
  3587 ;;		_ee_write
  3588 ;; This function is called by:
  3589 ;;		_md_io_setup_ok
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text6
  3594  00164E                     __ptext6:
  3595                           	opt stack 0
  3596  00164E                     _save_first_run:
  3597                           	opt stack 25
  3598                           
  3599                           ;module.c: 76: ee_write(0, 0xF0, 0x57);
  3600                           
  3601                           ;incstack = 0
  3602  00164E  0EF0               	movlw	240
  3603  001650  6E14               	movwf	ee_write@addr,c
  3604  001652  0E57               	movlw	87
  3605  001654  6E15               	movwf	ee_write@data,c
  3606  001656  0E00               	movlw	0
  3607  001658  ECB6  F00A         	call	_ee_write
  3608  00165C  0012               	return		;funcret
  3609  00165E                     __end_of_save_first_run:
  3610                           	opt stack 0
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           prodh	equ	0xFF4
  3616                           prodl	equ	0xFF3
  3617                           intcon	equ	0xFF2
  3618                           postinc0	equ	0xFEE
  3619                           wreg	equ	0xFE8
  3620                           postdec1	equ	0xFE5
  3621                           fsr1l	equ	0xFE1
  3622                           indf2	equ	0xFDF
  3623                           postinc2	equ	0xFDE
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function _ee_write *****************
  3629 ;; Defined at:
  3630 ;;		line 26 in file "eeprom.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  page            1    wreg     unsigned char 
  3633 ;;  addr            1   19[COMRAM] unsigned char 
  3634 ;;  data            1   20[COMRAM] unsigned char 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  page            1   21[COMRAM] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;Total ram usage:        3 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    2
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_save_first_run
  3657 ;;		_write_defaults
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text7
  3662  00156C                     __ptext7:
  3663                           	opt stack 0
  3664  00156C                     _ee_write:
  3665                           	opt stack 25
  3666                           
  3667                           ;incstack = 0
  3668                           ;ee_write@page stored from wreg
  3669  00156C  6E16               	movwf	ee_write@page,c
  3670                           
  3671                           ;eeprom.c: 28: GIE = 0;
  3672  00156E  9EF2               	bcf	intcon,7,c	;volatile
  3673                           
  3674                           ;eeprom.c: 29: EEADRH = page;
  3675  001570  C016  FFAA         	movff	ee_write@page,4010	;volatile
  3676                           
  3677                           ;eeprom.c: 30: EEADR = addr;
  3678  001574  C014  FFA9         	movff	ee_write@addr,4009	;volatile
  3679                           
  3680                           ;eeprom.c: 31: EEDATA = data;
  3681  001578  C015  FFA8         	movff	ee_write@data,4008	;volatile
  3682                           
  3683                           ;eeprom.c: 32: CFGS = 0;
  3684  00157C  9CA6               	bcf	4006,6,c	;volsfr
  3685                           
  3686                           ;eeprom.c: 33: EEPGD = 0;
  3687  00157E  9EA6               	bcf	4006,7,c	;volsfr
  3688                           
  3689                           ;eeprom.c: 34: WREN = 1;
  3690  001580  84A6               	bsf	4006,2,c	;volsfr
  3691                           
  3692                           ;eeprom.c: 35: GIE = 0;
  3693  001582  9EF2               	bcf	intcon,7,c	;volatile
  3694                           
  3695                           ;eeprom.c: 36: EECON2 = 0x55;
  3696  001584  0E55               	movlw	85
  3697  001586  6EA7               	movwf	4007,c	;volsfr
  3698                           
  3699                           ;eeprom.c: 37: EECON2 = 0xAA;
  3700  001588  0EAA               	movlw	170
  3701  00158A  6EA7               	movwf	4007,c	;volsfr
  3702                           
  3703                           ;eeprom.c: 38: WR = 1;
  3704  00158C  82A6               	bsf	4006,1,c	;volsfr
  3705                           
  3706                           ;eeprom.c: 39: GIE = 1;
  3707  00158E  8EF2               	bsf	intcon,7,c	;volatile
  3708                           
  3709                           ;eeprom.c: 40: WREN = 0;
  3710  001590  94A6               	bcf	4006,2,c	;volsfr
  3711  001592  B2A6               	btfsc	4006,1,c	;volsfr
  3712  001594  D7FE               	goto	l914
  3713                           
  3714                           ;eeprom.c: 42: PIR2bits.EEIF = 0;
  3715  001596  98A1               	bcf	4001,4,c	;volatile
  3716                           
  3717                           ;eeprom.c: 43: GIE = 1;
  3718  001598  8EF2               	bsf	intcon,7,c	;volatile
  3719  00159A  0012               	return		;funcret
  3720  00159C                     __end_of_ee_write:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           postdec1	equ	0xFE5
  3732                           fsr1l	equ	0xFE1
  3733                           indf2	equ	0xFDF
  3734                           postinc2	equ	0xFDE
  3735                           fsr2h	equ	0xFDA
  3736                           fsr2l	equ	0xFD9
  3737                           status	equ	0xFD8
  3738                           
  3739 ;; *************** function _is_first_run *****************
  3740 ;; Defined at:
  3741 ;;		line 69 in file "module.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      unsigned char 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    3
  3762 ;; This function calls:
  3763 ;;		_ee_read
  3764 ;; This function is called by:
  3765 ;;		_md_io_setup_ok
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text8
  3770  001620                     __ptext8:
  3771                           	opt stack 0
  3772  001620                     _is_first_run:
  3773                           	opt stack 25
  3774                           
  3775                           ;module.c: 71: return (bool)(ee_read(0, 0xF0) != 0x57);
  3776                           
  3777                           ;incstack = 0
  3778  001620  0EF0               	movlw	240
  3779  001622  6E14               	movwf	ee_read@addr,c
  3780  001624  0E00               	movlw	0
  3781  001626  ECF6  F00A         	call	_ee_read
  3782  00162A  0A57               	xorlw	87
  3783  00162C  B4D8               	btfsc	status,2,c
  3784  00162E  D002               	goto	u3540
  3785  001630  0E01               	movlw	1
  3786  001632  0012               	return	
  3787  001634                     u3540:
  3788  001634  0E00               	movlw	0
  3789  001636  0012               	return	
  3790  001638                     __end_of_is_first_run:
  3791                           	opt stack 0
  3792                           tblptru	equ	0xFF8
  3793                           tblptrh	equ	0xFF7
  3794                           tblptrl	equ	0xFF6
  3795                           tablat	equ	0xFF5
  3796                           prodh	equ	0xFF4
  3797                           prodl	equ	0xFF3
  3798                           intcon	equ	0xFF2
  3799                           postinc0	equ	0xFEE
  3800                           wreg	equ	0xFE8
  3801                           postdec1	equ	0xFE5
  3802                           fsr1l	equ	0xFE1
  3803                           indf2	equ	0xFDF
  3804                           postinc2	equ	0xFDE
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function _init_modem_ok *****************
  3810 ;; Defined at:
  3811 ;;		line 79 in file "module.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  ledCfg         16    0[BANK0 ] const unsigned char [16]
  3816 ;;  ledPattern     12   16[BANK0 ] const unsigned char [12]
  3817 ;;  queryVersion   10   28[BANK0 ] const unsigned char [10]
  3818 ;;  repeat          1   44[BANK0 ] unsigned char 
  3819 ;;  c4              1   43[BANK0 ] unsigned char 
  3820 ;;  c3              1   42[BANK0 ] unsigned char 
  3821 ;;  c2              1   41[BANK0 ] unsigned char 
  3822 ;;  c1              1   40[BANK0 ] unsigned char 
  3823 ;;  c5              1   39[BANK0 ] unsigned char 
  3824 ;;  index           1   38[BANK0 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      unsigned char 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;Total ram usage:       45 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    5
  3841 ;; This function calls:
  3842 ;;		_delay5ms
  3843 ;;		_md_uart_write_str_ok
  3844 ;; This function is called by:
  3845 ;;		_md_io_setup_ok
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text9
  3850  000850                     __ptext9:
  3851                           	opt stack 0
  3852  000850                     _init_modem_ok:
  3853                           	opt stack 23
  3854                           
  3855                           ;module.c: 81: bool c1 = 0, c2 = 0, c3 = 0, c4 = 0, c5 = 0;
  3856                           
  3857                           ;incstack = 0
  3858  000850  0E00               	movlw	0
  3859  000852  0100               	movlb	0	; () banked
  3860  000854  6F88               	movwf	init_modem_ok@c1& (0+255),b
  3861  000856  0E00               	movlw	0
  3862  000858  6F89               	movwf	init_modem_ok@c2& (0+255),b
  3863  00085A  0E00               	movlw	0
  3864  00085C  6F8A               	movwf	init_modem_ok@c3& (0+255),b
  3865  00085E  0E00               	movlw	0
  3866  000860  6F8B               	movwf	init_modem_ok@c4& (0+255),b
  3867  000862  0E00               	movlw	0
  3868  000864  6F87               	movwf	init_modem_ok@c5& (0+255),b
  3869                           
  3870                           ;module.c: 82: uint8_t repeat = 20, index = 0;
  3871  000866  0E14               	movlw	20
  3872  000868  6F8C               	movwf	init_modem_ok@repeat& (0+255),b
  3873  00086A  0E00               	movlw	0
  3874  00086C  6F86               	movwf	init_modem_ok@index& (0+255),b
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;module.c: 86: const uint8_t ledCfg[] = "AT#GPIO=7,0,2\r\n";
  3878  00086E  0E50               	movlw	low init_modem_ok@F6780
  3879  000870  6EF6               	movwf	tblptrl,c
  3880  000872                     	if	1	;There is more than 1 active tblptr byte
  3881  000872  0EFE               	movlw	high init_modem_ok@F6780
  3882  000874  6EF7               	movwf	tblptrh,c
  3883  000876                     	endif
  3884  000876                     	if	1	;There are 3 active tblptr bytes
  3885  000876  0E00               	movlw	low (init_modem_ok@F6780 shr (0+16))
  3886  000878  6EF8               	movwf	tblptru,c
  3887  00087A                     	endif
  3888  00087A  EE20  F060         	lfsr	2,init_modem_ok@ledCfg
  3889  00087E  0E0F               	movlw	15
  3890  000880                     u3560:
  3891  000880  0009               	tblrd		*+
  3892  000882  CFF5 FFDE          	movff	tablat,postinc2
  3893  000886  06E8               	decf	wreg,f,c
  3894  000888  E2FB               	bc	u3560
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;module.c: 88: const uint8_t queryVersion[] = "AT#CGMR\r\n";
  3898  00088A  0EE9               	movlw	low init_modem_ok@F6782
  3899  00088C  6EF6               	movwf	tblptrl,c
  3900  00088E                     	if	1	;There is more than 1 active tblptr byte
  3901  00088E  0EFE               	movlw	high init_modem_ok@F6782
  3902  000890  6EF7               	movwf	tblptrh,c
  3903  000892                     	endif
  3904  000892                     	if	1	;There are 3 active tblptr bytes
  3905  000892  0E00               	movlw	low (init_modem_ok@F6782 shr (0+16))
  3906  000894  6EF8               	movwf	tblptru,c
  3907  000896                     	endif
  3908  000896  EE20  F07C         	lfsr	2,init_modem_ok@queryVersion
  3909  00089A  0E09               	movlw	9
  3910  00089C                     u3570:
  3911  00089C  0009               	tblrd		*+
  3912  00089E  CFF5 FFDE          	movff	tablat,postinc2
  3913  0008A2  06E8               	decf	wreg,f,c
  3914  0008A4  E2FB               	bc	u3570
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;module.c: 89: const uint8_t ledPattern[] = "AT#SLED=4\r\n";
  3918  0008A6  0E99               	movlw	low init_modem_ok@F6784
  3919  0008A8  6EF6               	movwf	tblptrl,c
  3920  0008AA                     	if	1	;There is more than 1 active tblptr byte
  3921  0008AA  0EFE               	movlw	high init_modem_ok@F6784
  3922  0008AC  6EF7               	movwf	tblptrh,c
  3923  0008AE                     	endif
  3924  0008AE                     	if	1	;There are 3 active tblptr bytes
  3925  0008AE  0E00               	movlw	low (init_modem_ok@F6784 shr (0+16))
  3926  0008B0  6EF8               	movwf	tblptru,c
  3927  0008B2                     	endif
  3928  0008B2  EE20  F070         	lfsr	2,init_modem_ok@ledPattern
  3929  0008B6  0E0B               	movlw	11
  3930  0008B8                     u3580:
  3931  0008B8  0009               	tblrd		*+
  3932  0008BA  CFF5 FFDE          	movff	tablat,postinc2
  3933  0008BE  06E8               	decf	wreg,f,c
  3934  0008C0  E2FB               	bc	u3580
  3935                           
  3936                           ;module.c: 91: while (repeat-- > 0 && !c1)
  3937  0008C2  D00C               	goto	l819
  3938  0008C4                     
  3939                           ; BSR set to: 0
  3940                           ;module.c: 92: c1 = md_uart_write_str_ok((unsigned char *)"ATE1\r\n", 6, 1);
  3941                           
  3942                           ; BSR set to: 0
  3943  0008C4  0EF7               	movlw	low STR_8
  3944  0008C6  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  3945  0008C8  0EFF               	movlw	high STR_8
  3946  0008CA  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  3947  0008CC  0E06               	movlw	6
  3948  0008CE  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  3949  0008D0  0E01               	movlw	1
  3950  0008D2  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  3951  0008D4  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  3952  0008D8  0100               	movlb	0	; () banked
  3953  0008DA  6F88               	movwf	init_modem_ok@c1& (0+255),b
  3954  0008DC                     l819:
  3955                           
  3956                           ; BSR set to: 0
  3957                           
  3958                           ; BSR set to: 0
  3959  0008DC  078C               	decf	init_modem_ok@repeat& (0+255),f,b
  3960  0008DE  298C               	incf	init_modem_ok@repeat& (0+255),w,b
  3961  0008E0  B4D8               	btfsc	status,2,c
  3962  0008E2  D003               	goto	u3600
  3963                           
  3964                           ; BSR set to: 0
  3965  0008E4  5188               	movf	init_modem_ok@c1& (0+255),w,b
  3966  0008E6  B4D8               	btfsc	status,2,c
  3967  0008E8  D7ED               	goto	l820
  3968  0008EA                     u3600:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;module.c: 93: repeat = 20;
  3972                           
  3973                           ; BSR set to: 0
  3974                           
  3975                           ; BSR set to: 0
  3976  0008EA  0E14               	movlw	20
  3977  0008EC  6F8C               	movwf	init_modem_ok@repeat& (0+255),b
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;module.c: 94: delay5ms(1);
  3981  0008EE  0E00               	movlw	0
  3982  0008F0  6E15               	movwf	delay5ms@cnt+1,c
  3983  0008F2  0E01               	movlw	1
  3984  0008F4  6E14               	movwf	delay5ms@cnt,c
  3985  0008F6  ECCE  F00A         	call	_delay5ms	;wreg free
  3986                           
  3987                           ;module.c: 95: while (repeat-- > 0 && !c2)
  3988  0008FA  D00C               	goto	l824
  3989  0008FC                     
  3990                           ;module.c: 96: c2 = md_uart_write_str_ok((unsigned char *)"AT+CMEE=2\r\n", 11, 1);
  3991  0008FC  0ECC               	movlw	low STR_9
  3992  0008FE  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  3993  000900  0EFF               	movlw	high STR_9
  3994  000902  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  3995  000904  0E0B               	movlw	11
  3996  000906  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  3997  000908  0E01               	movlw	1
  3998  00090A  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  3999  00090C  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4000  000910  0100               	movlb	0	; () banked
  4001  000912  6F89               	movwf	init_modem_ok@c2& (0+255),b
  4002  000914                     l824:
  4003                           
  4004                           ; BSR set to: 0
  4005  000914  0100               	movlb	0	; () banked
  4006  000916  078C               	decf	init_modem_ok@repeat& (0+255),f,b
  4007  000918  298C               	incf	init_modem_ok@repeat& (0+255),w,b
  4008  00091A  B4D8               	btfsc	status,2,c
  4009  00091C  D003               	goto	u3620
  4010                           
  4011                           ; BSR set to: 0
  4012  00091E  5189               	movf	init_modem_ok@c2& (0+255),w,b
  4013  000920  B4D8               	btfsc	status,2,c
  4014  000922  D7EC               	goto	l825
  4015  000924                     u3620:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;module.c: 97: repeat = 20;
  4019                           
  4020                           ; BSR set to: 0
  4021                           
  4022                           ; BSR set to: 0
  4023  000924  0E14               	movlw	20
  4024  000926  6F8C               	movwf	init_modem_ok@repeat& (0+255),b
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;module.c: 98: delay5ms(3);
  4028  000928  0E00               	movlw	0
  4029  00092A  6E15               	movwf	delay5ms@cnt+1,c
  4030  00092C  0E03               	movlw	3
  4031  00092E  6E14               	movwf	delay5ms@cnt,c
  4032  000930  ECCE  F00A         	call	_delay5ms	;wreg free
  4033                           
  4034                           ;module.c: 99: while (repeat-- > 0 && !c3)
  4035  000934  D00C               	goto	l829
  4036  000936                     
  4037                           ;module.c: 100: c3 = md_uart_write_str_ok((unsigned char *)&ledCfg[0], sizeof(ledCfg), 1
      +                          );
  4038  000936  0E60               	movlw	low init_modem_ok@ledCfg
  4039  000938  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4040  00093A  0E00               	movlw	high init_modem_ok@ledCfg
  4041  00093C  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4042  00093E  0E10               	movlw	16
  4043  000940  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4044  000942  0E01               	movlw	1
  4045  000944  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4046  000946  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4047  00094A  0100               	movlb	0	; () banked
  4048  00094C  6F8A               	movwf	init_modem_ok@c3& (0+255),b
  4049  00094E                     l829:
  4050                           
  4051                           ; BSR set to: 0
  4052  00094E  0100               	movlb	0	; () banked
  4053  000950  078C               	decf	init_modem_ok@repeat& (0+255),f,b
  4054  000952  298C               	incf	init_modem_ok@repeat& (0+255),w,b
  4055  000954  B4D8               	btfsc	status,2,c
  4056  000956  D003               	goto	u3640
  4057                           
  4058                           ; BSR set to: 0
  4059  000958  518A               	movf	init_modem_ok@c3& (0+255),w,b
  4060  00095A  B4D8               	btfsc	status,2,c
  4061  00095C  D7EC               	goto	l830
  4062  00095E                     u3640:
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;module.c: 101: repeat = 20;
  4066                           
  4067                           ; BSR set to: 0
  4068                           
  4069                           ; BSR set to: 0
  4070  00095E  0E14               	movlw	20
  4071  000960  6F8C               	movwf	init_modem_ok@repeat& (0+255),b
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;module.c: 102: delay5ms(3);
  4075  000962  0E00               	movlw	0
  4076  000964  6E15               	movwf	delay5ms@cnt+1,c
  4077  000966  0E03               	movlw	3
  4078  000968  6E14               	movwf	delay5ms@cnt,c
  4079  00096A  ECCE  F00A         	call	_delay5ms	;wreg free
  4080                           
  4081                           ;module.c: 103: while (repeat-- > 0 && !c4)
  4082  00096E  D00C               	goto	l834
  4083  000970                     
  4084                           ;module.c: 104: c4 = md_uart_write_str_ok((unsigned char *)&ledPattern[0], sizeof(ledPat
      +                          tern), 1);
  4085  000970  0E70               	movlw	low init_modem_ok@ledPattern
  4086  000972  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4087  000974  0E00               	movlw	high init_modem_ok@ledPattern
  4088  000976  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4089  000978  0E0C               	movlw	12
  4090  00097A  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4091  00097C  0E01               	movlw	1
  4092  00097E  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4093  000980  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4094  000984  0100               	movlb	0	; () banked
  4095  000986  6F8B               	movwf	init_modem_ok@c4& (0+255),b
  4096  000988                     l834:
  4097                           
  4098                           ; BSR set to: 0
  4099  000988  0100               	movlb	0	; () banked
  4100  00098A  078C               	decf	init_modem_ok@repeat& (0+255),f,b
  4101  00098C  298C               	incf	init_modem_ok@repeat& (0+255),w,b
  4102  00098E  B4D8               	btfsc	status,2,c
  4103  000990  D003               	goto	u3660
  4104                           
  4105                           ; BSR set to: 0
  4106  000992  518B               	movf	init_modem_ok@c4& (0+255),w,b
  4107  000994  B4D8               	btfsc	status,2,c
  4108  000996  D7EC               	goto	l835
  4109  000998                     u3660:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;module.c: 105: repeat = 20;
  4113                           
  4114                           ; BSR set to: 0
  4115                           
  4116                           ; BSR set to: 0
  4117  000998  0E14               	movlw	20
  4118  00099A  6F8C               	movwf	init_modem_ok@repeat& (0+255),b
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;module.c: 106: delay5ms(3);
  4122  00099C  0E00               	movlw	0
  4123  00099E  6E15               	movwf	delay5ms@cnt+1,c
  4124  0009A0  0E03               	movlw	3
  4125  0009A2  6E14               	movwf	delay5ms@cnt,c
  4126  0009A4  ECCE  F00A         	call	_delay5ms	;wreg free
  4127                           
  4128                           ;module.c: 107: while (repeat-- > 0 && !c5)
  4129  0009A8  D00C               	goto	l839
  4130  0009AA                     
  4131                           ;module.c: 108: c5 = md_uart_write_str_ok((unsigned char *)&queryVersion[0], sizeof(quer
      +                          yVersion), 1);
  4132  0009AA  0E7C               	movlw	low init_modem_ok@queryVersion
  4133  0009AC  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4134  0009AE  0E00               	movlw	high init_modem_ok@queryVersion
  4135  0009B0  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4136  0009B2  0E0A               	movlw	10
  4137  0009B4  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4138  0009B6  0E01               	movlw	1
  4139  0009B8  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4140  0009BA  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4141  0009BE  0100               	movlb	0	; () banked
  4142  0009C0  6F87               	movwf	init_modem_ok@c5& (0+255),b
  4143  0009C2                     l839:
  4144                           
  4145                           ; BSR set to: 0
  4146  0009C2  0100               	movlb	0	; () banked
  4147  0009C4  078C               	decf	init_modem_ok@repeat& (0+255),f,b
  4148  0009C6  298C               	incf	init_modem_ok@repeat& (0+255),w,b
  4149  0009C8  B4D8               	btfsc	status,2,c
  4150  0009CA  D003               	goto	u3680
  4151                           
  4152                           ; BSR set to: 0
  4153  0009CC  5187               	movf	init_modem_ok@c5& (0+255),w,b
  4154  0009CE  B4D8               	btfsc	status,2,c
  4155  0009D0  D7EC               	goto	l840
  4156  0009D2                     u3680:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;module.c: 109: delay5ms(3);
  4160                           
  4161                           ; BSR set to: 0
  4162                           
  4163                           ; BSR set to: 0
  4164  0009D2  0E00               	movlw	0
  4165  0009D4  6E15               	movwf	delay5ms@cnt+1,c
  4166  0009D6  0E03               	movlw	3
  4167  0009D8  6E14               	movwf	delay5ms@cnt,c
  4168  0009DA  ECCE  F00A         	call	_delay5ms	;wreg free
  4169                           
  4170                           ;module.c: 111: if(c1 && c2 && c3 && c4)
  4171  0009DE  0100               	movlb	0	; () banked
  4172  0009E0  5188               	movf	init_modem_ok@c1& (0+255),w,b
  4173  0009E2  B4D8               	btfsc	status,2,c
  4174  0009E4  D00B               	goto	l844
  4175                           
  4176                           ; BSR set to: 0
  4177  0009E6  5189               	movf	init_modem_ok@c2& (0+255),w,b
  4178  0009E8  B4D8               	btfsc	status,2,c
  4179  0009EA  D008               	goto	l844
  4180                           
  4181                           ; BSR set to: 0
  4182  0009EC  518A               	movf	init_modem_ok@c3& (0+255),w,b
  4183  0009EE  B4D8               	btfsc	status,2,c
  4184  0009F0  D005               	goto	l844
  4185                           
  4186                           ; BSR set to: 0
  4187  0009F2  518B               	movf	init_modem_ok@c4& (0+255),w,b
  4188  0009F4  B4D8               	btfsc	status,2,c
  4189  0009F6  D002               	goto	l844
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;module.c: 112: return 1;
  4193  0009F8  0E01               	movlw	1
  4194                           
  4195                           ; BSR set to: 0
  4196                           
  4197                           ; BSR set to: 0
  4198  0009FA  0012               	return	
  4199  0009FC                     l844:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;module.c: 113: else
  4203                           ;module.c: 114: return 0;
  4204                           
  4205                           ; BSR set to: 0
  4206  0009FC  0E00               	movlw	0
  4207                           
  4208                           ; BSR set to: 0
  4209  0009FE  0012               	return	
  4210  000A00                     __end_of_init_modem_ok:
  4211                           	opt stack 0
  4212                           tblptru	equ	0xFF8
  4213                           tblptrh	equ	0xFF7
  4214                           tblptrl	equ	0xFF6
  4215                           tablat	equ	0xFF5
  4216                           prodh	equ	0xFF4
  4217                           prodl	equ	0xFF3
  4218                           intcon	equ	0xFF2
  4219                           postinc0	equ	0xFEE
  4220                           wreg	equ	0xFE8
  4221                           postdec1	equ	0xFE5
  4222                           fsr1l	equ	0xFE1
  4223                           indf2	equ	0xFDF
  4224                           postinc2	equ	0xFDE
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function _is_connected *****************
  4230 ;; Defined at:
  4231 ;;		line 16 in file "network.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    6
  4252 ;; This function calls:
  4253 ;;		_md_attached
  4254 ;; This function is called by:
  4255 ;;		_startup_md_ok
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text10
  4260  001684                     __ptext10:
  4261                           	opt stack 0
  4262  001684                     _is_connected:
  4263                           	opt stack 23
  4264                           
  4265                           ;network.c: 20: if (!md_attached()){}
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;incstack = 0
  4269  001684  ECA8  F005         	call	_md_attached	;wreg free
  4270                           
  4271                           ;network.c: 27: return 1;
  4272  001688  0E01               	movlw	1
  4273  00168A  0012               	return	
  4274  00168C                     __end_of_is_connected:
  4275                           	opt stack 0
  4276                           tblptru	equ	0xFF8
  4277                           tblptrh	equ	0xFF7
  4278                           tblptrl	equ	0xFF6
  4279                           tablat	equ	0xFF5
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           intcon	equ	0xFF2
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           postdec1	equ	0xFE5
  4286                           fsr1l	equ	0xFE1
  4287                           indf2	equ	0xFDF
  4288                           postinc2	equ	0xFDE
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _md_attached *****************
  4294 ;; Defined at:
  4295 ;;		line 100 in file "network.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  buf            40    0[BANK0 ] unsigned char [40]
  4300 ;;  gprs_check     12   40[BANK0 ] const unsigned char [12]
  4301 ;;  gprs_attach    11   52[BANK0 ] const unsigned char [11]
  4302 ;;  gprs_resp       9   63[BANK0 ] const unsigned char [9]
  4303 ;;  i               1   74[BANK0 ] unsigned char 
  4304 ;;  attached        1   73[BANK0 ] unsigned char 
  4305 ;;  cnt             1   72[BANK0 ] unsigned char 
  4306 ;;  temp            1    0        unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      unsigned char 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Locals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Totals:         2      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;Total ram usage:       77 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    5
  4323 ;; This function calls:
  4324 ;;		_delay5ms
  4325 ;;		_md_uart_write_str_ok
  4326 ;;		_str_matches
  4327 ;; This function is called by:
  4328 ;;		_is_connected
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text11
  4333  000B50                     __ptext11:
  4334                           	opt stack 0
  4335  000B50                     _md_attached:
  4336                           	opt stack 23
  4337                           
  4338                           ;network.c: 102: const uint8_t gprs_check[] = "AT+CGATT?\r\n";
  4339                           
  4340                           ;incstack = 0
  4341  000B50  0EA5               	movlw	low md_attached@F6786
  4342  000B52  6EF6               	movwf	tblptrl,c
  4343  000B54                     	if	1	;There is more than 1 active tblptr byte
  4344  000B54  0EFE               	movlw	high md_attached@F6786
  4345  000B56  6EF7               	movwf	tblptrh,c
  4346  000B58                     	endif
  4347  000B58                     	if	1	;There are 3 active tblptr bytes
  4348  000B58  0E00               	movlw	low (md_attached@F6786 shr (0+16))
  4349  000B5A  6EF8               	movwf	tblptru,c
  4350  000B5C                     	endif
  4351  000B5C  EE20  F088         	lfsr	2,md_attached@gprs_check
  4352  000B60  0E0B               	movlw	11
  4353  000B62                     u3430:
  4354  000B62  0009               	tblrd		*+
  4355  000B64  CFF5 FFDE          	movff	tablat,postinc2
  4356  000B68  06E8               	decf	wreg,f,c
  4357  000B6A  E2FB               	bc	u3430
  4358                           
  4359                           ;network.c: 103: const uint8_t gprs_resp[] = "+CGATT: ";
  4360  000B6C  0EFD               	movlw	low md_attached@F6788
  4361  000B6E  6EF6               	movwf	tblptrl,c
  4362  000B70                     	if	1	;There is more than 1 active tblptr byte
  4363  000B70  0EFE               	movlw	high md_attached@F6788
  4364  000B72  6EF7               	movwf	tblptrh,c
  4365  000B74                     	endif
  4366  000B74                     	if	1	;There are 3 active tblptr bytes
  4367  000B74  0E00               	movlw	low (md_attached@F6788 shr (0+16))
  4368  000B76  6EF8               	movwf	tblptru,c
  4369  000B78                     	endif
  4370  000B78  EE20  F09F         	lfsr	2,md_attached@gprs_resp
  4371  000B7C  0E08               	movlw	8
  4372  000B7E                     u3440:
  4373  000B7E  0009               	tblrd		*+
  4374  000B80  CFF5 FFDE          	movff	tablat,postinc2
  4375  000B84  06E8               	decf	wreg,f,c
  4376  000B86  E2FB               	bc	u3440
  4377                           
  4378                           ;network.c: 104: const uint8_t gprs_attach[] = "AT+CGATT=1";
  4379  000B88  0ED3               	movlw	low md_attached@F6790
  4380  000B8A  6EF6               	movwf	tblptrl,c
  4381  000B8C                     	if	1	;There is more than 1 active tblptr byte
  4382  000B8C  0EFE               	movlw	high md_attached@F6790
  4383  000B8E  6EF7               	movwf	tblptrh,c
  4384  000B90                     	endif
  4385  000B90                     	if	1	;There are 3 active tblptr bytes
  4386  000B90  0E00               	movlw	low (md_attached@F6790 shr (0+16))
  4387  000B92  6EF8               	movwf	tblptru,c
  4388  000B94                     	endif
  4389  000B94  EE20  F094         	lfsr	2,md_attached@gprs_attach
  4390  000B98  0E0A               	movlw	10
  4391  000B9A                     u3450:
  4392  000B9A  0009               	tblrd		*+
  4393  000B9C  CFF5 FFDE          	movff	tablat,postinc2
  4394  000BA0  06E8               	decf	wreg,f,c
  4395  000BA2  E2FB               	bc	u3450
  4396                           
  4397                           ;network.c: 106: uint8_t temp, i, buf[40], cnt = 15;
  4398  000BA4  0E0F               	movlw	15
  4399  000BA6  0100               	movlb	0	; () banked
  4400  000BA8  6FA8               	movwf	md_attached@cnt& (0+255),b
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;network.c: 107: bool attached = 0;
  4404  000BAA  0E00               	movlw	0
  4405  000BAC  6FA9               	movwf	md_attached@attached& (0+255),b
  4406                           
  4407                           ;network.c: 109: while (cnt-- > 0)
  4408  000BAE  D066               	goto	l641
  4409  000BB0                     
  4410                           ; BSR set to: 0
  4411                           ;network.c: 110: {
  4412                           ;network.c: 111: if (md_uart_write_str_ok((uint8_t *)&gprs_check[0], sizeof(gprs_check),
      +                           1))
  4413                           
  4414                           ; BSR set to: 0
  4415  000BB0  0E88               	movlw	low md_attached@gprs_check
  4416  000BB2  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4417  000BB4  0E00               	movlw	high md_attached@gprs_check
  4418  000BB6  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4419  000BB8  0E0C               	movlw	12
  4420  000BBA  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4421  000BBC  0E01               	movlw	1
  4422  000BBE  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4423  000BC0  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4424  000BC4  0900               	iorlw	0
  4425  000BC6  B4D8               	btfsc	status,2,c
  4426  000BC8  D053               	goto	l643
  4427  000BCA                     u3460:
  4428                           
  4429                           ;network.c: 112: {
  4430                           ;network.c: 113: while (buf[i++] != ':');
  4431  000BCA  0100               	movlb	0	; () banked
  4432  000BCC  2BAA               	incf	md_attached@i& (0+255),f,b
  4433  000BCE  05AA               	decf	md_attached@i& (0+255),w,b
  4434  000BD0  6E23               	movwf	??_md_attached& (0+255),c
  4435  000BD2  5023               	movf	??_md_attached,w,c
  4436  000BD4  0D01               	mullw	1
  4437  000BD6  0E60               	movlw	low md_attached@buf
  4438  000BD8  24F3               	addwf	prodl,w,c
  4439  000BDA  6ED9               	movwf	fsr2l,c
  4440  000BDC  0E00               	movlw	high md_attached@buf
  4441  000BDE  20F4               	addwfc	prodh,w,c
  4442  000BE0  6EDA               	movwf	fsr2h,c
  4443  000BE2  0E3A               	movlw	58
  4444  000BE4  18DE               	xorwf	postinc2,w,c
  4445  000BE6  A4D8               	btfss	status,2,c
  4446  000BE8  D7F0               	goto	u3460
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;network.c: 114: if (str_matches((uint8_t *)&buf[(uint8_t)(i - 7)], (uint8_t *)&gprs_res
      +                          p[0], 7))
  4450                           
  4451                           ; BSR set to: 0
  4452  000BEA  C0AA  F023         	movff	md_attached@i,??_md_attached
  4453  000BEE  0EF9               	movlw	249
  4454  000BF0  2623               	addwf	??_md_attached,f,c
  4455  000BF2  5023               	movf	??_md_attached,w,c
  4456  000BF4  0D01               	mullw	1
  4457  000BF6  0E60               	movlw	low md_attached@buf
  4458  000BF8  24F3               	addwf	prodl,w,c
  4459  000BFA  6E14               	movwf	str_matches@raw,c
  4460  000BFC  0E00               	movlw	high md_attached@buf
  4461  000BFE  20F4               	addwfc	prodh,w,c
  4462  000C00  6E15               	movwf	str_matches@raw+1,c
  4463  000C02  0E9F               	movlw	low md_attached@gprs_resp
  4464  000C04  6E16               	movwf	str_matches@expected,c
  4465  000C06  0E00               	movlw	high md_attached@gprs_resp
  4466  000C08  6E17               	movwf	str_matches@expected+1,c
  4467  000C0A  0E07               	movlw	7
  4468  000C0C  6E18               	movwf	str_matches@len,c
  4469  000C0E  EC61  F00A         	call	_str_matches	;wreg free
  4470  000C12  0900               	iorlw	0
  4471  000C14  B4D8               	btfsc	status,2,c
  4472  000C16  D029               	goto	l651
  4473                           
  4474                           ;network.c: 115: {
  4475                           ;network.c: 116: attached = (bool)(buf[(uint8_t)(i + 1)] == '1');
  4476  000C18  C0AA  F023         	movff	md_attached@i,??_md_attached
  4477  000C1C  0E01               	movlw	1
  4478  000C1E  2623               	addwf	??_md_attached,f,c
  4479  000C20  5023               	movf	??_md_attached,w,c
  4480  000C22  0D01               	mullw	1
  4481  000C24  0E60               	movlw	low md_attached@buf
  4482  000C26  24F3               	addwf	prodl,w,c
  4483  000C28  6ED9               	movwf	fsr2l,c
  4484  000C2A  0E00               	movlw	high md_attached@buf
  4485  000C2C  20F4               	addwfc	prodh,w,c
  4486  000C2E  6EDA               	movwf	fsr2h,c
  4487  000C30  0E31               	movlw	49
  4488  000C32  18DE               	xorwf	postinc2,w,c
  4489  000C34  A4D8               	btfss	status,2,c
  4490  000C36  D002               	goto	u3490
  4491  000C38  0E01               	movlw	1
  4492  000C3A  D001               	goto	u3500
  4493  000C3C                     u3490:
  4494  000C3C  0E00               	movlw	0
  4495  000C3E                     u3500:
  4496  000C3E  0100               	movlb	0	; () banked
  4497  000C40  6FA9               	movwf	md_attached@attached& (0+255),b
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;network.c: 117: if (!attached)
  4501  000C42  51A9               	movf	md_attached@attached& (0+255),w,b
  4502  000C44  A4D8               	btfss	status,2,c
  4503  000C46  D00F               	goto	l648
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;network.c: 118: {
  4507                           ;network.c: 119: if (!md_uart_write_str_ok((uint8_t *)(&gprs_attach[0]), sizeof(gprs_att
      +                          ach), 1))
  4508  000C48  0E94               	movlw	low md_attached@gprs_attach
  4509  000C4A  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4510  000C4C  0E00               	movlw	high md_attached@gprs_attach
  4511  000C4E  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4512  000C50  0E0B               	movlw	11
  4513  000C52  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4514  000C54  0E01               	movlw	1
  4515  000C56  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4516  000C58  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4517  000C5C  0900               	iorlw	0
  4518  000C5E  A4D8               	btfss	status,2,c
  4519  000C60  D004               	goto	l651
  4520                           
  4521                           ;network.c: 120: return 0;
  4522  000C62  0E00               	movlw	0
  4523  000C64  0012               	return	
  4524  000C66                     l648:
  4525                           
  4526                           ;network.c: 122: else
  4527                           ;network.c: 123: return 1;
  4528  000C66  0E01               	movlw	1
  4529  000C68  0012               	return	
  4530  000C6A                     l651:
  4531                           
  4532                           ;network.c: 124: }
  4533                           ;network.c: 125: i = 0;
  4534  000C6A  0E00               	movlw	0
  4535  000C6C  0100               	movlb	0	; () banked
  4536  000C6E  6FAA               	movwf	md_attached@i& (0+255),b
  4537  000C70                     l643:
  4538                           
  4539                           ;network.c: 126: }
  4540                           ;network.c: 127: delay5ms(100);
  4541                           
  4542                           ; BSR set to: 0
  4543  000C70  0E00               	movlw	0
  4544  000C72  6E15               	movwf	delay5ms@cnt+1,c
  4545  000C74  0E64               	movlw	100
  4546  000C76  6E14               	movwf	delay5ms@cnt,c
  4547  000C78  ECCE  F00A         	call	_delay5ms	;wreg free
  4548  000C7C                     l641:
  4549  000C7C  0100               	movlb	0	; () banked
  4550  000C7E  07A8               	decf	md_attached@cnt& (0+255),f,b
  4551  000C80  29A8               	incf	md_attached@cnt& (0+255),w,b
  4552  000C82  A4D8               	btfss	status,2,c
  4553  000C84  D795               	goto	l642
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;network.c: 128: }
  4557                           ;network.c: 129: return attached;
  4558                           
  4559                           ; BSR set to: 0
  4560  000C86  51A9               	movf	md_attached@attached& (0+255),w,b
  4561  000C88  0012               	return	
  4562  000C8A                     __end_of_md_attached:
  4563                           	opt stack 0
  4564                           tblptru	equ	0xFF8
  4565                           tblptrh	equ	0xFF7
  4566                           tblptrl	equ	0xFF6
  4567                           tablat	equ	0xFF5
  4568                           prodh	equ	0xFF4
  4569                           prodl	equ	0xFF3
  4570                           intcon	equ	0xFF2
  4571                           postinc0	equ	0xFEE
  4572                           wreg	equ	0xFE8
  4573                           postdec1	equ	0xFE5
  4574                           fsr1l	equ	0xFE1
  4575                           indf2	equ	0xFDF
  4576                           postinc2	equ	0xFDE
  4577                           fsr2h	equ	0xFDA
  4578                           fsr2l	equ	0xFD9
  4579                           status	equ	0xFD8
  4580                           
  4581 ;; *************** function _init_uart_modem *****************
  4582 ;; Defined at:
  4583 ;;		line 21 in file "uart.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      unsigned char 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    2
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_startup_md_ok
  4608 ;;		_init_uart
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text12
  4613  0015C6                     __ptext12:
  4614                           	opt stack 0
  4615  0015C6                     _init_uart_modem:
  4616                           	opt stack 27
  4617                           
  4618                           ;uart.c: 23: BAUDCON1bits.BRG16 = 1;
  4619                           
  4620                           ;incstack = 0
  4621  0015C6  86B8               	bsf	4024,3,c	;volatile
  4622                           
  4623                           ;uart.c: 24: BAUDCON1bits.RCIDL = 1;
  4624  0015C8  8CB8               	bsf	4024,6,c	;volatile
  4625                           
  4626                           ;uart.c: 25: BAUDCONbits.CKTXP = 0;
  4627  0015CA  98B8               	bcf	4024,4,c	;volatile
  4628                           
  4629                           ;uart.c: 26: BAUDCONbits.WUE = 0;
  4630  0015CC  92B8               	bcf	4024,1,c	;volatile
  4631                           
  4632                           ;uart.c: 27: BAUDCONbits.ABDEN = 0;
  4633  0015CE  90B8               	bcf	4024,0,c	;volatile
  4634                           
  4635                           ;uart.c: 28: TXSTA1bits.BRGH = 1;
  4636  0015D0  84AC               	bsf	4012,2,c	;volatile
  4637                           
  4638                           ;uart.c: 29: TXSTA1bits.SYNC = 0;
  4639  0015D2  98AC               	bcf	4012,4,c	;volatile
  4640                           
  4641                           ;uart.c: 30: SPBRGH1 = 0;
  4642  0015D4  0E00               	movlw	0
  4643  0015D6  6EB0               	movwf	4016,c	;volatile
  4644                           
  4645                           ;uart.c: 31: SPBRG1 = 16;
  4646  0015D8  0E10               	movlw	16
  4647  0015DA  6EAF               	movwf	4015,c	;volatile
  4648                           
  4649                           ;uart.c: 33: RC1STAbits.SPEN = 1;
  4650  0015DC  8EAB               	bsf	4011,7,c	;volatile
  4651                           
  4652                           ;uart.c: 34: TRISCbits.TRISC7 = 1;
  4653  0015DE  8E94               	bsf	3988,7,c	;volatile
  4654                           
  4655                           ;uart.c: 35: TRISCbits.TRISC6 = 0;
  4656  0015E0  9C94               	bcf	3988,6,c	;volatile
  4657                           
  4658                           ;uart.c: 38: RCSTA1bits.CREN = 1;
  4659  0015E2  88AB               	bsf	4011,4,c	;volatile
  4660                           
  4661                           ;uart.c: 39: TXSTA1bits.TXEN = 1;
  4662  0015E4  8AAC               	bsf	4012,5,c	;volatile
  4663                           
  4664                           ;uart.c: 41: PORTAbits.RA3 = 1;
  4665  0015E6  8680               	bsf	3968,3,c	;volatile
  4666                           
  4667                           ;uart.c: 47: PIR1bits.RC1IF = 0;
  4668  0015E8  9A9E               	bcf	3998,5,c	;volatile
  4669  0015EA  0012               	return	
  4670  0015EC                     __end_of_init_uart_modem:
  4671                           	opt stack 0
  4672                           tblptru	equ	0xFF8
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           prodh	equ	0xFF4
  4677                           prodl	equ	0xFF3
  4678                           intcon	equ	0xFF2
  4679                           postinc0	equ	0xFEE
  4680                           wreg	equ	0xFE8
  4681                           postdec1	equ	0xFE5
  4682                           fsr1l	equ	0xFE1
  4683                           indf2	equ	0xFDF
  4684                           postinc2	equ	0xFDE
  4685                           fsr2h	equ	0xFDA
  4686                           fsr2l	equ	0xFD9
  4687                           status	equ	0xFD8
  4688                           
  4689 ;; *************** function _send_text *****************
  4690 ;; Defined at:
  4691 ;;		line 15 in file "sms.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  msg             2   34[COMRAM] PTR unsigned char 
  4694 ;;		 -> STR_1(44), 
  4695 ;;  len             1   36[COMRAM] unsigned char 
  4696 ;;  number          2   37[COMRAM] PTR unsigned char 
  4697 ;;		 -> JENS_NUMBER(11), 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  buf            40    0[BANK0 ] unsigned char [40]
  4700 ;;  ready_to_wri    1   44[BANK0 ] unsigned char 
  4701 ;;  i               1   43[BANK0 ] unsigned char 
  4702 ;;  ctrlz           1   42[BANK0 ] unsigned char 
  4703 ;;  count           1   41[BANK0 ] unsigned char 
  4704 ;;  temp            1   40[BANK0 ] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      unsigned char 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4714 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Totals:         5      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;Total ram usage:       50 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    5
  4721 ;; This function calls:
  4722 ;;		_delay5ms
  4723 ;;		_md_uart_write_str_ok
  4724 ;;		_setup_timer3
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text13
  4731  000D9A                     __ptext13:
  4732                           	opt stack 0
  4733  000D9A                     _send_text:
  4734                           	opt stack 25
  4735                           
  4736                           ;sms.c: 17: md_uart_write_str_ok((uint8_t *)"AT+CMGF=1\r\n", 11, 1);
  4737                           
  4738                           ;incstack = 0
  4739  000D9A  0ED8               	movlw	low STR_2
  4740  000D9C  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4741  000D9E  0EFF               	movlw	high STR_2
  4742  000DA0  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4743  000DA2  0E0B               	movlw	11
  4744  000DA4  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4745  000DA6  0E01               	movlw	1
  4746  000DA8  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4747  000DAA  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4748                           
  4749                           ;sms.c: 19: delay5ms(2);
  4750  000DAE  0E00               	movlw	0
  4751  000DB0  6E15               	movwf	delay5ms@cnt+1,c
  4752  000DB2  0E02               	movlw	2
  4753  000DB4  6E14               	movwf	delay5ms@cnt,c
  4754  000DB6  ECCE  F00A         	call	_delay5ms	;wreg free
  4755                           
  4756                           ;sms.c: 20: md_uart_write_str_ok((uint8_t *)"AT+CMGS=", 8, 0);
  4757  000DBA  0EEE               	movlw	low STR_3
  4758  000DBC  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4759  000DBE  0EFF               	movlw	high STR_3
  4760  000DC0  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4761  000DC2  0E08               	movlw	8
  4762  000DC4  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4763  000DC6  0E00               	movlw	0
  4764  000DC8  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4765  000DCA  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4766                           
  4767                           ;sms.c: 21: md_uart_write_str_ok(number, 10, 0);
  4768  000DCE  C026  F01A         	movff	send_text@number,md_uart_write_str_ok@toSend
  4769  000DD2  C027  F01B         	movff	send_text@number+1,md_uart_write_str_ok@toSend+1
  4770  000DD6  0E0A               	movlw	10
  4771  000DD8  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4772  000DDA  0E00               	movlw	0
  4773  000DDC  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4774  000DDE  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4775                           
  4776                           ;sms.c: 22: md_uart_write_str_ok((uint8_t *)"\r\n", 2, 0);
  4777  000DE2  0EC9               	movlw	low (STR_1+41)
  4778  000DE4  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4779  000DE6  0EFF               	movlw	high (STR_1+41)
  4780  000DE8  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4781  000DEA  0E02               	movlw	2
  4782  000DEC  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4783  000DEE  0E00               	movlw	0
  4784  000DF0  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4785  000DF2  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4786                           
  4787                           ;sms.c: 24: uint8_t buf[40],temp, i = 0, count = 15, ctrlz = 26;
  4788  000DF6  0E00               	movlw	0
  4789  000DF8  0100               	movlb	0	; () banked
  4790  000DFA  6F8B               	movwf	send_text@i& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793  000DFC  0E0F               	movlw	15
  4794  000DFE  6F89               	movwf	send_text@count& (0+255),b
  4795                           
  4796                           ; BSR set to: 0
  4797  000E00  0E1A               	movlw	26
  4798  000E02  6F8A               	movwf	send_text@ctrlz& (0+255),b
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;sms.c: 25: bool ready_to_write = 0;
  4802  000E04  0E00               	movlw	0
  4803  000E06  6F8C               	movwf	send_text@ready_to_write& (0+255),b
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;sms.c: 27: RC1IE = 0;
  4807  000E08  9A9D               	bcf	3997,5,c	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;sms.c: 28: CREN1 = 1;
  4811  000E0A  88AB               	bsf	4011,4,c	;volatile
  4812                           
  4813                           ;sms.c: 29: while (count-- != 0 && !ready_to_write)
  4814  000E0C  D028               	goto	l261
  4815  000E0E                     
  4816                           ; BSR set to: 0
  4817                           ;sms.c: 30: {
  4818                           ;sms.c: 31: setup_timer3();
  4819                           
  4820                           ; BSR set to: 0
  4821  000E0E  EC2F  F00B         	call	_setup_timer3	;wreg free
  4822                           
  4823                           ;sms.c: 32: while(!TMR3IF && !ready_to_write)
  4824  000E12  D01E               	goto	l265
  4825  000E14                     l264:
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;sms.c: 33: {
  4829                           ;sms.c: 34: if( RC1IF == 1 )
  4830  000E14  AA9E               	btfss	3998,5,c	;volatile
  4831  000E16  D01C               	goto	l265
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;sms.c: 35: {
  4835                           ;sms.c: 36: temp = RC1REG;
  4836  000E18  CFAE F088          	movff	4014,send_text@temp	;volatile
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;sms.c: 37: buf[i++] = temp;
  4840  000E1C  518B               	movf	send_text@i& (0+255),w,b
  4841  000E1E  0D01               	mullw	1
  4842  000E20  0E60               	movlw	low send_text@buf
  4843  000E22  24F3               	addwf	prodl,w,c
  4844  000E24  6ED9               	movwf	fsr2l,c
  4845  000E26  0E00               	movlw	high send_text@buf
  4846  000E28  20F4               	addwfc	prodh,w,c
  4847  000E2A  6EDA               	movwf	fsr2h,c
  4848  000E2C  C088  FFDF         	movff	send_text@temp,indf2
  4849                           
  4850                           ; BSR set to: 0
  4851  000E30  2B8B               	incf	send_text@i& (0+255),f,b
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;sms.c: 39: if (i >= 20)
  4855  000E32  0E13               	movlw	19
  4856  000E34  658B               	cpfsgt	send_text@i& (0+255),b
  4857  000E36  D002               	goto	l266
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;sms.c: 40: i = 19;
  4861  000E38  0E13               	movlw	19
  4862  000E3A  6F8B               	movwf	send_text@i& (0+255),b
  4863  000E3C                     l266:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;sms.c: 42: if (buf[0] == '>')
  4867                           
  4868                           ; BSR set to: 0
  4869  000E3C  0E3E               	movlw	62
  4870  000E3E  1960               	xorwf	send_text@buf& (0+255),w,b
  4871  000E40  A4D8               	btfss	status,2,c
  4872  000E42  D004               	goto	l267
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;sms.c: 43: {
  4876                           ;sms.c: 44: RC1IE = 1;
  4877  000E44  8A9D               	bsf	3997,5,c	;volatile
  4878                           
  4879                           ;sms.c: 45: CREN1 = 0;
  4880  000E46  98AB               	bcf	4011,4,c	;volatile
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;sms.c: 46: ready_to_write = 1;
  4884  000E48  0E01               	movlw	1
  4885  000E4A  6F8C               	movwf	send_text@ready_to_write& (0+255),b
  4886  000E4C                     l267:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;sms.c: 47: }
  4890                           ;sms.c: 48: i = 0;
  4891  000E4C  0E00               	movlw	0
  4892  000E4E  6F8B               	movwf	send_text@i& (0+255),b
  4893  000E50                     l265:
  4894                           
  4895                           ; BSR set to: 0
  4896                           
  4897                           ; BSR set to: 0
  4898  000E50  B2A1               	btfsc	4001,1,c	;volatile
  4899  000E52  D004               	goto	u4570
  4900  000E54  0100               	movlb	0	; () banked
  4901  000E56  518C               	movf	send_text@ready_to_write& (0+255),w,b
  4902  000E58  B4D8               	btfsc	status,2,c
  4903  000E5A  D7DC               	goto	l264
  4904  000E5C                     u4570:
  4905                           
  4906                           ;sms.c: 50: }
  4907                           ;sms.c: 51: }
  4908                           ;sms.c: 52: TMR3IF = 0;
  4909                           
  4910                           ; BSR set to: 0
  4911  000E5C  92A1               	bcf	4001,1,c	;volatile
  4912  000E5E                     l261:
  4913  000E5E  0100               	movlb	0	; () banked
  4914  000E60  0789               	decf	send_text@count& (0+255),f,b
  4915  000E62  2989               	incf	send_text@count& (0+255),w,b
  4916  000E64  B4D8               	btfsc	status,2,c
  4917  000E66  D003               	goto	u4590
  4918                           
  4919                           ; BSR set to: 0
  4920  000E68  518C               	movf	send_text@ready_to_write& (0+255),w,b
  4921  000E6A  B4D8               	btfsc	status,2,c
  4922  000E6C  D7D0               	goto	l262
  4923  000E6E                     u4590:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;sms.c: 53: }
  4927                           ;sms.c: 54: TMR3ON = 0;
  4928                           
  4929                           ; BSR set to: 0
  4930  000E6E  90B1               	bcf	4017,0,c	;volatile
  4931                           
  4932                           ;sms.c: 55: RC1IE = 1;
  4933  000E70  8A9D               	bsf	3997,5,c	;volatile
  4934                           
  4935                           ;sms.c: 56: CREN1 = 0;
  4936  000E72  98AB               	bcf	4011,4,c	;volatile
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;sms.c: 58: if (ready_to_write)
  4940  000E74  518C               	movf	send_text@ready_to_write& (0+255),w,b
  4941  000E76  B4D8               	btfsc	status,2,c
  4942  000E78  0012               	return	
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;sms.c: 59: {
  4946                           ;sms.c: 60: md_uart_write_str_ok(msg, len, 0);
  4947  000E7A  C023  F01A         	movff	send_text@msg,md_uart_write_str_ok@toSend
  4948  000E7E  C024  F01B         	movff	send_text@msg+1,md_uart_write_str_ok@toSend+1
  4949  000E82  C025  F01C         	movff	send_text@len,md_uart_write_str_ok@lengthToSend
  4950  000E86  0E00               	movlw	0
  4951  000E88  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4952  000E8A  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4953                           
  4954                           ;sms.c: 61: if (md_uart_write_str_ok((uint8_t *)&ctrlz, 1, 1))
  4955  000E8E  0E8A               	movlw	low send_text@ctrlz
  4956  000E90  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  4957  000E92  0E00               	movlw	high send_text@ctrlz
  4958  000E94  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  4959  000E96  0E01               	movlw	1
  4960  000E98  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  4961  000E9A  0E01               	movlw	1
  4962  000E9C  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  4963  000E9E  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  4964                           
  4965                           ;sms.c: 66: else
  4966                           ;sms.c: 67: return 0;
  4967                           ;	Return value of _send_text is never used
  4968                           
  4969                           ;sms.c: 65: }
  4970                           
  4971                           ;sms.c: 63: else
  4972                           ;sms.c: 64: return 0;
  4973                           ;	Return value of _send_text is never used
  4974                           
  4975                           ;sms.c: 62: return 1;
  4976                           ;	Return value of _send_text is never used
  4977  000EA2  0012               	return	
  4978  000EA4                     __end_of_send_text:
  4979                           	opt stack 0
  4980                           tblptru	equ	0xFF8
  4981                           tblptrh	equ	0xFF7
  4982                           tblptrl	equ	0xFF6
  4983                           tablat	equ	0xFF5
  4984                           prodh	equ	0xFF4
  4985                           prodl	equ	0xFF3
  4986                           intcon	equ	0xFF2
  4987                           postinc0	equ	0xFEE
  4988                           wreg	equ	0xFE8
  4989                           postdec1	equ	0xFE5
  4990                           fsr1l	equ	0xFE1
  4991                           indf2	equ	0xFDF
  4992                           postinc2	equ	0xFDE
  4993                           fsr2h	equ	0xFDA
  4994                           fsr2l	equ	0xFD9
  4995                           status	equ	0xFD8
  4996                           
  4997 ;; *************** function _receive_sms_init *****************
  4998 ;; Defined at:
  4999 ;;		line 71 in file "sms.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  dummyBuf       40    0        unsigned char [40]
  5004 ;;  cpms           26    0[BANK0 ] const unsigned char [26]
  5005 ;;  cnmi           15   26[BANK0 ] const unsigned char [15]
  5006 ;;  cmgf           13   41[BANK0 ] const unsigned char [13]
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      unsigned char 
  5009 ;; Registers used:
  5010 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;Total ram usage:       54 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    5
  5023 ;; This function calls:
  5024 ;;		_delay5ms
  5025 ;;		_md_uart_write_str_ok
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text14
  5032  00108C                     __ptext14:
  5033                           	opt stack 0
  5034  00108C                     _receive_sms_init:
  5035                           	opt stack 25
  5036                           
  5037                           ;sms.c: 73: unsigned char const cmgf[] = "AT+CMGF=1\r\n$";
  5038                           
  5039                           ;incstack = 0
  5040  00108C  0E8C               	movlw	low receive_sms_init@F6784
  5041  00108E  6EF6               	movwf	tblptrl,c
  5042  001090                     	if	1	;There is more than 1 active tblptr byte
  5043  001090  0EFE               	movlw	high receive_sms_init@F6784
  5044  001092  6EF7               	movwf	tblptrh,c
  5045  001094                     	endif
  5046  001094                     	if	1	;There are 3 active tblptr bytes
  5047  001094  0E00               	movlw	low (receive_sms_init@F6784 shr (0+16))
  5048  001096  6EF8               	movwf	tblptru,c
  5049  001098                     	endif
  5050  001098  EE20  F089         	lfsr	2,receive_sms_init@cmgf
  5051  00109C  0E0C               	movlw	12
  5052  00109E                     u4450:
  5053  00109E  0009               	tblrd		*+
  5054  0010A0  CFF5 FFDE          	movff	tablat,postinc2
  5055  0010A4  06E8               	decf	wreg,f,c
  5056  0010A6  E2FB               	bc	u4450
  5057                           
  5058                           ;sms.c: 74: unsigned char const cpms[]="AT+CPMS=\"ME\",\"ME\",\"ME\"\r\n$";
  5059  0010A8  0E1D               	movlw	low receive_sms_init@F6786
  5060  0010AA  6EF6               	movwf	tblptrl,c
  5061  0010AC                     	if	1	;There is more than 1 active tblptr byte
  5062  0010AC  0EFE               	movlw	high receive_sms_init@F6786
  5063  0010AE  6EF7               	movwf	tblptrh,c
  5064  0010B0                     	endif
  5065  0010B0                     	if	1	;There are 3 active tblptr bytes
  5066  0010B0  0E00               	movlw	low (receive_sms_init@F6786 shr (0+16))
  5067  0010B2  6EF8               	movwf	tblptru,c
  5068  0010B4                     	endif
  5069  0010B4  EE20  F060         	lfsr	2,receive_sms_init@cpms
  5070  0010B8  0E19               	movlw	25
  5071  0010BA                     u4460:
  5072  0010BA  0009               	tblrd		*+
  5073  0010BC  CFF5 FFDE          	movff	tablat,postinc2
  5074  0010C0  06E8               	decf	wreg,f,c
  5075  0010C2  E2FB               	bc	u4460
  5076                           
  5077                           ;sms.c: 75: unsigned char const cnmi[]="AT+CNMI=1,1\r\n$";
  5078  0010C4  0E70               	movlw	low receive_sms_init@F6788
  5079  0010C6  6EF6               	movwf	tblptrl,c
  5080  0010C8                     	if	1	;There is more than 1 active tblptr byte
  5081  0010C8  0EFE               	movlw	high receive_sms_init@F6788
  5082  0010CA  6EF7               	movwf	tblptrh,c
  5083  0010CC                     	endif
  5084  0010CC                     	if	1	;There are 3 active tblptr bytes
  5085  0010CC  0E00               	movlw	low (receive_sms_init@F6788 shr (0+16))
  5086  0010CE  6EF8               	movwf	tblptru,c
  5087  0010D0                     	endif
  5088  0010D0  EE20  F07A         	lfsr	2,receive_sms_init@cnmi
  5089  0010D4  0E0E               	movlw	14
  5090  0010D6                     u4470:
  5091  0010D6  0009               	tblrd		*+
  5092  0010D8  CFF5 FFDE          	movff	tablat,postinc2
  5093  0010DC  06E8               	decf	wreg,f,c
  5094  0010DE  E2FB               	bc	u4470
  5095                           
  5096                           ;sms.c: 76: uint8_t dummyBuf[40];
  5097                           ;sms.c: 77: while (!md_uart_write_str_ok((uint8_t *)&cmgf[0], sizeof(cmgf), 1))
  5098  0010E0  D006               	goto	l287
  5099  0010E2                     
  5100                           ;sms.c: 78: delay5ms(200);
  5101  0010E2  0E00               	movlw	0
  5102  0010E4  6E15               	movwf	delay5ms@cnt+1,c
  5103  0010E6  0EC8               	movlw	200
  5104  0010E8  6E14               	movwf	delay5ms@cnt,c
  5105  0010EA  ECCE  F00A         	call	_delay5ms	;wreg free
  5106  0010EE                     l287:
  5107  0010EE  0E89               	movlw	low receive_sms_init@cmgf
  5108  0010F0  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5109  0010F2  0E00               	movlw	high receive_sms_init@cmgf
  5110  0010F4  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5111  0010F6  0E0D               	movlw	13
  5112  0010F8  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5113  0010FA  0E01               	movlw	1
  5114  0010FC  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5115  0010FE  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5116  001102  0900               	iorlw	0
  5117  001104  A4D8               	btfss	status,2,c
  5118  001106  D007               	goto	l290
  5119  001108  D7EC               	goto	l288
  5120  00110A                     
  5121                           ;sms.c: 80: delay5ms(200);
  5122  00110A  0E00               	movlw	0
  5123  00110C  6E15               	movwf	delay5ms@cnt+1,c
  5124  00110E  0EC8               	movlw	200
  5125  001110  6E14               	movwf	delay5ms@cnt,c
  5126  001112  ECCE  F00A         	call	_delay5ms	;wreg free
  5127  001116                     l290:
  5128  001116  0E60               	movlw	low receive_sms_init@cpms
  5129  001118  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5130  00111A  0E00               	movlw	high receive_sms_init@cpms
  5131  00111C  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5132  00111E  0E1A               	movlw	26
  5133  001120  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5134  001122  0E01               	movlw	1
  5135  001124  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5136  001126  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5137  00112A  0900               	iorlw	0
  5138  00112C  A4D8               	btfss	status,2,c
  5139  00112E  D007               	goto	l293
  5140  001130  D7EC               	goto	l291
  5141  001132                     
  5142                           ;sms.c: 82: delay5ms(100);
  5143  001132  0E00               	movlw	0
  5144  001134  6E15               	movwf	delay5ms@cnt+1,c
  5145  001136  0E64               	movlw	100
  5146  001138  6E14               	movwf	delay5ms@cnt,c
  5147  00113A  ECCE  F00A         	call	_delay5ms	;wreg free
  5148  00113E                     l293:
  5149  00113E  0E7A               	movlw	low receive_sms_init@cnmi
  5150  001140  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5151  001142  0E00               	movlw	high receive_sms_init@cnmi
  5152  001144  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5153  001146  0E0F               	movlw	15
  5154  001148  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5155  00114A  0E01               	movlw	1
  5156  00114C  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5157  00114E  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5158  001152  0900               	iorlw	0
  5159  001154  B4D8               	btfsc	status,2,c
  5160  001156  D7ED               	goto	l294
  5161                           
  5162                           ;sms.c: 84: ledPattern = INTERNET;
  5163  001158  0E02               	movlw	2
  5164  00115A  0100               	movlb	0	; () banked
  5165  00115C  6FB9               	movwf	_ledPattern& (0+255),b
  5166  00115E  0012               	return	
  5167  001160                     __end_of_receive_sms_init:
  5168                           	opt stack 0
  5169                           tblptru	equ	0xFF8
  5170                           tblptrh	equ	0xFF7
  5171                           tblptrl	equ	0xFF6
  5172                           tablat	equ	0xFF5
  5173                           prodh	equ	0xFF4
  5174                           prodl	equ	0xFF3
  5175                           intcon	equ	0xFF2
  5176                           postinc0	equ	0xFEE
  5177                           wreg	equ	0xFE8
  5178                           postdec1	equ	0xFE5
  5179                           fsr1l	equ	0xFE1
  5180                           indf2	equ	0xFDF
  5181                           postinc2	equ	0xFDE
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _receive_sms *****************
  5187 ;; Defined at:
  5188 ;;		line 88 in file "sms.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  cnt             1   32[BANK0 ] unsigned char 
  5193 ;;  sms_time        1   31[BANK0 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      unsigned char 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;Total ram usage:        2 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    7
  5210 ;; This function calls:
  5211 ;;		_check_sms
  5212 ;;		_delay5ms
  5213 ;;		_ee_read
  5214 ;; This function is called by:
  5215 ;;		_main
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text15
  5220  001502                     __ptext15:
  5221                           	opt stack 0
  5222  001502                     _receive_sms:
  5223                           	opt stack 23
  5224                           
  5225                           ;sms.c: 90: uint8_t sms_time = ee_read(0x00,0xB8);
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;incstack = 0
  5229  001502  0EB8               	movlw	184
  5230  001504  6E14               	movwf	ee_read@addr,c
  5231  001506  0E00               	movlw	0
  5232  001508  ECF6  F00A         	call	_ee_read
  5233  00150C  0100               	movlb	0	; () banked
  5234  00150E  6F7F               	movwf	receive_sms@sms_time& (0+255),b
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;sms.c: 91: uint8_t cnt = 60;
  5238  001510  0E3C               	movlw	60
  5239  001512  6F80               	movwf	receive_sms@cnt& (0+255),b
  5240                           
  5241                           ;sms.c: 92: while (sms_time-- > 0)
  5242  001514  D00D               	goto	u4510
  5243  001516                     
  5244                           ; BSR set to: 0
  5245                           ;sms.c: 95: {
  5246                           ;sms.c: 96: delay5ms(200);
  5247                           
  5248                           ; BSR set to: 0
  5249  001516  0E00               	movlw	0
  5250  001518  6E15               	movwf	delay5ms@cnt+1,c
  5251  00151A  0EC8               	movlw	200
  5252  00151C  6E14               	movwf	delay5ms@cnt,c
  5253  00151E  ECCE  F00A         	call	_delay5ms	;wreg free
  5254                           
  5255                           ;sms.c: 97: check_sms();
  5256  001522  EC00  F005         	call	_check_sms	;wreg free
  5257  001526  0100               	movlb	0	; () banked
  5258  001528  0780               	decf	receive_sms@cnt& (0+255),f,b
  5259  00152A  2980               	incf	receive_sms@cnt& (0+255),w,b
  5260  00152C  A4D8               	btfss	status,2,c
  5261  00152E  D7F3               	goto	l302
  5262  001530                     u4510:
  5263                           
  5264                           ; BSR set to: 0
  5265                           
  5266                           ; BSR set to: 0
  5267                           
  5268                           ; BSR set to: 0
  5269  001530  077F               	decf	receive_sms@sms_time& (0+255),f,b
  5270  001532  297F               	incf	receive_sms@sms_time& (0+255),w,b
  5271  001534  B4D8               	btfsc	status,2,c
  5272  001536  0012               	return	
  5273  001538  D7F6               	goto	l301
  5274  00153A                     __end_of_receive_sms:
  5275                           	opt stack 0
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           postinc0	equ	0xFEE
  5284                           wreg	equ	0xFE8
  5285                           postdec1	equ	0xFE5
  5286                           fsr1l	equ	0xFE1
  5287                           indf2	equ	0xFDF
  5288                           postinc2	equ	0xFDE
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293 ;; *************** function _ee_read *****************
  5294 ;; Defined at:
  5295 ;;		line 11 in file "eeprom.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  page            1    wreg     unsigned char 
  5298 ;;  addr            1   19[COMRAM] unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  page            1   20[COMRAM] unsigned char 
  5301 ;;  data            1   21[COMRAM] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      unsigned char 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5311 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;Total ram usage:        3 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    2
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_receive_sms
  5322 ;;		_is_first_run
  5323 ;;		_write_defaults
  5324 ;;		_set_pdp_ok
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text16
  5329  0015EC                     __ptext16:
  5330                           	opt stack 0
  5331  0015EC                     _ee_read:
  5332                           	opt stack 25
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;incstack = 0
  5336                           ;ee_read@page stored from wreg
  5337  0015EC  6E15               	movwf	ee_read@page,c
  5338                           
  5339                           ;eeprom.c: 13: unsigned char data;
  5340                           ;eeprom.c: 14: GIE = 0;
  5341  0015EE  9EF2               	bcf	intcon,7,c	;volatile
  5342                           
  5343                           ;eeprom.c: 15: EEADRH = page;
  5344  0015F0  C015  FFAA         	movff	ee_read@page,4010	;volatile
  5345                           
  5346                           ;eeprom.c: 16: EEADR = addr;
  5347  0015F4  C014  FFA9         	movff	ee_read@addr,4009	;volatile
  5348                           
  5349                           ;eeprom.c: 17: CFGS = 0;
  5350  0015F8  9CA6               	bcf	4006,6,c	;volsfr
  5351                           
  5352                           ;eeprom.c: 18: EEPGD = 0;
  5353  0015FA  9EA6               	bcf	4006,7,c	;volsfr
  5354                           
  5355                           ;eeprom.c: 19: RD = 1;
  5356  0015FC  80A6               	bsf	4006,0,c	;volsfr
  5357                           
  5358                           ;eeprom.c: 20: data = EEDATA;
  5359  0015FE  CFA8 F016          	movff	4008,ee_read@data	;volatile
  5360                           
  5361                           ;eeprom.c: 21: GIE = 1;
  5362  001602  8EF2               	bsf	intcon,7,c	;volatile
  5363                           
  5364                           ;eeprom.c: 22: return (data);
  5365  001604  5016               	movf	ee_read@data,w,c
  5366  001606  0012               	return	
  5367  001608                     __end_of_ee_read:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           prodh	equ	0xFF4
  5374                           prodl	equ	0xFF3
  5375                           intcon	equ	0xFF2
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postdec1	equ	0xFE5
  5379                           fsr1l	equ	0xFE1
  5380                           indf2	equ	0xFDF
  5381                           postinc2	equ	0xFDE
  5382                           fsr2h	equ	0xFDA
  5383                           fsr2l	equ	0xFD9
  5384                           status	equ	0xFD8
  5385                           
  5386 ;; *************** function _check_sms *****************
  5387 ;; Defined at:
  5388 ;;		line 104 in file "sms.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  i               1   30[BANK0 ] unsigned char 
  5393 ;;  cmgl           16    2[BANK0 ] const unsigned char [16]
  5394 ;;  cmgl_check      8   18[BANK0 ] const unsigned char [8]
  5395 ;;  msgPlace2       1   29[BANK0 ] unsigned char 
  5396 ;;  msgPlace1       1   28[BANK0 ] unsigned char 
  5397 ;;  msgPlace3       1   27[BANK0 ] unsigned char 
  5398 ;;  temp            1   26[BANK0 ] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;Total ram usage:       31 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    6
  5415 ;; This function calls:
  5416 ;;		_delete_sms
  5417 ;;		_md_uart_write_str_ok
  5418 ;;		_read_sms
  5419 ;;		_str_matches
  5420 ;; This function is called by:
  5421 ;;		_receive_sms
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text17
  5426  000A00                     __ptext17:
  5427                           	opt stack 0
  5428  000A00                     _check_sms:
  5429                           	opt stack 23
  5430                           
  5431                           ;sms.c: 106: const uint8_t cmgl[] = "AT+CMGL=\"ALL\"\r\n";
  5432                           
  5433                           ;incstack = 0
  5434  000A00  0E60               	movlw	low check_sms@F6796
  5435  000A02  6EF6               	movwf	tblptrl,c
  5436  000A04                     	if	1	;There is more than 1 active tblptr byte
  5437  000A04  0EFE               	movlw	high check_sms@F6796
  5438  000A06  6EF7               	movwf	tblptrh,c
  5439  000A08                     	endif
  5440  000A08                     	if	1	;There are 3 active tblptr bytes
  5441  000A08  0E00               	movlw	low (check_sms@F6796 shr (0+16))
  5442  000A0A  6EF8               	movwf	tblptru,c
  5443  000A0C                     	endif
  5444  000A0C  EE20  F062         	lfsr	2,check_sms@cmgl
  5445  000A10  0E0F               	movlw	15
  5446  000A12                     u3960:
  5447  000A12  0009               	tblrd		*+
  5448  000A14  CFF5 FFDE          	movff	tablat,postinc2
  5449  000A18  06E8               	decf	wreg,f,c
  5450  000A1A  E2FB               	bc	u3960
  5451                           
  5452                           ;sms.c: 107: const uint8_t cmgl_check[] = "+CMGL: ";
  5453  000A1C  0E29               	movlw	low check_sms@F6798
  5454  000A1E  6EF6               	movwf	tblptrl,c
  5455  000A20                     	if	1	;There is more than 1 active tblptr byte
  5456  000A20  0EFF               	movlw	high check_sms@F6798
  5457  000A22  6EF7               	movwf	tblptrh,c
  5458  000A24                     	endif
  5459  000A24                     	if	1	;There are 3 active tblptr bytes
  5460  000A24  0E00               	movlw	low (check_sms@F6798 shr (0+16))
  5461  000A26  6EF8               	movwf	tblptru,c
  5462  000A28                     	endif
  5463  000A28  EE20  F072         	lfsr	2,check_sms@cmgl_check
  5464  000A2C  0E07               	movlw	7
  5465  000A2E                     u3970:
  5466  000A2E  0009               	tblrd		*+
  5467  000A30  CFF5 FFDE          	movff	tablat,postinc2
  5468  000A34  06E8               	decf	wreg,f,c
  5469  000A36  E2FB               	bc	u3970
  5470  000A38  0E62               	movlw	low check_sms@cmgl
  5471  000A3A  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5472  000A3C  0E00               	movlw	high check_sms@cmgl
  5473  000A3E  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5474  000A40  0E10               	movlw	16
  5475  000A42  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5476  000A44  0E01               	movlw	1
  5477  000A46  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5478  000A48  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5479  000A4C  0900               	iorlw	0
  5480  000A4E  B4D8               	btfsc	status,2,c
  5481  000A50  D7F3               	goto	l313
  5482                           
  5483                           ;sms.c: 111: for (uint8_t i = 0; i < sizeof(mdRxBuf); i ++)
  5484  000A52  0E00               	movlw	0
  5485  000A54  0100               	movlb	0	; () banked
  5486  000A56  6F7E               	movwf	check_sms@i& (0+255),b
  5487  000A58                     l4161:
  5488                           
  5489                           ; BSR set to: 0
  5490  000A58  0E9F               	movlw	159
  5491  000A5A  657E               	cpfsgt	check_sms@i& (0+255),b
  5492  000A5C  D001               	goto	l315
  5493  000A5E  0012               	return	
  5494  000A60                     l315:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;sms.c: 112: {
  5498                           ;sms.c: 113: if (str_matches((uint8_t *)&mdRxBuf[i], (uint8_t *)&cmgl_check[0], sizeof(c
      +                          mgl_check)) && msgPlace1 == 0 && msgPlace2 == 0 && msgPlace3 == 0)
  5499                           
  5500                           ; BSR set to: 0
  5501  000A60  517E               	movf	check_sms@i& (0+255),w,b
  5502  000A62  0D01               	mullw	1
  5503  000A64  0E00               	movlw	low _mdRxBuf
  5504  000A66  24F3               	addwf	prodl,w,c
  5505  000A68  6E14               	movwf	str_matches@raw,c
  5506  000A6A  0E01               	movlw	high _mdRxBuf
  5507  000A6C  20F4               	addwfc	prodh,w,c
  5508  000A6E  6E15               	movwf	str_matches@raw+1,c
  5509  000A70  0E72               	movlw	low check_sms@cmgl_check
  5510  000A72  6E16               	movwf	str_matches@expected,c
  5511  000A74  0E00               	movlw	high check_sms@cmgl_check
  5512  000A76  6E17               	movwf	str_matches@expected+1,c
  5513  000A78  0E08               	movlw	8
  5514  000A7A  6E18               	movwf	str_matches@len,c
  5515  000A7C  EC61  F00A         	call	_str_matches	;wreg free
  5516  000A80  0900               	iorlw	0
  5517  000A82  B4D8               	btfsc	status,2,c
  5518  000A84  D035               	goto	l317
  5519  000A86  0100               	movlb	0	; () banked
  5520  000A88  517C               	movf	check_sms@msgPlace1& (0+255),w,b
  5521  000A8A  A4D8               	btfss	status,2,c
  5522  000A8C  D031               	goto	l317
  5523                           
  5524                           ; BSR set to: 0
  5525  000A8E  517D               	movf	check_sms@msgPlace2& (0+255),w,b
  5526  000A90  A4D8               	btfss	status,2,c
  5527  000A92  D02E               	goto	l317
  5528                           
  5529                           ; BSR set to: 0
  5530  000A94  517B               	movf	check_sms@msgPlace3& (0+255),w,b
  5531  000A96  A4D8               	btfss	status,2,c
  5532  000A98  D02B               	goto	l317
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;sms.c: 114: {
  5536                           ;sms.c: 115: msgPlace1 = mdRxBuf[(uint8_t)(i + 7)];
  5537  000A9A  C07E  F060         	movff	check_sms@i,??_check_sms
  5538  000A9E  0E07               	movlw	7
  5539  000AA0  2760               	addwf	??_check_sms& (0+255),f,b
  5540  000AA2  5160               	movf	??_check_sms& (0+255),w,b
  5541  000AA4  0D01               	mullw	1
  5542  000AA6  0E00               	movlw	low _mdRxBuf
  5543  000AA8  24F3               	addwf	prodl,w,c
  5544  000AAA  6ED9               	movwf	fsr2l,c
  5545  000AAC  0E01               	movlw	high _mdRxBuf
  5546  000AAE  20F4               	addwfc	prodh,w,c
  5547  000AB0  6EDA               	movwf	fsr2h,c
  5548  000AB2  50DF               	movf	indf2,w,c
  5549  000AB4  6F7C               	movwf	check_sms@msgPlace1& (0+255),b
  5550                           
  5551                           ;sms.c: 116: msgPlace2 = mdRxBuf[(uint8_t)(i + 8)];
  5552  000AB6  C07E  F060         	movff	check_sms@i,??_check_sms
  5553  000ABA  0E08               	movlw	8
  5554  000ABC  2760               	addwf	??_check_sms& (0+255),f,b
  5555  000ABE  5160               	movf	??_check_sms& (0+255),w,b
  5556  000AC0  0D01               	mullw	1
  5557  000AC2  0E00               	movlw	low _mdRxBuf
  5558  000AC4  24F3               	addwf	prodl,w,c
  5559  000AC6  6ED9               	movwf	fsr2l,c
  5560  000AC8  0E01               	movlw	high _mdRxBuf
  5561  000ACA  20F4               	addwfc	prodh,w,c
  5562  000ACC  6EDA               	movwf	fsr2h,c
  5563  000ACE  50DF               	movf	indf2,w,c
  5564  000AD0  6F7D               	movwf	check_sms@msgPlace2& (0+255),b
  5565                           
  5566                           ;sms.c: 117: msgPlace3 = mdRxBuf[(uint8_t)(i + 9)];
  5567  000AD2  C07E  F060         	movff	check_sms@i,??_check_sms
  5568  000AD6  0E09               	movlw	9
  5569  000AD8  2760               	addwf	??_check_sms& (0+255),f,b
  5570  000ADA  5160               	movf	??_check_sms& (0+255),w,b
  5571  000ADC  0D01               	mullw	1
  5572  000ADE  0E00               	movlw	low _mdRxBuf
  5573  000AE0  24F3               	addwf	prodl,w,c
  5574  000AE2  6ED9               	movwf	fsr2l,c
  5575  000AE4  0E01               	movlw	high _mdRxBuf
  5576  000AE6  20F4               	addwfc	prodh,w,c
  5577  000AE8  6EDA               	movwf	fsr2h,c
  5578  000AEA  50DF               	movf	indf2,w,c
  5579  000AEC  6F7B               	movwf	check_sms@msgPlace3& (0+255),b
  5580                           
  5581                           ;sms.c: 118: }
  5582  000AEE  D02D               	goto	l319
  5583  000AF0                     l317:
  5584                           
  5585                           ;sms.c: 119: else if (mdRxBuf[(uint8_t)(i - 1)] == 'O' && mdRxBuf[i] == 'K')
  5586                           
  5587                           ; BSR set to: 0
  5588  000AF0  C07E  F060         	movff	check_sms@i,??_check_sms
  5589  000AF4  0EFF               	movlw	255
  5590  000AF6  0100               	movlb	0	; () banked
  5591  000AF8  2760               	addwf	??_check_sms& (0+255),f,b
  5592  000AFA  5160               	movf	??_check_sms& (0+255),w,b
  5593  000AFC  0D01               	mullw	1
  5594  000AFE  0E00               	movlw	low _mdRxBuf
  5595  000B00  24F3               	addwf	prodl,w,c
  5596  000B02  6ED9               	movwf	fsr2l,c
  5597  000B04  0E01               	movlw	high _mdRxBuf
  5598  000B06  20F4               	addwfc	prodh,w,c
  5599  000B08  6EDA               	movwf	fsr2h,c
  5600  000B0A  0E4F               	movlw	79
  5601  000B0C  18DE               	xorwf	postinc2,w,c
  5602  000B0E  A4D8               	btfss	status,2,c
  5603  000B10  D01C               	goto	l319
  5604                           
  5605                           ; BSR set to: 0
  5606  000B12  517E               	movf	check_sms@i& (0+255),w,b
  5607  000B14  0D01               	mullw	1
  5608  000B16  0E00               	movlw	low _mdRxBuf
  5609  000B18  24F3               	addwf	prodl,w,c
  5610  000B1A  6ED9               	movwf	fsr2l,c
  5611  000B1C  0E01               	movlw	high _mdRxBuf
  5612  000B1E  20F4               	addwfc	prodh,w,c
  5613  000B20  6EDA               	movwf	fsr2h,c
  5614  000B22  0E4B               	movlw	75
  5615  000B24  18DE               	xorwf	postinc2,w,c
  5616  000B26  A4D8               	btfss	status,2,c
  5617  000B28  D010               	goto	l319
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;sms.c: 122: temp = read_sms(msgPlace1, msgPlace2, msgPlace3);
  5621                           
  5622                           ; BSR set to: 0
  5623                           
  5624                           ; BSR set to: 0
  5625                           
  5626                           ; BSR set to: 0
  5627  000B2A  C07D  F023         	movff	check_sms@msgPlace2,read_sms@txtAddr2
  5628  000B2E  C07B  F024         	movff	check_sms@msgPlace3,read_sms@txtAddr3
  5629  000B32  517C               	movf	check_sms@msgPlace1& (0+255),w,b
  5630  000B34  EC5B  F009         	call	_read_sms
  5631  000B38  0100               	movlb	0	; () banked
  5632  000B3A  6F7A               	movwf	check_sms@temp& (0+255),b
  5633                           
  5634                           ;sms.c: 123: delete_sms(msgPlace1, msgPlace2, msgPlace3);
  5635  000B3C  C07D  F023         	movff	check_sms@msgPlace2,delete_sms@p2
  5636  000B40  C07B  F024         	movff	check_sms@msgPlace3,delete_sms@p3
  5637  000B44  517C               	movf	check_sms@msgPlace1& (0+255),w,b
  5638  000B46  EC0A  F009         	call	_delete_sms
  5639  000B4A                     l319:
  5640  000B4A  0100               	movlb	0	; () banked
  5641  000B4C  2B7E               	incf	check_sms@i& (0+255),f,b
  5642  000B4E  D784               	goto	l4161
  5643  000B50                     __end_of_check_sms:
  5644                           	opt stack 0
  5645                           tblptru	equ	0xFF8
  5646                           tblptrh	equ	0xFF7
  5647                           tblptrl	equ	0xFF6
  5648                           tablat	equ	0xFF5
  5649                           prodh	equ	0xFF4
  5650                           prodl	equ	0xFF3
  5651                           intcon	equ	0xFF2
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1l	equ	0xFE1
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           fsr2h	equ	0xFDA
  5659                           fsr2l	equ	0xFD9
  5660                           status	equ	0xFD8
  5661                           
  5662 ;; *************** function _str_matches *****************
  5663 ;; Defined at:
  5664 ;;		line 119 in file "uart.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  raw             2   19[COMRAM] PTR unsigned char 
  5667 ;;		 -> sim_card_ok@buf(32), md_attached@buf(40), registration_ok@buf(32), mdRxBuf(160), 
  5668 ;;  expected        2   21[COMRAM] PTR unsigned char 
  5669 ;;		 -> sim_card_ok@cpinResponse(13), md_attached@gprs_resp(9), registration_ok@cereg_resp(9), registration_ok@creg_resp
      +(8), 
  5670 ;;		 -> check_sms@cmgl_check(8), 
  5671 ;;  len             1   23[COMRAM] unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  i               1   27[COMRAM] unsigned char 
  5674 ;;  matches         1   26[COMRAM] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      unsigned char 
  5677 ;; Registers used:
  5678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        9 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    2
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_check_sms
  5695 ;;		_registration_ok
  5696 ;;		_md_attached
  5697 ;;		_sim_card_ok
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text18
  5702  0014C2                     __ptext18:
  5703                           	opt stack 0
  5704  0014C2                     _str_matches:
  5705                           	opt stack 26
  5706                           
  5707                           ;uart.c: 121: bool matches = 1;
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;incstack = 0
  5711  0014C2  0E01               	movlw	1
  5712  0014C4  6E1B               	movwf	str_matches@matches,c
  5713                           
  5714                           ;uart.c: 122: for (uint8_t i = 0; i < len; i ++)
  5715  0014C6  0E00               	movlw	0
  5716  0014C8  6E1C               	movwf	str_matches@i,c
  5717  0014CA  D015               	goto	l487
  5718  0014CC                     
  5719                           ;uart.c: 123: {
  5720                           ;uart.c: 124: matches &= (bool)(*raw == *expected);
  5721  0014CC  C016  FFD9         	movff	str_matches@expected,fsr2l
  5722  0014D0  C017  FFDA         	movff	str_matches@expected+1,fsr2h
  5723  0014D4  C014  FFE1         	movff	str_matches@raw,fsr1l
  5724  0014D8  C015  FFE2         	movff	str_matches@raw+1,fsr1h
  5725  0014DC  50DE               	movf	postinc2,w,c
  5726  0014DE  18E6               	xorwf	postinc1,w,c
  5727  0014E0  A4D8               	btfss	status,2,c
  5728  0014E2  D002               	goto	u3360
  5729  0014E4  0E01               	movlw	1
  5730  0014E6  D001               	goto	u3370
  5731  0014E8                     u3360:
  5732  0014E8  0E00               	movlw	0
  5733  0014EA                     u3370:
  5734  0014EA  161B               	andwf	str_matches@matches,f,c
  5735                           
  5736                           ;uart.c: 125: raw++;
  5737  0014EC  4A14               	infsnz	str_matches@raw,f,c
  5738  0014EE  2A15               	incf	str_matches@raw+1,f,c
  5739                           
  5740                           ;uart.c: 126: expected++;
  5741  0014F0  4A16               	infsnz	str_matches@expected,f,c
  5742  0014F2  2A17               	incf	str_matches@expected+1,f,c
  5743  0014F4  2A1C               	incf	str_matches@i,f,c
  5744  0014F6                     l487:
  5745  0014F6  5018               	movf	str_matches@len,w,c
  5746  0014F8  5C1C               	subwf	str_matches@i,w,c
  5747  0014FA  A0D8               	btfss	status,0,c
  5748  0014FC  D7E7               	goto	l488
  5749                           
  5750                           ;uart.c: 127: }
  5751                           ;uart.c: 129: return matches;
  5752  0014FE  501B               	movf	str_matches@matches,w,c
  5753  001500  0012               	return	
  5754  001502                     __end_of_str_matches:
  5755                           	opt stack 0
  5756                           tblptru	equ	0xFF8
  5757                           tblptrh	equ	0xFF7
  5758                           tblptrl	equ	0xFF6
  5759                           tablat	equ	0xFF5
  5760                           prodh	equ	0xFF4
  5761                           prodl	equ	0xFF3
  5762                           intcon	equ	0xFF2
  5763                           postinc0	equ	0xFEE
  5764                           wreg	equ	0xFE8
  5765                           postinc1	equ	0xFE6
  5766                           postdec1	equ	0xFE5
  5767                           fsr1h	equ	0xFE2
  5768                           fsr1l	equ	0xFE1
  5769                           indf2	equ	0xFDF
  5770                           postinc2	equ	0xFDE
  5771                           fsr2h	equ	0xFDA
  5772                           fsr2l	equ	0xFD9
  5773                           status	equ	0xFD8
  5774                           
  5775 ;; *************** function _read_sms *****************
  5776 ;; Defined at:
  5777 ;;		line 129 in file "sms.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  txtAddr1        1    wreg     unsigned char 
  5780 ;;  txtAddr2        1   34[COMRAM] unsigned char 
  5781 ;;  txtAddr3        1   35[COMRAM] unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  txtAddr1        1   45[COMRAM] unsigned char 
  5784 ;;  cmgr            9   36[COMRAM] const unsigned char [9]
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      unsigned char 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;Total ram usage:       12 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    5
  5801 ;; This function calls:
  5802 ;;		_md_uart_write_str_ok
  5803 ;; This function is called by:
  5804 ;;		_check_sms
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text19
  5809  0012B6                     __ptext19:
  5810                           	opt stack 0
  5811  0012B6                     _read_sms:
  5812                           	opt stack 23
  5813                           
  5814                           ;incstack = 0
  5815                           ;read_sms@txtAddr1 stored from wreg
  5816  0012B6  6E2E               	movwf	read_sms@txtAddr1,c
  5817                           
  5818                           ;sms.c: 131: const uint8_t cmgr[] = "AT+CMGR=";
  5819  0012B8  0E18               	movlw	low read_sms@F6815
  5820  0012BA  6EF6               	movwf	tblptrl,c
  5821  0012BC                     	if	1	;There is more than 1 active tblptr byte
  5822  0012BC  0EFF               	movlw	high read_sms@F6815
  5823  0012BE  6EF7               	movwf	tblptrh,c
  5824  0012C0                     	endif
  5825  0012C0                     	if	1	;There are 3 active tblptr bytes
  5826  0012C0  0E00               	movlw	low (read_sms@F6815 shr (0+16))
  5827  0012C2  6EF8               	movwf	tblptru,c
  5828  0012C4                     	endif
  5829  0012C4  EE20  F025         	lfsr	2,read_sms@cmgr
  5830  0012C8  0E08               	movlw	8
  5831  0012CA                     u3390:
  5832  0012CA  0009               	tblrd		*+
  5833  0012CC  CFF5 FFDE          	movff	tablat,postinc2
  5834  0012D0  06E8               	decf	wreg,f,c
  5835  0012D2  E2FB               	bc	u3390
  5836                           
  5837                           ;sms.c: 133: md_uart_write_str_ok((uint8_t *)&cmgr[0], sizeof(cmgr), 0);
  5838  0012D4  0E25               	movlw	low read_sms@cmgr
  5839  0012D6  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5840  0012D8  0E00               	movlw	high read_sms@cmgr
  5841  0012DA  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5842  0012DC  0E09               	movlw	9
  5843  0012DE  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5844  0012E0  0E00               	movlw	0
  5845  0012E2  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5846  0012E4  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5847                           
  5848                           ;sms.c: 134: md_uart_write_str_ok((uint8_t *)(&txtAddr1), 1, 0);
  5849  0012E8  0E2E               	movlw	low read_sms@txtAddr1
  5850  0012EA  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5851  0012EC  0E00               	movlw	high read_sms@txtAddr1
  5852  0012EE  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5853  0012F0  0E01               	movlw	1
  5854  0012F2  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5855  0012F4  0E00               	movlw	0
  5856  0012F6  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5857  0012F8  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5858                           
  5859                           ;sms.c: 135: md_uart_write_str_ok((uint8_t *)(&txtAddr2), 1, 0);
  5860  0012FC  0E23               	movlw	low read_sms@txtAddr2
  5861  0012FE  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5862  001300  0E00               	movlw	high read_sms@txtAddr2
  5863  001302  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5864  001304  0E01               	movlw	1
  5865  001306  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5866  001308  0E00               	movlw	0
  5867  00130A  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5868  00130C  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5869                           
  5870                           ;sms.c: 136: md_uart_write_str_ok((uint8_t *)(&txtAddr3), 1, 0);
  5871  001310  0E24               	movlw	low read_sms@txtAddr3
  5872  001312  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5873  001314  0E00               	movlw	high read_sms@txtAddr3
  5874  001316  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5875  001318  0E01               	movlw	1
  5876  00131A  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5877  00131C  0E00               	movlw	0
  5878  00131E  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5879  001320  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5880                           
  5881                           ;sms.c: 137: md_uart_write_str_ok((uint8_t *)"\r\n", 2, 1);
  5882  001324  0EC9               	movlw	low (STR_1+41)
  5883  001326  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5884  001328  0EFF               	movlw	high (STR_1+41)
  5885  00132A  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5886  00132C  0E02               	movlw	2
  5887  00132E  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5888  001330  0E01               	movlw	1
  5889  001332  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5890  001334  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5891                           
  5892                           ;sms.c: 139: return 0;
  5893  001338  0E00               	movlw	0
  5894  00133A  0012               	return	
  5895  00133C                     __end_of_read_sms:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           prodh	equ	0xFF4
  5902                           prodl	equ	0xFF3
  5903                           intcon	equ	0xFF2
  5904                           postinc0	equ	0xFEE
  5905                           wreg	equ	0xFE8
  5906                           postinc1	equ	0xFE6
  5907                           postdec1	equ	0xFE5
  5908                           fsr1h	equ	0xFE2
  5909                           fsr1l	equ	0xFE1
  5910                           indf2	equ	0xFDF
  5911                           postinc2	equ	0xFDE
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _delete_sms *****************
  5917 ;; Defined at:
  5918 ;;		line 142 in file "sms.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  p1              1    wreg     unsigned char 
  5921 ;;  p2              1   34[COMRAM] unsigned char 
  5922 ;;  p3              1   35[COMRAM] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  p1              1   47[COMRAM] unsigned char 
  5925 ;;  cmgd            9   38[COMRAM] const unsigned char [9]
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;Total ram usage:       14 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    5
  5942 ;; This function calls:
  5943 ;;		_md_uart_write_str_ok
  5944 ;; This function is called by:
  5945 ;;		_check_sms
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text20
  5950  001214                     __ptext20:
  5951                           	opt stack 0
  5952  001214                     _delete_sms:
  5953                           	opt stack 23
  5954                           
  5955                           ;incstack = 0
  5956                           ;delete_sms@p1 stored from wreg
  5957  001214  6E30               	movwf	delete_sms@p1,c
  5958                           
  5959                           ;sms.c: 144: const uint8_t cmgd[] = "AT+CMGD=";
  5960  001216  0E0F               	movlw	low delete_sms@F6825
  5961  001218  6EF6               	movwf	tblptrl,c
  5962  00121A                     	if	1	;There is more than 1 active tblptr byte
  5963  00121A  0EFF               	movlw	high delete_sms@F6825
  5964  00121C  6EF7               	movwf	tblptrh,c
  5965  00121E                     	endif
  5966  00121E                     	if	1	;There are 3 active tblptr bytes
  5967  00121E  0E00               	movlw	low (delete_sms@F6825 shr (0+16))
  5968  001220  6EF8               	movwf	tblptru,c
  5969  001222                     	endif
  5970  001222  EE20  F027         	lfsr	2,delete_sms@cmgd
  5971  001226  0E08               	movlw	8
  5972  001228                     u3400:
  5973  001228  0009               	tblrd		*+
  5974  00122A  CFF5 FFDE          	movff	tablat,postinc2
  5975  00122E  06E8               	decf	wreg,f,c
  5976  001230  E2FB               	bc	u3400
  5977                           
  5978                           ;sms.c: 145: md_uart_write_str_ok((uint8_t *)&cmgd[0], sizeof(cmgd), 0);
  5979  001232  0E27               	movlw	low delete_sms@cmgd
  5980  001234  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  5981  001236  0E00               	movlw	high delete_sms@cmgd
  5982  001238  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  5983  00123A  0E09               	movlw	9
  5984  00123C  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5985  00123E  0E00               	movlw	0
  5986  001240  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5987  001242  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  5988                           
  5989                           ;sms.c: 146: md_uart_write_str_ok((uint8_t *)(p1), 1, 0);
  5990  001246  5030               	movf	delete_sms@p1,w,c
  5991  001248  6E25               	movwf	??_delete_sms& (0+255),c
  5992  00124A  6A26               	clrf	(??_delete_sms+1)& (0+255),c
  5993  00124C  C025  F01A         	movff	??_delete_sms,md_uart_write_str_ok@toSend
  5994  001250  C026  F01B         	movff	??_delete_sms+1,md_uart_write_str_ok@toSend+1
  5995  001254  0E01               	movlw	1
  5996  001256  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  5997  001258  0E00               	movlw	0
  5998  00125A  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  5999  00125C  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  6000                           
  6001                           ;sms.c: 147: if (p2 != 0)
  6002  001260  5023               	movf	delete_sms@p2,w,c
  6003  001262  B4D8               	btfsc	status,2,c
  6004  001264  D00D               	goto	l331
  6005                           
  6006                           ;sms.c: 148: md_uart_write_str_ok((uint8_t *)(p2), 1, 0);
  6007  001266  5023               	movf	delete_sms@p2,w,c
  6008  001268  6E25               	movwf	??_delete_sms& (0+255),c
  6009  00126A  6A26               	clrf	(??_delete_sms+1)& (0+255),c
  6010  00126C  C025  F01A         	movff	??_delete_sms,md_uart_write_str_ok@toSend
  6011  001270  C026  F01B         	movff	??_delete_sms+1,md_uart_write_str_ok@toSend+1
  6012  001274  0E01               	movlw	1
  6013  001276  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  6014  001278  0E00               	movlw	0
  6015  00127A  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  6016  00127C  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  6017  001280                     l331:
  6018                           
  6019                           ;sms.c: 149: if (p3 != 0)
  6020  001280  5024               	movf	delete_sms@p3,w,c
  6021  001282  B4D8               	btfsc	status,2,c
  6022  001284  D00D               	goto	l332
  6023                           
  6024                           ;sms.c: 150: md_uart_write_str_ok((uint8_t *)(p3), 1, 0);
  6025  001286  5024               	movf	delete_sms@p3,w,c
  6026  001288  6E25               	movwf	??_delete_sms& (0+255),c
  6027  00128A  6A26               	clrf	(??_delete_sms+1)& (0+255),c
  6028  00128C  C025  F01A         	movff	??_delete_sms,md_uart_write_str_ok@toSend
  6029  001290  C026  F01B         	movff	??_delete_sms+1,md_uart_write_str_ok@toSend+1
  6030  001294  0E01               	movlw	1
  6031  001296  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  6032  001298  0E00               	movlw	0
  6033  00129A  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  6034  00129C  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  6035  0012A0                     l332:
  6036                           
  6037                           ;sms.c: 151: md_uart_write_str_ok((uint8_t *)"\r\n", 2, 1);
  6038  0012A0  0EC9               	movlw	low (STR_1+41)
  6039  0012A2  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  6040  0012A4  0EFF               	movlw	high (STR_1+41)
  6041  0012A6  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  6042  0012A8  0E02               	movlw	2
  6043  0012AA  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  6044  0012AC  0E01               	movlw	1
  6045  0012AE  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  6046  0012B0  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  6047  0012B4  0012               	return		;funcret
  6048  0012B6                     __end_of_delete_sms:
  6049                           	opt stack 0
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           postinc0	equ	0xFEE
  6058                           wreg	equ	0xFE8
  6059                           postinc1	equ	0xFE6
  6060                           postdec1	equ	0xFE5
  6061                           fsr1h	equ	0xFE2
  6062                           fsr1l	equ	0xFE1
  6063                           indf2	equ	0xFDF
  6064                           postinc2	equ	0xFDE
  6065                           fsr2h	equ	0xFDA
  6066                           fsr2l	equ	0xFD9
  6067                           status	equ	0xFD8
  6068                           
  6069 ;; *************** function _md_restart *****************
  6070 ;; Defined at:
  6071 ;;		line 22 in file "module.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;		None
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        0 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    6
  6092 ;; This function calls:
  6093 ;;		_delay5ms
  6094 ;;		_wakeup_module_ok
  6095 ;; This function is called by:
  6096 ;;		_main
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text21
  6101  001638                     __ptext21:
  6102                           	opt stack 0
  6103  001638                     _md_restart:
  6104                           	opt stack 24
  6105                           
  6106                           ;module.c: 24: PORTAbits.RA3 = 0;
  6107                           
  6108                           ;incstack = 0
  6109  001638  9680               	bcf	3968,3,c	;volatile
  6110                           
  6111                           ;module.c: 25: delay5ms(1000);
  6112  00163A  0E03               	movlw	3
  6113  00163C  6E15               	movwf	delay5ms@cnt+1,c
  6114  00163E  0EE8               	movlw	232
  6115  001640  6E14               	movwf	delay5ms@cnt,c
  6116  001642  ECCE  F00A         	call	_delay5ms	;wreg free
  6117                           
  6118                           ;module.c: 26: PORTAbits.RA3 = 1;
  6119  001646  8680               	bsf	3968,3,c	;volatile
  6120                           
  6121                           ;module.c: 27: wakeup_module_ok();
  6122  001648  ECB0  F008         	call	_wakeup_module_ok	;wreg free
  6123  00164C  0012               	return		;funcret
  6124  00164E                     __end_of_md_restart:
  6125                           	opt stack 0
  6126                           tblptru	equ	0xFF8
  6127                           tblptrh	equ	0xFF7
  6128                           tblptrl	equ	0xFF6
  6129                           tablat	equ	0xFF5
  6130                           prodh	equ	0xFF4
  6131                           prodl	equ	0xFF3
  6132                           intcon	equ	0xFF2
  6133                           postinc0	equ	0xFEE
  6134                           wreg	equ	0xFE8
  6135                           postinc1	equ	0xFE6
  6136                           postdec1	equ	0xFE5
  6137                           fsr1h	equ	0xFE2
  6138                           fsr1l	equ	0xFE1
  6139                           indf2	equ	0xFDF
  6140                           postinc2	equ	0xFDE
  6141                           fsr2h	equ	0xFDA
  6142                           fsr2l	equ	0xFD9
  6143                           status	equ	0xFD8
  6144                           
  6145 ;; *************** function _wakeup_module_ok *****************
  6146 ;; Defined at:
  6147 ;;		line 31 in file "module.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  i               1   25[BANK0 ] unsigned char 
  6152 ;;  read_buf       20    0        unsigned char [20]
  6153 ;;  ipr            16    0[BANK0 ] unsigned char [16]
  6154 ;;  initStr         5   16[BANK0 ] unsigned char [5]
  6155 ;;  cnt             1   24[BANK0 ] unsigned char 
  6156 ;;  rsp2_ok         1   23[BANK0 ] unsigned char 
  6157 ;;  rsp1_ok         1   22[BANK0 ] unsigned char 
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      unsigned char 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;Total ram usage:       26 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    5
  6174 ;; This function calls:
  6175 ;;		_delay5ms
  6176 ;;		_md_uart_write_str_ok
  6177 ;; This function is called by:
  6178 ;;		_md_restart
  6179 ;;		_startup_md_ok
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text22
  6184  001160                     __ptext22:
  6185                           	opt stack 0
  6186  001160                     _wakeup_module_ok:
  6187                           	opt stack 24
  6188                           
  6189                           ;module.c: 33: uint8_t read_buf[20];
  6190                           ;module.c: 34: PORTAbits.RA3 = 1;
  6191                           
  6192                           ;incstack = 0
  6193  001160  8680               	bsf	3968,3,c	;volatile
  6194                           
  6195                           ;module.c: 35: uint8_t initStr[] = "AT\r\n";
  6196  001162  EE20  F041         	lfsr	2,wakeup_module_ok@F6758
  6197  001166  EE10  F070         	lfsr	1,wakeup_module_ok@initStr
  6198  00116A  0E04               	movlw	4
  6199  00116C                     u4281:
  6200  00116C  CFDB FFE3          	movff	plusw2,plusw1
  6201  001170  06E8               	decf	wreg,f,c
  6202  001172  E2FC               	bc	u4281
  6203                           
  6204                           ;module.c: 36: uint8_t ipr[] = "AT+IPR=115200\r\n";
  6205  001174  EE20  F031         	lfsr	2,wakeup_module_ok@F6760
  6206  001178  EE10  F060         	lfsr	1,wakeup_module_ok@ipr
  6207  00117C  0E0F               	movlw	15
  6208  00117E                     u4291:
  6209  00117E  CFDB FFE3          	movff	plusw2,plusw1
  6210  001182  06E8               	decf	wreg,f,c
  6211  001184  E2FC               	bc	u4291
  6212                           
  6213                           ;module.c: 37: uint8_t cnt = 15;
  6214  001186  0E0F               	movlw	15
  6215  001188  0100               	movlb	0	; () banked
  6216  00118A  6F78               	movwf	wakeup_module_ok@cnt& (0+255),b
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;module.c: 38: bool rsp1_ok, rsp2_ok;
  6220                           ;module.c: 41: for (uint8_t i = 0; i < 50; i ++)
  6221  00118C  0E00               	movlw	0
  6222  00118E  6F79               	movwf	wakeup_module_ok@i& (0+255),b
  6223  001190                     l4283:
  6224                           
  6225                           ; BSR set to: 0
  6226  001190  0E31               	movlw	49
  6227  001192  6579               	cpfsgt	wakeup_module_ok@i& (0+255),b
  6228  001194  D001               	goto	l778
  6229  001196  D015               	goto	l780
  6230  001198                     l778:
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;module.c: 42: delay5ms(200);
  6234                           
  6235                           ; BSR set to: 0
  6236  001198  0E00               	movlw	0
  6237  00119A  6E15               	movwf	delay5ms@cnt+1,c
  6238  00119C  0EC8               	movlw	200
  6239  00119E  6E14               	movwf	delay5ms@cnt,c
  6240  0011A0  ECCE  F00A         	call	_delay5ms	;wreg free
  6241  0011A4  0100               	movlb	0	; () banked
  6242  0011A6  2B79               	incf	wakeup_module_ok@i& (0+255),f,b
  6243  0011A8  D7F3               	goto	l4283
  6244  0011AA                     
  6245                           ; BSR set to: 0
  6246                           ;module.c: 45: rsp1_ok = md_uart_write_str_ok((unsigned char *)&initStr[0], sizeof(initS
      +                          tr), 1);
  6247                           
  6248                           ; BSR set to: 0
  6249  0011AA  0E70               	movlw	low wakeup_module_ok@initStr
  6250  0011AC  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  6251  0011AE  0E00               	movlw	high wakeup_module_ok@initStr
  6252  0011B0  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  6253  0011B2  0E05               	movlw	5
  6254  0011B4  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  6255  0011B6  0E01               	movlw	1
  6256  0011B8  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  6257  0011BA  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  6258  0011BE  0100               	movlb	0	; () banked
  6259  0011C0  6F76               	movwf	wakeup_module_ok@rsp1_ok& (0+255),b
  6260  0011C2                     l780:
  6261                           
  6262                           ; BSR set to: 0
  6263                           
  6264                           ; BSR set to: 0
  6265  0011C2  0778               	decf	wakeup_module_ok@cnt& (0+255),f,b
  6266  0011C4  2978               	incf	wakeup_module_ok@cnt& (0+255),w,b
  6267  0011C6  B4D8               	btfsc	status,2,c
  6268  0011C8  D003               	goto	u4330
  6269                           
  6270                           ; BSR set to: 0
  6271  0011CA  5176               	movf	wakeup_module_ok@rsp1_ok& (0+255),w,b
  6272  0011CC  B4D8               	btfsc	status,2,c
  6273  0011CE  D7ED               	goto	l781
  6274  0011D0                     u4330:
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;module.c: 47: cnt = 15;
  6278                           
  6279                           ; BSR set to: 0
  6280                           
  6281                           ; BSR set to: 0
  6282  0011D0  0E0F               	movlw	15
  6283  0011D2  6F78               	movwf	wakeup_module_ok@cnt& (0+255),b
  6284                           
  6285                           ;module.c: 48: while (cnt-- > 0 && !rsp2_ok)
  6286  0011D4  D00C               	goto	l785
  6287  0011D6                     
  6288                           ; BSR set to: 0
  6289                           ;module.c: 49: rsp2_ok = md_uart_write_str_ok((unsigned char *)&ipr[0], sizeof(ipr), 1);
  6290                           
  6291                           ; BSR set to: 0
  6292  0011D6  0E60               	movlw	low wakeup_module_ok@ipr
  6293  0011D8  6E1A               	movwf	md_uart_write_str_ok@toSend,c
  6294  0011DA  0E00               	movlw	high wakeup_module_ok@ipr
  6295  0011DC  6E1B               	movwf	md_uart_write_str_ok@toSend+1,c
  6296  0011DE  0E10               	movlw	16
  6297  0011E0  6E1C               	movwf	md_uart_write_str_ok@lengthToSend,c
  6298  0011E2  0E01               	movlw	1
  6299  0011E4  6E1D               	movwf	md_uart_write_str_ok@wantOk,c
  6300  0011E6  EC52  F007         	call	_md_uart_write_str_ok	;wreg free
  6301  0011EA  0100               	movlb	0	; () banked
  6302  0011EC  6F77               	movwf	wakeup_module_ok@rsp2_ok& (0+255),b
  6303  0011EE                     l785:
  6304                           
  6305                           ; BSR set to: 0
  6306                           
  6307                           ; BSR set to: 0
  6308  0011EE  0778               	decf	wakeup_module_ok@cnt& (0+255),f,b
  6309  0011F0  2978               	incf	wakeup_module_ok@cnt& (0+255),w,b
  6310  0011F2  B4D8               	btfsc	status,2,c
  6311  0011F4  D003               	goto	u4350
  6312                           
  6313                           ; BSR set to: 0
  6314  0011F6  5177               	movf	wakeup_module_ok@rsp2_ok& (0+255),w,b
  6315  0011F8  B4D8               	btfsc	status,2,c
  6316  0011FA  D7ED               	goto	l786
  6317  0011FC                     u4350:
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;module.c: 51: return (bool)(rsp1_ok && rsp2_ok);
  6321                           
  6322                           ; BSR set to: 0
  6323                           
  6324                           ; BSR set to: 0
  6325  0011FC  0E00               	movlw	0
  6326  0011FE  6F75               	movwf	_wakeup_module_ok$2062& (0+255),b
  6327  001200  5176               	movf	wakeup_module_ok@rsp1_ok& (0+255),w,b
  6328  001202  B4D8               	btfsc	status,2,c
  6329  001204  D005               	goto	l791
  6330                           
  6331                           ; BSR set to: 0
  6332  001206  5177               	movf	wakeup_module_ok@rsp2_ok& (0+255),w,b
  6333  001208  B4D8               	btfsc	status,2,c
  6334  00120A  D002               	goto	l791
  6335                           
  6336                           ; BSR set to: 0
  6337  00120C  0E01               	movlw	1
  6338  00120E  6F75               	movwf	_wakeup_module_ok$2062& (0+255),b
  6339  001210                     l791:
  6340                           
  6341                           ; BSR set to: 0
  6342  001210  5175               	movf	_wakeup_module_ok$2062& (0+255),w,b
  6343  001212  0012               	return	
  6344  001214                     __end_of_wakeup_module_ok:
  6345                           	opt stack 0
  6346                           tblptru	equ	0xFF8
  6347                           tblptrh	equ	0xFF7
  6348                           tblptrl	equ	0xFF6
  6349                           tablat	equ	0xFF5
  6350                           prodh	equ	0xFF4
  6351                           prodl	equ	0xFF3
  6352                           intcon	equ	0xFF2
  6353                           postinc0	equ	0xFEE
  6354                           wreg	equ	0xFE8
  6355                           postinc1	equ	0xFE6
  6356                           postdec1	equ	0xFE5
  6357                           plusw1	equ	0xFE3
  6358                           fsr1h	equ	0xFE2
  6359                           fsr1l	equ	0xFE1
  6360                           indf2	equ	0xFDF
  6361                           postinc2	equ	0xFDE
  6362                           plusw2	equ	0xFDB
  6363                           fsr2h	equ	0xFDA
  6364                           fsr2l	equ	0xFD9
  6365                           status	equ	0xFD8
  6366                           
  6367 ;; *************** function _md_uart_write_str_ok *****************
  6368 ;; Defined at:
  6369 ;;		line 134 in file "uart.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  toSend          2   25[COMRAM] PTR unsigned char 
  6372 ;;		 -> sim_card_ok@cpin(11), STR_9(12), STR_8(7), init_modem_ok@ledPattern(12), 
  6373 ;;		 -> init_modem_ok@queryVersion(10), init_modem_ok@ledCfg(16), wakeup_module_ok@ipr(16), wakeup_module_ok@initStr(5),
      + 
  6374 ;;		 -> sgact(15), set_pdp_ok@apn_buf(0), cgdcont(20), md_attached@gprs_attach(11), 
  6375 ;;		 -> md_attached@gprs_check(12), scfg(28), socket_configured@scfgext(25), STR_7(10), 
  6376 ;;		 -> registration_ok@cereg(12), registration_ok@creg(11), STR_6(3), RAM(3895), 
  6377 ;;		 -> delete_sms@cmgd(9), STR_5(3), read_sms@txtAddr3(1), read_sms@txtAddr2(1), 
  6378 ;;		 -> read_sms@txtAddr1(1), read_sms@cmgr(9), check_sms@cmgl(16), receive_sms_init@cnmi(15), 
  6379 ;;		 -> receive_sms_init@cpms(26), receive_sms_init@cmgf(13), send_text@ctrlz(1), STR_4(3), 
  6380 ;;		 -> STR_3(9), STR_2(12), STR_1(44), JENS_NUMBER(11), 
  6381 ;;  lengthToSend    1   27[COMRAM] unsigned char 
  6382 ;;  wantOk          1   28[COMRAM] unsigned char 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  i               1   33[COMRAM] unsigned char 
  6385 ;;  count           1   32[COMRAM] unsigned char 
  6386 ;;  temp            1   31[COMRAM] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      unsigned char 
  6389 ;; Registers used:
  6390 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;Total ram usage:        9 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    4
  6403 ;; This function calls:
  6404 ;;		_md_uart_write_str
  6405 ;;		_setup_timer3
  6406 ;; This function is called by:
  6407 ;;		_send_text
  6408 ;;		_receive_sms_init
  6409 ;;		_check_sms
  6410 ;;		_read_sms
  6411 ;;		_delete_sms
  6412 ;;		_registration_ok
  6413 ;;		_md_attached
  6414 ;;		_wakeup_module_ok
  6415 ;;		_init_modem_ok
  6416 ;;		_sim_card_ok
  6417 ;;		_socket_configured
  6418 ;;		_set_pdp_ok
  6419 ;;		_open_pdp_ok
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text23
  6424  000EA4                     __ptext23:
  6425                           	opt stack 0
  6426  000EA4                     _md_uart_write_str_ok:
  6427                           	opt stack 24
  6428                           
  6429                           ;uart.c: 143: md_uart_write_str(toSend, lengthToSend);
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;incstack = 0
  6433  000EA4  C01A  F015         	movff	md_uart_write_str_ok@toSend,md_uart_write_str@data
  6434  000EA8  C01B  F016         	movff	md_uart_write_str_ok@toSend+1,md_uart_write_str@data+1
  6435  000EAC  C01C  F017         	movff	md_uart_write_str_ok@lengthToSend,md_uart_write_str@len
  6436  000EB0  EC00  F00A         	call	_md_uart_write_str	;wreg free
  6437                           
  6438                           ;uart.c: 144: uint8_t temp, i = 0, count = 15;
  6439  000EB4  0E00               	movlw	0
  6440  000EB6  6E22               	movwf	md_uart_write_str_ok@i,c
  6441  000EB8  0E0F               	movlw	15
  6442  000EBA  6E21               	movwf	md_uart_write_str_ok@count,c
  6443                           
  6444                           ;uart.c: 146: if(wantOk)
  6445  000EBC  501D               	movf	md_uart_write_str_ok@wantOk,w,c
  6446  000EBE  B4D8               	btfsc	status,2,c
  6447  000EC0  D074               	goto	l493
  6448                           
  6449                           ;uart.c: 147: {
  6450                           ;uart.c: 148: RC1IE = 0;
  6451  000EC2  9A9D               	bcf	3997,5,c	;volatile
  6452                           
  6453                           ;uart.c: 149: CREN1 = 1;
  6454  000EC4  88AB               	bsf	4011,4,c	;volatile
  6455                           
  6456                           ;uart.c: 150: while (count-- != 0)
  6457  000EC6  D068               	goto	l494
  6458  000EC8                     
  6459                           ;uart.c: 151: {
  6460                           ;uart.c: 152: setup_timer3();
  6461  000EC8  EC2F  F00B         	call	_setup_timer3	;wreg free
  6462                           
  6463                           ;uart.c: 153: while(!TMR3IF)
  6464  000ECC  D062               	goto	l503
  6465  000ECE                     l497:
  6466                           
  6467                           ;uart.c: 156: {
  6468                           ;uart.c: 157: temp = RC1REG;
  6469  000ECE  CFAE F020          	movff	4014,md_uart_write_str_ok@temp	;volatile
  6470                           
  6471                           ;uart.c: 158: mdRxBuf[i++] = temp;
  6472  000ED2  5022               	movf	md_uart_write_str_ok@i,w,c
  6473  000ED4  0D01               	mullw	1
  6474  000ED6  0E00               	movlw	low _mdRxBuf
  6475  000ED8  24F3               	addwf	prodl,w,c
  6476  000EDA  6ED9               	movwf	fsr2l,c
  6477  000EDC  0E01               	movlw	high _mdRxBuf
  6478  000EDE  20F4               	addwfc	prodh,w,c
  6479  000EE0  6EDA               	movwf	fsr2h,c
  6480  000EE2  C020  FFDF         	movff	md_uart_write_str_ok@temp,indf2
  6481  000EE6  2A22               	incf	md_uart_write_str_ok@i,f,c
  6482                           
  6483                           ;uart.c: 160: if (i >= sizeof(mdRxBuf))
  6484  000EE8  0E9F               	movlw	159
  6485  000EEA  6422               	cpfsgt	md_uart_write_str_ok@i,c
  6486  000EEC  D002               	goto	l499
  6487                           
  6488                           ;uart.c: 161: i = sizeof(mdRxBuf) - 1;
  6489  000EEE  0E9F               	movlw	159
  6490  000EF0  6E22               	movwf	md_uart_write_str_ok@i,c
  6491  000EF2                     l499:
  6492                           
  6493                           ;uart.c: 163: if (mdRxBuf[(uint8_t)(i-1)] == 'O' && mdRxBuf[i] == 'K')
  6494  000EF2  C022  F01E         	movff	md_uart_write_str_ok@i,??_md_uart_write_str_ok
  6495  000EF6  0EFF               	movlw	255
  6496  000EF8  261E               	addwf	??_md_uart_write_str_ok,f,c
  6497  000EFA  501E               	movf	??_md_uart_write_str_ok,w,c
  6498  000EFC  0D01               	mullw	1
  6499  000EFE  0E00               	movlw	low _mdRxBuf
  6500  000F00  24F3               	addwf	prodl,w,c
  6501  000F02  6ED9               	movwf	fsr2l,c
  6502  000F04  0E01               	movlw	high _mdRxBuf
  6503  000F06  20F4               	addwfc	prodh,w,c
  6504  000F08  6EDA               	movwf	fsr2h,c
  6505  000F0A  0E4F               	movlw	79
  6506  000F0C  18DE               	xorwf	postinc2,w,c
  6507  000F0E  A4D8               	btfss	status,2,c
  6508  000F10  D010               	goto	l500
  6509  000F12  5022               	movf	md_uart_write_str_ok@i,w,c
  6510  000F14  0D01               	mullw	1
  6511  000F16  0E00               	movlw	low _mdRxBuf
  6512  000F18  24F3               	addwf	prodl,w,c
  6513  000F1A  6ED9               	movwf	fsr2l,c
  6514  000F1C  0E01               	movlw	high _mdRxBuf
  6515  000F1E  20F4               	addwfc	prodh,w,c
  6516  000F20  6EDA               	movwf	fsr2h,c
  6517  000F22  0E4B               	movlw	75
  6518  000F24  18DE               	xorwf	postinc2,w,c
  6519  000F26  A4D8               	btfss	status,2,c
  6520  000F28  D004               	goto	l500
  6521                           
  6522                           ;uart.c: 164: {
  6523                           ;uart.c: 165: RC1IE = 1;
  6524  000F2A  8A9D               	bsf	3997,5,c	;volatile
  6525                           
  6526                           ;uart.c: 166: CREN1 = 0;
  6527  000F2C  98AB               	bcf	4011,4,c	;volatile
  6528                           
  6529                           ;uart.c: 170: return 1;
  6530  000F2E  0E01               	movlw	1
  6531  000F30  0012               	return	
  6532  000F32                     l500:
  6533                           
  6534                           ;uart.c: 172: else if (mdRxBuf[(uint8_t)(i-2)] == 'E' && mdRxBuf[(uint8_t)(i-1)] == 'R' 
      +                          && mdRxBuf[i] == 'R')
  6535  000F32  C022  F01E         	movff	md_uart_write_str_ok@i,??_md_uart_write_str_ok
  6536  000F36  0EFE               	movlw	254
  6537  000F38  261E               	addwf	??_md_uart_write_str_ok,f,c
  6538  000F3A  501E               	movf	??_md_uart_write_str_ok,w,c
  6539  000F3C  0D01               	mullw	1
  6540  000F3E  0E00               	movlw	low _mdRxBuf
  6541  000F40  24F3               	addwf	prodl,w,c
  6542  000F42  6ED9               	movwf	fsr2l,c
  6543  000F44  0E01               	movlw	high _mdRxBuf
  6544  000F46  20F4               	addwfc	prodh,w,c
  6545  000F48  6EDA               	movwf	fsr2h,c
  6546  000F4A  0E45               	movlw	69
  6547  000F4C  18DE               	xorwf	postinc2,w,c
  6548  000F4E  A4D8               	btfss	status,2,c
  6549  000F50  D020               	goto	l503
  6550  000F52  C022  F01E         	movff	md_uart_write_str_ok@i,??_md_uart_write_str_ok
  6551  000F56  0EFF               	movlw	255
  6552  000F58  261E               	addwf	??_md_uart_write_str_ok,f,c
  6553  000F5A  501E               	movf	??_md_uart_write_str_ok,w,c
  6554  000F5C  0D01               	mullw	1
  6555  000F5E  0E00               	movlw	low _mdRxBuf
  6556  000F60  24F3               	addwf	prodl,w,c
  6557  000F62  6ED9               	movwf	fsr2l,c
  6558  000F64  0E01               	movlw	high _mdRxBuf
  6559  000F66  20F4               	addwfc	prodh,w,c
  6560  000F68  6EDA               	movwf	fsr2h,c
  6561  000F6A  0E52               	movlw	82
  6562  000F6C  18DE               	xorwf	postinc2,w,c
  6563  000F6E  A4D8               	btfss	status,2,c
  6564  000F70  D010               	goto	l503
  6565  000F72  5022               	movf	md_uart_write_str_ok@i,w,c
  6566  000F74  0D01               	mullw	1
  6567  000F76  0E00               	movlw	low _mdRxBuf
  6568  000F78  24F3               	addwf	prodl,w,c
  6569  000F7A  6ED9               	movwf	fsr2l,c
  6570  000F7C  0E01               	movlw	high _mdRxBuf
  6571  000F7E  20F4               	addwfc	prodh,w,c
  6572  000F80  6EDA               	movwf	fsr2h,c
  6573  000F82  0E52               	movlw	82
  6574  000F84  18DE               	xorwf	postinc2,w,c
  6575  000F86  A4D8               	btfss	status,2,c
  6576  000F88  D004               	goto	l503
  6577                           
  6578                           ;uart.c: 173: {
  6579                           ;uart.c: 174: RC1IE = 1;
  6580  000F8A  8A9D               	bsf	3997,5,c	;volatile
  6581                           
  6582                           ;uart.c: 175: CREN1 = 0;
  6583  000F8C  98AB               	bcf	4011,4,c	;volatile
  6584                           
  6585                           ;uart.c: 176: return 0;
  6586  000F8E  0E00               	movlw	0
  6587  000F90  0012               	return	
  6588  000F92                     l503:
  6589  000F92  A2A1               	btfss	4001,1,c	;volatile
  6590  000F94  D79C               	goto	l497
  6591                           
  6592                           ;uart.c: 177: }
  6593                           ;uart.c: 179: }
  6594                           ;uart.c: 180: }
  6595                           ;uart.c: 181: TMR3IF = 0;
  6596  000F96  92A1               	bcf	4001,1,c	;volatile
  6597  000F98                     l494:
  6598  000F98  0621               	decf	md_uart_write_str_ok@count,f,c
  6599  000F9A  2821               	incf	md_uart_write_str_ok@count,w,c
  6600  000F9C  A4D8               	btfss	status,2,c
  6601  000F9E  D794               	goto	l495
  6602                           
  6603                           ;uart.c: 182: }
  6604                           ;uart.c: 183: TMR3ON = 0;
  6605  000FA0  90B1               	bcf	4017,0,c	;volatile
  6606                           
  6607                           ;uart.c: 184: RC1IE = 1;
  6608  000FA2  8A9D               	bsf	3997,5,c	;volatile
  6609                           
  6610                           ;uart.c: 185: CREN1 = 0;
  6611  000FA4  98AB               	bcf	4011,4,c	;volatile
  6612                           
  6613                           ;uart.c: 186: return 0;
  6614  000FA6  0E00               	movlw	0
  6615                           
  6616                           ;uart.c: 187: }
  6617  000FA8  0012               	return	
  6618  000FAA                     l493:
  6619                           
  6620                           ;uart.c: 188: else
  6621                           ;uart.c: 189: return 1;
  6622  000FAA  0E01               	movlw	1
  6623  000FAC  0012               	return	
  6624  000FAE                     __end_of_md_uart_write_str_ok:
  6625                           	opt stack 0
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           intcon	equ	0xFF2
  6633                           postinc0	equ	0xFEE
  6634                           wreg	equ	0xFE8
  6635                           postinc1	equ	0xFE6
  6636                           postdec1	equ	0xFE5
  6637                           plusw1	equ	0xFE3
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           plusw2	equ	0xFDB
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function _setup_timer3 *****************
  6648 ;; Defined at:
  6649 ;;		line 173 in file "setup.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;Total ram usage:        0 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    2
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_send_text
  6674 ;;		_md_uart_write_str_ok
  6675 ;;		_registration_ok
  6676 ;;		_sim_card_ok
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text24
  6681  00165E                     __ptext24:
  6682                           	opt stack 0
  6683  00165E                     _setup_timer3:
  6684                           	opt stack 25
  6685                           
  6686                           ;setup.c: 175: T3CON = 0x71;
  6687                           
  6688                           ;incstack = 0
  6689  00165E  0E71               	movlw	113
  6690  001660  6EB1               	movwf	4017,c	;volatile
  6691                           
  6692                           ;setup.c: 176: TMR3H = 0x30;
  6693  001662  0E30               	movlw	48
  6694  001664  6EB3               	movwf	4019,c	;volatile
  6695                           
  6696                           ;setup.c: 177: TMR3L = 0;
  6697  001666  0E00               	movlw	0
  6698  001668  6EB2               	movwf	4018,c	;volatile
  6699  00166A  0012               	return		;funcret
  6700  00166C                     __end_of_setup_timer3:
  6701                           	opt stack 0
  6702                           tblptru	equ	0xFF8
  6703                           tblptrh	equ	0xFF7
  6704                           tblptrl	equ	0xFF6
  6705                           tablat	equ	0xFF5
  6706                           prodh	equ	0xFF4
  6707                           prodl	equ	0xFF3
  6708                           intcon	equ	0xFF2
  6709                           postinc0	equ	0xFEE
  6710                           wreg	equ	0xFE8
  6711                           postinc1	equ	0xFE6
  6712                           postdec1	equ	0xFE5
  6713                           plusw1	equ	0xFE3
  6714                           fsr1h	equ	0xFE2
  6715                           fsr1l	equ	0xFE1
  6716                           indf2	equ	0xFDF
  6717                           postinc2	equ	0xFDE
  6718                           plusw2	equ	0xFDB
  6719                           fsr2h	equ	0xFDA
  6720                           fsr2l	equ	0xFD9
  6721                           status	equ	0xFD8
  6722                           
  6723 ;; *************** function _md_uart_write_str *****************
  6724 ;; Defined at:
  6725 ;;		line 86 in file "uart.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  data            2   20[COMRAM] PTR unsigned char 
  6728 ;;		 -> sim_card_ok@cpin(11), STR_9(12), STR_8(7), init_modem_ok@ledPattern(12), 
  6729 ;;		 -> init_modem_ok@queryVersion(10), init_modem_ok@ledCfg(16), wakeup_module_ok@ipr(16), wakeup_module_ok@initStr(5),
      + 
  6730 ;;		 -> sgact(15), set_pdp_ok@apn_buf(0), cgdcont(20), md_attached@gprs_attach(11), 
  6731 ;;		 -> md_attached@gprs_check(12), scfg(28), socket_configured@scfgext(25), STR_7(10), 
  6732 ;;		 -> registration_ok@cereg(12), registration_ok@creg(11), STR_6(3), RAM(3895), 
  6733 ;;		 -> delete_sms@cmgd(9), STR_5(3), read_sms@txtAddr3(1), read_sms@txtAddr2(1), 
  6734 ;;		 -> read_sms@txtAddr1(1), read_sms@cmgr(9), check_sms@cmgl(16), receive_sms_init@cnmi(15), 
  6735 ;;		 -> receive_sms_init@cpms(26), receive_sms_init@cmgf(13), send_text@ctrlz(1), STR_4(3), 
  6736 ;;		 -> STR_3(9), STR_2(12), STR_1(44), JENS_NUMBER(11), 
  6737 ;;  len             1   22[COMRAM] unsigned char 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  index           1   24[COMRAM] unsigned char 
  6740 ;;  currentChar     1   23[COMRAM] unsigned char 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6750 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;Total ram usage:        5 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    3
  6757 ;; This function calls:
  6758 ;;		_md_uart_send
  6759 ;; This function is called by:
  6760 ;;		_md_uart_write_str_ok
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text25
  6765  001400                     __ptext25:
  6766                           	opt stack 0
  6767  001400                     _md_uart_write_str:
  6768                           	opt stack 24
  6769                           
  6770                           ;uart.c: 88: uint8_t index, currentChar;
  6771                           ;uart.c: 89: index = 0;
  6772                           
  6773                           ;incstack = 0
  6774  001400  0E00               	movlw	0
  6775  001402  6E19               	movwf	md_uart_write_str@index,c
  6776                           
  6777                           ;uart.c: 90: CREN1 = 0;
  6778  001404  98AB               	bcf	4011,4,c	;volatile
  6779  001406  D018               	goto	l466
  6780  001408                     
  6781                           ;uart.c: 92: {
  6782                           ;uart.c: 93: currentChar = *data;
  6783  001408  C015  FFF6         	movff	md_uart_write_str@data,tblptrl
  6784  00140C  C016  FFF7         	movff	md_uart_write_str@data+1,tblptrh
  6785  001410  0E00               	movlw	low (__mediumconst shr (0+16))
  6786  001412  6EF8               	movwf	tblptru,c
  6787  001414  0E0F               	movlw	(high __ramtop+-1)
  6788  001416  64F7               	cpfsgt	tblptrh,c
  6789  001418  D003               	bra	u3237
  6790  00141A  0008               	tblrd		*
  6791  00141C  50F5               	movf	tablat,w,c
  6792  00141E  D005               	bra	u3230
  6793  001420                     u3237:
  6794  001420  CFF6 FFE9          	movff	tblptrl,fsr0l
  6795  001424  CFF7 FFEA          	movff	tblptrh,fsr0h
  6796  001428  50EF               	movf	indf0,w,c
  6797  00142A                     u3230:
  6798  00142A  6E18               	movwf	md_uart_write_str@currentChar,c
  6799                           
  6800                           ;uart.c: 94: md_uart_send(currentChar);
  6801  00142C  5018               	movf	md_uart_write_str@currentChar,w,c
  6802  00142E  EC3C  F00B         	call	_md_uart_send
  6803                           
  6804                           ;uart.c: 95: data++;
  6805  001432  4A15               	infsnz	md_uart_write_str@data,f,c
  6806  001434  2A16               	incf	md_uart_write_str@data+1,f,c
  6807  001436  2A19               	incf	md_uart_write_str@index,f,c
  6808  001438                     l466:
  6809  001438  5017               	movf	md_uart_write_str@len,w,c
  6810  00143A  5C19               	subwf	md_uart_write_str@index,w,c
  6811  00143C  B0D8               	btfsc	status,0,c
  6812  00143E  0012               	return	
  6813  001440  D7E3               	goto	l467
  6814  001442                     __end_of_md_uart_write_str:
  6815                           	opt stack 0
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           prodh	equ	0xFF4
  6821                           prodl	equ	0xFF3
  6822                           intcon	equ	0xFF2
  6823                           indf0	equ	0xFEF
  6824                           postinc0	equ	0xFEE
  6825                           fsr0h	equ	0xFEA
  6826                           fsr0l	equ	0xFE9
  6827                           wreg	equ	0xFE8
  6828                           postinc1	equ	0xFE6
  6829                           postdec1	equ	0xFE5
  6830                           plusw1	equ	0xFE3
  6831                           fsr1h	equ	0xFE2
  6832                           fsr1l	equ	0xFE1
  6833                           indf2	equ	0xFDF
  6834                           postinc2	equ	0xFDE
  6835                           plusw2	equ	0xFDB
  6836                           fsr2h	equ	0xFDA
  6837                           fsr2l	equ	0xFD9
  6838                           status	equ	0xFD8
  6839                           
  6840 ;; *************** function _md_uart_send *****************
  6841 ;; Defined at:
  6842 ;;		line 99 in file "uart.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  data            1    wreg     unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  data            1   19[COMRAM] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;Total ram usage:        1 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    2
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_md_uart_write_str
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text26
  6871  001678                     __ptext26:
  6872                           	opt stack 0
  6873  001678                     _md_uart_send:
  6874                           	opt stack 24
  6875                           
  6876                           ;incstack = 0
  6877                           ;md_uart_send@data stored from wreg
  6878  001678  6E14               	movwf	md_uart_send@data,c
  6879  00167A                     
  6880                           ;uart.c: 101: while (!TRMT1);
  6881  00167A  A2AC               	btfss	4012,1,c	;volatile
  6882  00167C  D7FE               	goto	l3695
  6883                           
  6884                           ;uart.c: 102: TX1REG = data;
  6885  00167E  C014  FFAD         	movff	md_uart_send@data,4013	;volatile
  6886  001682  0012               	return		;funcret
  6887  001684                     __end_of_md_uart_send:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           prodh	equ	0xFF4
  6894                           prodl	equ	0xFF3
  6895                           intcon	equ	0xFF2
  6896                           indf0	equ	0xFEF
  6897                           postinc0	equ	0xFEE
  6898                           fsr0h	equ	0xFEA
  6899                           fsr0l	equ	0xFE9
  6900                           wreg	equ	0xFE8
  6901                           postinc1	equ	0xFE6
  6902                           postdec1	equ	0xFE5
  6903                           plusw1	equ	0xFE3
  6904                           fsr1h	equ	0xFE2
  6905                           fsr1l	equ	0xFE1
  6906                           indf2	equ	0xFDF
  6907                           postinc2	equ	0xFDE
  6908                           plusw2	equ	0xFDB
  6909                           fsr2h	equ	0xFDA
  6910                           fsr2l	equ	0xFD9
  6911                           status	equ	0xFD8
  6912                           
  6913 ;; *************** function _delay5ms *****************
  6914 ;; Defined at:
  6915 ;;		line 55 in file "module.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  cnt             2   19[COMRAM] unsigned int 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  j               1   22[COMRAM] unsigned char 
  6920 ;;  i               1   21[COMRAM] unsigned char 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      void 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;Total ram usage:        4 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    2
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_send_text
  6941 ;;		_receive_sms_init
  6942 ;;		_receive_sms
  6943 ;;		_registration_ok
  6944 ;;		_md_attached
  6945 ;;		_md_restart
  6946 ;;		_wakeup_module_ok
  6947 ;;		_init_modem_ok
  6948 ;;		_sim_card_ok
  6949 ;;		_open_pdp_ok
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text27
  6954  00159C                     __ptext27:
  6955                           	opt stack 0
  6956  00159C                     _delay5ms:
  6957                           	opt stack 26
  6958                           
  6959                           ;module.c: 57: uint8_t i, j;
  6960                           ;module.c: 58: while(cnt-- != 0)
  6961                           
  6962                           ;incstack = 0
  6963  00159C  D00B               	goto	u3340
  6964  00159E                     l3773:
  6965                           
  6966                           ;module.c: 59: {
  6967                           ;module.c: 60: j = 100;
  6968  00159E  0E64               	movlw	100
  6969  0015A0  6E17               	movwf	delay5ms@j,c
  6970                           
  6971                           ;module.c: 61: while(j-- != 0)
  6972  0015A2  D004               	goto	l801
  6973  0015A4                     
  6974                           ;module.c: 62: {
  6975                           ;module.c: 63: i = 32;
  6976  0015A4  0E20               	movlw	32
  6977  0015A6  6E16               	movwf	delay5ms@i,c
  6978  0015A8  2E16               	decfsz	delay5ms@i,f,c
  6979  0015AA  D7FE               	goto	l800
  6980  0015AC                     l801:
  6981  0015AC  0617               	decf	delay5ms@j,f,c
  6982  0015AE  2817               	incf	delay5ms@j,w,c
  6983  0015B0  A4D8               	btfss	status,2,c
  6984  0015B2  D7F8               	goto	l798
  6985  0015B4                     u3340:
  6986  0015B4  0614               	decf	delay5ms@cnt,f,c
  6987  0015B6  A0D8               	btfss	status,0,c
  6988  0015B8  0615               	decf	delay5ms@cnt+1,f,c
  6989  0015BA  2814               	incf	delay5ms@cnt,w,c
  6990  0015BC  E1F0               	bnz	l3773
  6991  0015BE  2815               	incf	delay5ms@cnt+1,w,c
  6992  0015C0  B4D8               	btfsc	status,2,c
  6993  0015C2  0012               	return	
  6994  0015C4  D7EC               	goto	l796
  6995  0015C6                     __end_of_delay5ms:
  6996                           	opt stack 0
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           indf0	equ	0xFEF
  7005                           postinc0	equ	0xFEE
  7006                           fsr0h	equ	0xFEA
  7007                           fsr0l	equ	0xFE9
  7008                           wreg	equ	0xFE8
  7009                           postinc1	equ	0xFE6
  7010                           postdec1	equ	0xFE5
  7011                           plusw1	equ	0xFE3
  7012                           fsr1h	equ	0xFE2
  7013                           fsr1l	equ	0xFE1
  7014                           indf2	equ	0xFDF
  7015                           postinc2	equ	0xFDE
  7016                           plusw2	equ	0xFDB
  7017                           fsr2h	equ	0xFDA
  7018                           fsr2l	equ	0xFD9
  7019                           status	equ	0xFD8
  7020                           
  7021 ;; *************** function _init_pic *****************
  7022 ;; Defined at:
  7023 ;;		line 54 in file "main.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;		None
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:    2
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_main
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text28
  7052  00133C                     __ptext28:
  7053                           	opt stack 0
  7054  00133C                     _init_pic:
  7055                           	opt stack 28
  7056                           
  7057                           ;main.c: 57: OSCCONbits.IDLEN = 0;
  7058                           
  7059                           ;incstack = 0
  7060  00133C  9ED3               	bcf	4051,7,c	;volatile
  7061                           
  7062                           ;main.c: 58: OSCCONbits.IRCF = 0b110;
  7063  00133E  50D3               	movf	4051,w,c	;volatile
  7064  001340  0B8F               	andlw	-113
  7065  001342  0960               	iorlw	96
  7066  001344  6ED3               	movwf	4051,c	;volatile
  7067                           
  7068                           ;main.c: 59: OSCCONbits.OSTS = 1;
  7069  001346  86D3               	bsf	4051,3,c	;volatile
  7070                           
  7071                           ;main.c: 63: ANSELA = 0x01;
  7072  001348  0E01               	movlw	1
  7073  00134A  010F               	movlb	15	; () banked
  7074  00134C  6F38               	movwf	56,b	;volatile
  7075                           
  7076                           ; BSR set to: 15
  7077                           ;main.c: 65: TRISAbits.TRISA0 = 1;
  7078  00134E  8092               	bsf	3986,0,c	;volatile
  7079                           
  7080                           ; BSR set to: 15
  7081                           ;main.c: 66: TRISAbits.TRISA3 = 0;
  7082  001350  9692               	bcf	3986,3,c	;volatile
  7083                           
  7084                           ; BSR set to: 15
  7085                           ;main.c: 67: PORTAbits.RA3 = 0;
  7086  001352  9680               	bcf	3968,3,c	;volatile
  7087                           
  7088                           ;main.c: 70: ANSELC = 0x00;
  7089  001354  0E00               	movlw	0
  7090  001356  6F3A               	movwf	58,b	;volatile
  7091                           
  7092                           ; BSR set to: 15
  7093                           ;main.c: 71: LATBbits.LATB3 = 1;
  7094  001358  868A               	bsf	3978,3,c	;volatile
  7095                           
  7096                           ; BSR set to: 15
  7097                           ;main.c: 72: TRISBbits.TRISB3 = 0;
  7098  00135A  9693               	bcf	3987,3,c	;volatile
  7099                           
  7100                           ; BSR set to: 15
  7101                           ;main.c: 73: PORTCbits.RC6 = 1;
  7102  00135C  8C82               	bsf	3970,6,c	;volatile
  7103                           
  7104                           ; BSR set to: 15
  7105                           ;main.c: 74: TRISCbits.TRISC6 = 0;
  7106  00135E  9C94               	bcf	3988,6,c	;volatile
  7107                           
  7108                           ; BSR set to: 15
  7109                           ;main.c: 75: LATCbits.LATC7 = 1;
  7110  001360  8E8B               	bsf	3979,7,c	;volatile
  7111                           
  7112                           ; BSR set to: 15
  7113                           ;main.c: 76: TRISCbits.TRISC7 = 1;
  7114  001362  8E94               	bsf	3988,7,c	;volatile
  7115                           
  7116                           ;main.c: 79: ANSELB = 0x00;
  7117  001364  0E00               	movlw	0
  7118  001366  6F39               	movwf	57,b	;volatile
  7119                           
  7120                           ; BSR set to: 15
  7121                           ;main.c: 81: TRISBbits.TRISB0 = 1;
  7122  001368  8093               	bsf	3987,0,c	;volatile
  7123                           
  7124                           ; BSR set to: 15
  7125                           ;main.c: 82: TRISCbits.TRISC1 = 1;
  7126  00136A  8294               	bsf	3988,1,c	;volatile
  7127                           
  7128                           ; BSR set to: 15
  7129                           ;main.c: 83: PORTBbits.RB1 = 1;
  7130  00136C  8281               	bsf	3969,1,c	;volatile
  7131                           
  7132                           ; BSR set to: 15
  7133                           ;main.c: 84: TRISBbits.TRISB1 = 1;
  7134  00136E  8293               	bsf	3987,1,c	;volatile
  7135                           
  7136                           ; BSR set to: 15
  7137                           ;main.c: 85: PORTBbits.RB2 = 1;
  7138  001370  8481               	bsf	3969,2,c	;volatile
  7139                           
  7140                           ; BSR set to: 15
  7141                           ;main.c: 86: TRISBbits.TRISB2 = 1;
  7142  001372  8493               	bsf	3987,2,c	;volatile
  7143                           
  7144                           ; BSR set to: 15
  7145                           ;main.c: 87: PORTCbits.RC4 = 1;
  7146  001374  8882               	bsf	3970,4,c	;volatile
  7147                           
  7148                           ; BSR set to: 15
  7149                           ;main.c: 88: TRISCbits.TRISC4 = 0;
  7150  001376  9894               	bcf	3988,4,c	;volatile
  7151                           
  7152                           ; BSR set to: 15
  7153                           ;main.c: 89: PORTBbits.RB4 = 1;
  7154  001378  8881               	bsf	3969,4,c	;volatile
  7155                           
  7156                           ; BSR set to: 15
  7157                           ;main.c: 90: TRISBbits.TRISB4 = 1;
  7158  00137A  8893               	bsf	3987,4,c	;volatile
  7159                           
  7160                           ; BSR set to: 15
  7161                           ;main.c: 91: PORTBbits.RB5 = 1;
  7162  00137C  8A81               	bsf	3969,5,c	;volatile
  7163                           
  7164                           ; BSR set to: 15
  7165                           ;main.c: 92: TRISBbits.TRISB5 = 1;
  7166  00137E  8A93               	bsf	3987,5,c	;volatile
  7167                           
  7168                           ; BSR set to: 15
  7169                           ;main.c: 93: LATBbits.LATB6 = 1;
  7170  001380  8C8A               	bsf	3978,6,c	;volatile
  7171                           
  7172                           ; BSR set to: 15
  7173                           ;main.c: 94: TRISBbits.TRISB6 = 0;
  7174  001382  9C93               	bcf	3987,6,c	;volatile
  7175                           
  7176                           ; BSR set to: 15
  7177                           ;main.c: 95: PORTBbits.RB7 = 1;
  7178  001384  8E81               	bsf	3969,7,c	;volatile
  7179                           
  7180                           ; BSR set to: 15
  7181                           ;main.c: 96: TRISBbits.TRISB7 = 1;
  7182  001386  8E93               	bsf	3987,7,c	;volatile
  7183                           
  7184                           ; BSR set to: 15
  7185                           ;main.c: 98: PORTAbits.RA1 = 0;
  7186  001388  9280               	bcf	3968,1,c	;volatile
  7187                           
  7188                           ; BSR set to: 15
  7189                           ;main.c: 99: TRISAbits.TRISA1 = 0;
  7190  00138A  9292               	bcf	3986,1,c	;volatile
  7191                           
  7192                           ;main.c: 106: T0CON = 0x87;
  7193  00138C  0E87               	movlw	135
  7194  00138E  6ED5               	movwf	4053,c	;volatile
  7195                           
  7196                           ;main.c: 107: TMR0H = ((65535-780)/256);
  7197  001390  0EFC               	movlw	252
  7198  001392  6ED7               	movwf	4055,c	;volatile
  7199                           
  7200                           ;main.c: 108: TMR0L = ((65535-780)%256);
  7201  001394  0EF3               	movlw	243
  7202  001396  6ED6               	movwf	4054,c	;volatile
  7203                           
  7204                           ; BSR set to: 15
  7205                           ;main.c: 109: TMR0IF = 0;
  7206  001398  94F2               	bcf	intcon,2,c	;volatile
  7207                           
  7208                           ; BSR set to: 15
  7209                           ;main.c: 110: TMR0IE = 1;
  7210  00139A  8AF2               	bsf	intcon,5,c	;volatile
  7211                           
  7212                           ; BSR set to: 15
  7213                           ;main.c: 127: INTCONbits.GIE = 1;
  7214  00139C  8EF2               	bsf	intcon,7,c	;volatile
  7215                           
  7216                           ;main.c: 129: ledPattern = STANDBY;
  7217  00139E  0E01               	movlw	1
  7218  0013A0  0100               	movlb	0	; () banked
  7219  0013A2  6FB9               	movwf	_ledPattern& (0+255),b
  7220                           
  7221                           ; BSR set to: 0
  7222  0013A4  0012               	return		;funcret
  7223  0013A6                     __end_of_init_pic:
  7224                           	opt stack 0
  7225                           tblptru	equ	0xFF8
  7226                           tblptrh	equ	0xFF7
  7227                           tblptrl	equ	0xFF6
  7228                           tablat	equ	0xFF5
  7229                           prodh	equ	0xFF4
  7230                           prodl	equ	0xFF3
  7231                           intcon	equ	0xFF2
  7232                           indf0	equ	0xFEF
  7233                           postinc0	equ	0xFEE
  7234                           fsr0h	equ	0xFEA
  7235                           fsr0l	equ	0xFE9
  7236                           wreg	equ	0xFE8
  7237                           postinc1	equ	0xFE6
  7238                           postdec1	equ	0xFE5
  7239                           plusw1	equ	0xFE3
  7240                           fsr1h	equ	0xFE2
  7241                           fsr1l	equ	0xFE1
  7242                           indf2	equ	0xFDF
  7243                           postinc2	equ	0xFDE
  7244                           plusw2	equ	0xFDB
  7245                           fsr2h	equ	0xFDA
  7246                           fsr2l	equ	0xFD9
  7247                           status	equ	0xFD8
  7248                           
  7249 ;; *************** function _isr *****************
  7250 ;; Defined at:
  7251 ;;		line 134 in file "main.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;		None
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;Total ram usage:       18 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    1
  7272 ;; This function calls:
  7273 ;;		_check_leds
  7274 ;; This function is called by:
  7275 ;;		Interrupt level 2
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	intcode
  7280  000008                     __pintcode:
  7281                           	opt stack 0
  7282  000008                     _isr:
  7283                           	opt stack 23
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;incstack = 0
  7287  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7288  00000A  CFFA F002          	movff	pclath,??_isr
  7289  00000E  CFFB F003          	movff	pclatu,??_isr+1
  7290  000012  CFE9 F004          	movff	fsr0l,??_isr+2
  7291  000016  CFEA F005          	movff	fsr0h,??_isr+3
  7292  00001A  CFE1 F006          	movff	fsr1l,??_isr+4
  7293  00001E  CFE2 F007          	movff	fsr1h,??_isr+5
  7294  000022  CFD9 F008          	movff	fsr2l,??_isr+6
  7295  000026  CFDA F009          	movff	fsr2h,??_isr+7
  7296  00002A  CFF3 F00A          	movff	prodl,??_isr+8
  7297  00002E  CFF4 F00B          	movff	prodh,??_isr+9
  7298  000032  CFF6 F00C          	movff	tblptrl,??_isr+10
  7299  000036  CFF7 F00D          	movff	tblptrh,??_isr+11
  7300  00003A  CFF8 F00E          	movff	tblptru,??_isr+12
  7301  00003E  CFF5 F00F          	movff	tablat,??_isr+13
  7302  000042  C04B  F010         	movff	btemp,??_isr+14
  7303  000046  C04C  F011         	movff	btemp+1,??_isr+15
  7304  00004A  C04D  F012         	movff	btemp+2,??_isr+16
  7305  00004E  C04E  F013         	movff	btemp+3,??_isr+17
  7306                           
  7307                           ;main.c: 136: if (TMR0IF)
  7308  000052  A4F2               	btfss	intcon,2,c	;volatile
  7309  000054  D00E               	goto	i2l136
  7310                           
  7311                           ;main.c: 137: {
  7312                           ;main.c: 138: TMR0IF = 0;
  7313  000056  94F2               	bcf	intcon,2,c	;volatile
  7314                           
  7315                           ;main.c: 139: if( HL_freq==0 )
  7316  000058  5048               	movf	_HL_freq,w,c
  7317  00005A  A4D8               	btfss	status,2,c
  7318  00005C  D004               	goto	i2l137
  7319                           
  7320                           ;main.c: 140: {
  7321                           ;main.c: 141: TMR0L = ((65536-360)%256);
  7322  00005E  0E98               	movlw	152
  7323  000060  6ED6               	movwf	4054,c	;volatile
  7324                           
  7325                           ;main.c: 142: TMR0H = ((65536-360)/256);
  7326  000062  0EFE               	movlw	254
  7327  000064  D003               	goto	L2
  7328  000066                     i2l137:
  7329                           
  7330                           ;main.c: 144: else
  7331                           ;main.c: 145: {
  7332                           ;main.c: 146: TMR0L = ((65536-780)%256);
  7333  000066  0EF4               	movlw	244
  7334  000068  6ED6               	movwf	4054,c	;volatile
  7335                           
  7336                           ;main.c: 147: TMR0H = ((65536-780)/256);
  7337  00006A  0EFC               	movlw	252
  7338  00006C                     L2:
  7339  00006C  6ED7               	movwf	4055,c	;volatile
  7340                           
  7341                           ;main.c: 148: }
  7342                           ;main.c: 149: check_leds();
  7343  00006E  ECD7  F007         	call	_check_leds	;wreg free
  7344  000072                     i2l136:
  7345  000072  C013  F04E         	movff	??_isr+17,btemp+3
  7346  000076  C012  F04D         	movff	??_isr+16,btemp+2
  7347  00007A  C011  F04C         	movff	??_isr+15,btemp+1
  7348  00007E  C010  F04B         	movff	??_isr+14,btemp
  7349  000082  C00F  FFF5         	movff	??_isr+13,tablat
  7350  000086  C00E  FFF8         	movff	??_isr+12,tblptru
  7351  00008A  C00D  FFF7         	movff	??_isr+11,tblptrh
  7352  00008E  C00C  FFF6         	movff	??_isr+10,tblptrl
  7353  000092  C00B  FFF4         	movff	??_isr+9,prodh
  7354  000096  C00A  FFF3         	movff	??_isr+8,prodl
  7355  00009A  C009  FFDA         	movff	??_isr+7,fsr2h
  7356  00009E  C008  FFD9         	movff	??_isr+6,fsr2l
  7357  0000A2  C007  FFE2         	movff	??_isr+5,fsr1h
  7358  0000A6  C006  FFE1         	movff	??_isr+4,fsr1l
  7359  0000AA  C005  FFEA         	movff	??_isr+3,fsr0h
  7360  0000AE  C004  FFE9         	movff	??_isr+2,fsr0l
  7361  0000B2  C003  FFFB         	movff	??_isr+1,pclatu
  7362  0000B6  C002  FFFA         	movff	??_isr,pclath
  7363  0000BA  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7364  0000BC  0011               	retfie		f
  7365  0000BE                     __end_of_isr:
  7366                           	opt stack 0
  7367                           pclatu	equ	0xFFB
  7368                           pclath	equ	0xFFA
  7369                           tblptru	equ	0xFF8
  7370                           tblptrh	equ	0xFF7
  7371                           tblptrl	equ	0xFF6
  7372                           tablat	equ	0xFF5
  7373                           prodh	equ	0xFF4
  7374                           prodl	equ	0xFF3
  7375                           intcon	equ	0xFF2
  7376                           indf0	equ	0xFEF
  7377                           postinc0	equ	0xFEE
  7378                           fsr0h	equ	0xFEA
  7379                           fsr0l	equ	0xFE9
  7380                           wreg	equ	0xFE8
  7381                           postinc1	equ	0xFE6
  7382                           postdec1	equ	0xFE5
  7383                           plusw1	equ	0xFE3
  7384                           fsr1h	equ	0xFE2
  7385                           fsr1l	equ	0xFE1
  7386                           indf2	equ	0xFDF
  7387                           postinc2	equ	0xFDE
  7388                           plusw2	equ	0xFDB
  7389                           fsr2h	equ	0xFDA
  7390                           fsr2l	equ	0xFD9
  7391                           status	equ	0xFD8
  7392                           
  7393 ;; *************** function _check_leds *****************
  7394 ;; Defined at:
  7395 ;;		line 154 in file "main.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;Total ram usage:        1 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_isr
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text30
  7423  000FAE                     __ptext30:
  7424                           	opt stack 0
  7425  000FAE                     _check_leds:
  7426                           	opt stack 23
  7427                           
  7428                           ;main.c: 156: switch (ledPattern)
  7429                           
  7430                           ;incstack = 0
  7431  000FAE  D059               	goto	i2l142
  7432  000FB0                     
  7433                           ;main.c: 163: ledPatternCount++;
  7434  000FB0  2A4A               	incf	_ledPatternCount,f,c
  7435                           
  7436                           ;main.c: 164: if (ledPatternCount < 5) PORTCbits.RC4 = 0;
  7437  000FB2  0E05               	movlw	5
  7438  000FB4  604A               	cpfslt	_ledPatternCount,c
  7439  000FB6  D002               	goto	i2l146
  7440  000FB8  9882               	bcf	3970,4,c	;volatile
  7441  000FBA  D001               	goto	i2l147
  7442  000FBC                     i2l146:
  7443                           
  7444                           ;main.c: 165: else PORTCbits.RC4 = 1;
  7445  000FBC  8882               	bsf	3970,4,c	;volatile
  7446  000FBE                     i2l147:
  7447                           
  7448                           ;main.c: 167: LATBbits.LATB3 = 1;
  7449  000FBE  868A               	bsf	3978,3,c	;volatile
  7450                           
  7451                           ;main.c: 168: if (ledPatternCount>=20)
  7452  000FC0  0E13               	movlw	19
  7453  000FC2  644A               	cpfsgt	_ledPatternCount,c
  7454  000FC4  0012               	return	
  7455                           
  7456                           ;main.c: 169: ledPatternCount = 0;
  7457  000FC6  0E00               	movlw	0
  7458  000FC8  6E4A               	movwf	_ledPatternCount,c
  7459                           
  7460                           ;main.c: 170: break;
  7461  000FCA  0012               	return	
  7462  000FCC                     
  7463                           ;main.c: 173: PORTCbits.RC4 = (unsigned int)~PORTCbits.RC4;
  7464  000FCC  A882               	btfss	3970,4,c	;volatile
  7465  000FCE  D002               	goto	i2u305_40
  7466  000FD0  0E01               	movlw	1
  7467  000FD2  D001               	goto	i2u305_46
  7468  000FD4                     i2u305_40:
  7469  000FD4  0E00               	movlw	0
  7470  000FD6                     i2u305_46:
  7471  000FD6  0AFF               	xorlw	255
  7472  000FD8  6E01               	movwf	??_check_leds& (0+255),c
  7473  000FDA  3A01               	swapf	??_check_leds,f,c
  7474  000FDC  5082               	movf	3970,w,c	;volatile
  7475  000FDE  1801               	xorwf	??_check_leds,w,c
  7476  000FE0  0BEF               	andlw	-17
  7477  000FE2  1801               	xorwf	??_check_leds,w,c
  7478  000FE4  6E82               	movwf	3970,c	;volatile
  7479                           
  7480                           ;main.c: 174: LATBbits.LATB3 = 1;
  7481  000FE6  868A               	bsf	3978,3,c	;volatile
  7482                           
  7483                           ;main.c: 175: break;
  7484  000FE8  0012               	return	
  7485  000FEA                     
  7486                           ;main.c: 178: ledPatternCount++;
  7487  000FEA  2A4A               	incf	_ledPatternCount,f,c
  7488                           
  7489                           ;main.c: 179: if (ledPatternCount < 5) { PORTCbits.RC4 = 0; LATBbits.LATB3 = 1; }
  7490  000FEC  0E05               	movlw	5
  7491  000FEE  604A               	cpfslt	_ledPatternCount,c
  7492  000FF0  D003               	goto	i2l151
  7493  000FF2  9882               	bcf	3970,4,c	;volatile
  7494  000FF4  868A               	bsf	3978,3,c	;volatile
  7495  000FF6  0012               	return	
  7496  000FF8                     i2l151:
  7497                           
  7498                           ;main.c: 180: else if (ledPatternCount <= 9) { PORTCbits.RC4 = 1; LATBbits.LATB3 = 0; }
  7499  000FF8  0E0A               	movlw	10
  7500  000FFA  604A               	cpfslt	_ledPatternCount,c
  7501  000FFC  D003               	goto	i2l153
  7502  000FFE  8882               	bsf	3970,4,c	;volatile
  7503  001000  968A               	bcf	3978,3,c	;volatile
  7504  001002  0012               	return	
  7505  001004                     i2l153:
  7506                           
  7507                           ;main.c: 181: else ledPatternCount = 0;
  7508  001004  0E00               	movlw	0
  7509  001006  6E4A               	movwf	_ledPatternCount,c
  7510                           
  7511                           ;main.c: 182: break;
  7512  001008  0012               	return	
  7513  00100A                     
  7514                           ;main.c: 185: ledPatternCount++;
  7515  00100A  2A4A               	incf	_ledPatternCount,f,c
  7516                           
  7517                           ;main.c: 186: if (ledPatternCount == 0 || ledPatternCount == 2) { PORTCbits.RC4 = 0; LAT
      +                          Bbits.LATB3 = 1; }
  7518  00100C  504A               	movf	_ledPatternCount,w,c
  7519  00100E  B4D8               	btfsc	status,2,c
  7520  001010  D004               	goto	i2u309_40
  7521  001012  0E02               	movlw	2
  7522  001014  184A               	xorwf	_ledPatternCount,w,c
  7523  001016  A4D8               	btfss	status,2,c
  7524  001018  D003               	goto	i2l156
  7525  00101A                     i2u309_40:
  7526  00101A  9882               	bcf	3970,4,c	;volatile
  7527  00101C  868A               	bsf	3978,3,c	;volatile
  7528  00101E  0012               	return	
  7529  001020                     i2l156:
  7530                           
  7531                           ;main.c: 187: else if (ledPatternCount == 4 || ledPatternCount == 6) { PORTCbits.RC4 = 1
      +                          ; LATBbits.LATB3 = 0; }
  7532  001020  0E04               	movlw	4
  7533  001022  184A               	xorwf	_ledPatternCount,w,c
  7534  001024  B4D8               	btfsc	status,2,c
  7535  001026  D004               	goto	i2u311_40
  7536  001028  0E06               	movlw	6
  7537  00102A  184A               	xorwf	_ledPatternCount,w,c
  7538  00102C  A4D8               	btfss	status,2,c
  7539  00102E  D003               	goto	i2l160
  7540  001030                     i2u311_40:
  7541  001030  8882               	bsf	3970,4,c	;volatile
  7542  001032  968A               	bcf	3978,3,c	;volatile
  7543  001034  0012               	return	
  7544  001036                     i2l160:
  7545                           
  7546                           ;main.c: 188: else if (ledPatternCount % 2 == 1) { PORTCbits.RC4 = 1; LATBbits.LATB3 = 1
      +                          ; }
  7547  001036  A04A               	btfss	_ledPatternCount,0,c
  7548  001038  D003               	goto	i2l164
  7549  00103A  8882               	bsf	3970,4,c	;volatile
  7550  00103C  868A               	bsf	3978,3,c	;volatile
  7551  00103E  0012               	return	
  7552  001040                     i2l164:
  7553                           
  7554                           ;main.c: 189: else ledPatternCount = 0;
  7555  001040  0E00               	movlw	0
  7556  001042  6E4A               	movwf	_ledPatternCount,c
  7557                           
  7558                           ;main.c: 190: break;
  7559  001044  0012               	return	
  7560  001046                     
  7561                           ;main.c: 193: ledPatternCount++;
  7562  001046  2A4A               	incf	_ledPatternCount,f,c
  7563                           
  7564                           ;main.c: 194: if (ledPatternCount < 5)
  7565  001048  0E05               	movlw	5
  7566  00104A  604A               	cpfslt	_ledPatternCount,c
  7567  00104C  D002               	goto	i2l167
  7568                           
  7569                           ;main.c: 195: LATBbits.LATB3 = 0;
  7570  00104E  968A               	bcf	3978,3,c	;volatile
  7571  001050  D001               	goto	i2l168
  7572  001052                     i2l167:
  7573                           
  7574                           ;main.c: 196: else
  7575                           ;main.c: 197: LATBbits.LATB3 = 1;
  7576  001052  868A               	bsf	3978,3,c	;volatile
  7577  001054                     i2l168:
  7578                           
  7579                           ;main.c: 198: PORTCbits.RC4 = 1;
  7580  001054  8882               	bsf	3970,4,c	;volatile
  7581                           
  7582                           ;main.c: 199: if (ledPatternCount>=20)
  7583  001056  0E13               	movlw	19
  7584  001058  644A               	cpfsgt	_ledPatternCount,c
  7585  00105A  0012               	return	
  7586                           
  7587                           ;main.c: 200: ledPatternCount = 0;
  7588  00105C  0E00               	movlw	0
  7589  00105E  6E4A               	movwf	_ledPatternCount,c
  7590                           
  7591                           ;main.c: 201: }
  7592  001060  0012               	return	
  7593  001062                     i2l142:
  7594  001062  0100               	movlb	0	; () banked
  7595  001064  51B9               	movf	_ledPattern& (0+255),w,b
  7596                           
  7597                           ; Switch size 1, requested type "space"
  7598                           ; Number of cases is 6, Range of values is 0 to 5
  7599                           ; switch strategies available:
  7600                           ; Name         Instructions Cycles
  7601                           ; simple_byte           19    10 (average)
  7602                           ;	Chosen strategy is simple_byte
  7603  001066  0A00               	xorlw	0	; case 0
  7604  001068  B4D8               	btfsc	status,2,c
  7605  00106A  0012               	return	
  7606  00106C  0A01               	xorlw	1	; case 1
  7607  00106E  B4D8               	btfsc	status,2,c
  7608  001070  D79F               	goto	i2l145
  7609  001072  0A03               	xorlw	3	; case 2
  7610  001074  B4D8               	btfsc	status,2,c
  7611  001076  D7AA               	goto	i2l149
  7612  001078  0A01               	xorlw	1	; case 3
  7613  00107A  B4D8               	btfsc	status,2,c
  7614  00107C  D7B6               	goto	i2l150
  7615  00107E  0A07               	xorlw	7	; case 4
  7616  001080  B4D8               	btfsc	status,2,c
  7617  001082  D7C3               	goto	i2l155
  7618  001084  0A01               	xorlw	1	; case 5
  7619  001086  A4D8               	btfss	status,2,c
  7620  001088  0012               	return	
  7621  00108A  D7DD               	goto	i2l166
  7622  00108C                     __end_of_check_leds:
  7623                           	opt stack 0
  7624                           pclatu	equ	0xFFB
  7625                           pclath	equ	0xFFA
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           prodh	equ	0xFF4
  7631                           prodl	equ	0xFF3
  7632                           intcon	equ	0xFF2
  7633                           indf0	equ	0xFEF
  7634                           postinc0	equ	0xFEE
  7635                           fsr0h	equ	0xFEA
  7636                           fsr0l	equ	0xFE9
  7637                           wreg	equ	0xFE8
  7638                           postinc1	equ	0xFE6
  7639                           postdec1	equ	0xFE5
  7640                           plusw1	equ	0xFE3
  7641                           fsr1h	equ	0xFE2
  7642                           fsr1l	equ	0xFE1
  7643                           indf2	equ	0xFDF
  7644                           postinc2	equ	0xFDE
  7645                           plusw2	equ	0xFDB
  7646                           fsr2h	equ	0xFDA
  7647                           fsr2l	equ	0xFD9
  7648                           status	equ	0xFD8
  7649                           pclatu	equ	0xFFB
  7650                           pclath	equ	0xFFA
  7651                           tblptru	equ	0xFF8
  7652                           tblptrh	equ	0xFF7
  7653                           tblptrl	equ	0xFF6
  7654                           tablat	equ	0xFF5
  7655                           prodh	equ	0xFF4
  7656                           prodl	equ	0xFF3
  7657                           intcon	equ	0xFF2
  7658                           indf0	equ	0xFEF
  7659                           postinc0	equ	0xFEE
  7660                           fsr0h	equ	0xFEA
  7661                           fsr0l	equ	0xFE9
  7662                           wreg	equ	0xFE8
  7663                           postinc1	equ	0xFE6
  7664                           postdec1	equ	0xFE5
  7665                           plusw1	equ	0xFE3
  7666                           fsr1h	equ	0xFE2
  7667                           fsr1l	equ	0xFE1
  7668                           indf2	equ	0xFDF
  7669                           postinc2	equ	0xFDE
  7670                           plusw2	equ	0xFDB
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675                           	psect	rparam
  7676  0000                     pclatu	equ	0xFFB
  7677                           pclath	equ	0xFFA
  7678                           tblptru	equ	0xFF8
  7679                           tblptrh	equ	0xFF7
  7680                           tblptrl	equ	0xFF6
  7681                           tablat	equ	0xFF5
  7682                           prodh	equ	0xFF4
  7683                           prodl	equ	0xFF3
  7684                           intcon	equ	0xFF2
  7685                           indf0	equ	0xFEF
  7686                           postinc0	equ	0xFEE
  7687                           fsr0h	equ	0xFEA
  7688                           fsr0l	equ	0xFE9
  7689                           wreg	equ	0xFE8
  7690                           postinc1	equ	0xFE6
  7691                           postdec1	equ	0xFE5
  7692                           plusw1	equ	0xFE3
  7693                           fsr1h	equ	0xFE2
  7694                           fsr1l	equ	0xFE1
  7695                           indf2	equ	0xFDF
  7696                           postinc2	equ	0xFDE
  7697                           plusw2	equ	0xFDB
  7698                           fsr2h	equ	0xFDA
  7699                           fsr2l	equ	0xFD9
  7700                           status	equ	0xFD8
  7701                           
  7702                           	psect	temp
  7703  00004B                     btemp:
  7704                           	opt stack 0
  7705  00004B                     	ds	1
  7706  0000                     int$flags	set	btemp
  7707  0000                     wtemp6	set	btemp+1
  7708                           pclatu	equ	0xFFB
  7709                           pclath	equ	0xFFA
  7710                           tblptru	equ	0xFF8
  7711                           tblptrh	equ	0xFF7
  7712                           tblptrl	equ	0xFF6
  7713                           tablat	equ	0xFF5
  7714                           prodh	equ	0xFF4
  7715                           prodl	equ	0xFF3
  7716                           intcon	equ	0xFF2
  7717                           indf0	equ	0xFEF
  7718                           postinc0	equ	0xFEE
  7719                           fsr0h	equ	0xFEA
  7720                           fsr0l	equ	0xFE9
  7721                           wreg	equ	0xFE8
  7722                           postinc1	equ	0xFE6
  7723                           postdec1	equ	0xFE5
  7724                           plusw1	equ	0xFE3
  7725                           fsr1h	equ	0xFE2
  7726                           fsr1l	equ	0xFE1
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           plusw2	equ	0xFDB
  7730                           fsr2h	equ	0xFDA
  7731                           fsr2l	equ	0xFD9
  7732                           status	equ	0xFD8


Data Sizes:
    Strings     94
    Constant    387
    Data        36
    BSS         162
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      74
    BANK0           160     77      90
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    md_uart_write_str_ok@toSend	PTR unsigned char  size(2) Largest target is 3895
		 -> sim_card_ok@cpin(BANK0[11]), STR_9(CODE[12]), STR_8(CODE[7]), init_modem_ok@ledPattern(BANK0[12]), 
		 -> init_modem_ok@queryVersion(BANK0[10]), init_modem_ok@ledCfg(BANK0[16]), wakeup_module_ok@ipr(BANK0[16]), wakeup_module_ok@initStr(BANK0[5]), 
		 -> sgact(CODE[15]), set_pdp_ok@apn_buf(UNKNOWN), cgdcont(CODE[20]), md_attached@gprs_attach(BANK0[11]), 
		 -> md_attached@gprs_check(BANK0[12]), scfg(CODE[28]), socket_configured@scfgext(COMRAM[25]), STR_7(CODE[10]), 
		 -> registration_ok@cereg(BANK0[12]), registration_ok@creg(BANK0[11]), STR_6(CODE[3]), RAM(DATA[3895]), 
		 -> delete_sms@cmgd(COMRAM[9]), STR_5(CODE[3]), read_sms@txtAddr3(COMRAM[1]), read_sms@txtAddr2(COMRAM[1]), 
		 -> read_sms@txtAddr1(COMRAM[1]), read_sms@cmgr(COMRAM[9]), check_sms@cmgl(BANK0[16]), receive_sms_init@cnmi(BANK0[15]), 
		 -> receive_sms_init@cpms(BANK0[26]), receive_sms_init@cmgf(BANK0[13]), send_text@ctrlz(BANK0[1]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[44]), JENS_NUMBER(BANK0[11]), 

    str_matches@expected	PTR unsigned char  size(2) Largest target is 13
		 -> sim_card_ok@cpinResponse(BANK0[13]), md_attached@gprs_resp(BANK0[9]), registration_ok@cereg_resp(BANK0[9]), registration_ok@creg_resp(BANK0[8]), 
		 -> check_sms@cmgl_check(BANK0[8]), 

    str_matches@raw	PTR unsigned char  size(2) Largest target is 160
		 -> sim_card_ok@buf(BANK0[32]), md_attached@buf(BANK0[40]), registration_ok@buf(BANK0[32]), mdRxBuf(BANK1[160]), 

    md_uart_write_str@data	PTR unsigned char  size(2) Largest target is 3895
		 -> sim_card_ok@cpin(BANK0[11]), STR_9(CODE[12]), STR_8(CODE[7]), init_modem_ok@ledPattern(BANK0[12]), 
		 -> init_modem_ok@queryVersion(BANK0[10]), init_modem_ok@ledCfg(BANK0[16]), wakeup_module_ok@ipr(BANK0[16]), wakeup_module_ok@initStr(BANK0[5]), 
		 -> sgact(CODE[15]), set_pdp_ok@apn_buf(UNKNOWN), cgdcont(CODE[20]), md_attached@gprs_attach(BANK0[11]), 
		 -> md_attached@gprs_check(BANK0[12]), scfg(CODE[28]), socket_configured@scfgext(COMRAM[25]), STR_7(CODE[10]), 
		 -> registration_ok@cereg(BANK0[12]), registration_ok@creg(BANK0[11]), STR_6(CODE[3]), RAM(DATA[3895]), 
		 -> delete_sms@cmgd(COMRAM[9]), STR_5(CODE[3]), read_sms@txtAddr3(COMRAM[1]), read_sms@txtAddr2(COMRAM[1]), 
		 -> read_sms@txtAddr1(COMRAM[1]), read_sms@cmgr(COMRAM[9]), check_sms@cmgl(BANK0[16]), receive_sms_init@cnmi(BANK0[15]), 
		 -> receive_sms_init@cpms(BANK0[26]), receive_sms_init@cmgf(BANK0[13]), send_text@ctrlz(BANK0[1]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[44]), JENS_NUMBER(BANK0[11]), 

    send_text@msg	PTR unsigned char  size(2) Largest target is 44
		 -> STR_1(CODE[44]), 

    send_text@number	PTR unsigned char  size(2) Largest target is 11
		 -> JENS_NUMBER(BANK0[11]), 


Critical Paths under _main in COMRAM

    _startup_md_ok->_registration_ok
    _registration_ok->_md_uart_write_str_ok
    _md_io_setup_ok->_sim_card_ok
    _write_defaults->_ee_read
    _write_defaults->_ee_write
    _sim_card_ok->_md_uart_write_str_ok
    _save_first_run->_ee_write
    _is_first_run->_ee_read
    _init_modem_ok->_md_uart_write_str_ok
    _is_connected->_md_attached
    _md_attached->_md_uart_write_str_ok
    _send_text->_md_uart_write_str_ok
    _receive_sms_init->_md_uart_write_str_ok
    _check_sms->_delete_sms
    _read_sms->_md_uart_write_str_ok
    _delete_sms->_md_uart_write_str_ok
    _wakeup_module_ok->_md_uart_write_str_ok
    _md_uart_write_str_ok->_md_uart_write_str
    _md_uart_write_str->_md_uart_send

Critical Paths under _isr in COMRAM

    _isr->_check_leds

Critical Paths under _main in BANK0

    _startup_md_ok->_registration_ok
    _md_io_setup_ok->_sim_card_ok
    _is_connected->_md_attached
    _receive_sms->_check_sms
    _md_restart->_wakeup_module_ok

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  161844
                           _init_pic
                         _md_restart
                        _receive_sms
                   _receive_sms_init
                          _send_text
                      _startup_md_ok
 ---------------------------------------------------------------------------------
 (1) _startup_md_ok                                        0     0      0   83389
                    _init_uart_modem
                       _is_connected
                     _md_io_setup_ok
                    _registration_ok
                   _wakeup_module_ok
 ---------------------------------------------------------------------------------
 (2) _registration_ok                                     79    79      0   15036
                                             34 COMRAM     2     2      0
                                              0 BANK0     77    77      0
                           _delay5ms
               _md_uart_write_str_ok
                       _setup_timer3
                        _str_matches
 ---------------------------------------------------------------------------------
 (2) _md_io_setup_ok                                       0     0      0   40976
                      _init_modem_ok
                       _is_first_run
                     _save_first_run
                        _sim_card_ok
                     _write_defaults
 ---------------------------------------------------------------------------------
 (3) _write_defaults                                       6     6      0    7774
                                             22 COMRAM     6     6      0
                            _ee_read
                           _ee_write
 ---------------------------------------------------------------------------------
 (3) _sim_card_ok                                         62    62      0   14510
                                             34 COMRAM     1     1      0
                                              0 BANK0     61    61      0
                           _delay5ms
               _md_uart_write_str_ok
                       _setup_timer3
                        _str_matches
 ---------------------------------------------------------------------------------
 (3) _save_first_run                                       0     0      0    4930
                           _ee_write
 ---------------------------------------------------------------------------------
 (4) _ee_write                                             3     1      2    4930
                                             19 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _is_first_run                                         0     0      0     636
                            _ee_read
 ---------------------------------------------------------------------------------
 (3) _init_modem_ok                                       45    45      0   13126
                                              0 BANK0     45    45      0
                           _delay5ms
               _md_uart_write_str_ok
 ---------------------------------------------------------------------------------
 (2) _is_connected                                         0     0      0   14467
                        _md_attached
 ---------------------------------------------------------------------------------
 (3) _md_attached                                         78    78      0   14467
                                             34 COMRAM     2     2      0
                                              0 BANK0     75    75      0
                           _delay5ms
               _md_uart_write_str_ok
                        _str_matches
 ---------------------------------------------------------------------------------
 (2) _init_uart_modem                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_text                                           50    45      5   13242
                                             34 COMRAM     5     0      5
                                              0 BANK0     45    45      0
                           _delay5ms
               _md_uart_write_str_ok
                       _setup_timer3
 ---------------------------------------------------------------------------------
 (1) _receive_sms_init                                    94    94      0   12644
                                              0 BANK0     54    54      0
                           _delay5ms
               _md_uart_write_str_ok
 ---------------------------------------------------------------------------------
 (1) _receive_sms                                          2     2      0   38120
                                             31 BANK0      2     2      0
                          _check_sms
                           _delay5ms
                            _ee_read
 ---------------------------------------------------------------------------------
 (4) _ee_read                                              3     2      1     636
                                             19 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _check_sms                                           31    31      0   35877
                                              0 BANK0     31    31      0
                         _delete_sms
               _md_uart_write_str_ok
                           _read_sms
                        _str_matches
 ---------------------------------------------------------------------------------
 (3) _str_matches                                          9     4      5    1523
                                             19 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (3) _read_sms                                            12    10      2   11313
                                             34 COMRAM    12    10      2
               _md_uart_write_str_ok
 ---------------------------------------------------------------------------------
 (3) _delete_sms                                          14    12      2   11366
                                             34 COMRAM    14    12      2
               _md_uart_write_str_ok
 ---------------------------------------------------------------------------------
 (1) _md_restart                                           0     0      0   14449
                           _delay5ms
                   _wakeup_module_ok
 ---------------------------------------------------------------------------------
 (2) _wakeup_module_ok                                    46    46      0   12910
                                              0 BANK0     26    26      0
                           _delay5ms
               _md_uart_write_str_ok
 ---------------------------------------------------------------------------------
 (3) _md_uart_write_str_ok                                 9     5      4   10994
                                             25 COMRAM     9     5      4
                  _md_uart_write_str
                       _setup_timer3
 ---------------------------------------------------------------------------------
 (4) _setup_timer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _md_uart_write_str                                    5     2      3     347
                                             20 COMRAM     5     2      3
                       _md_uart_send
 ---------------------------------------------------------------------------------
 (5) _md_uart_send                                         1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _delay5ms                                             4     2      2    1539
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 18    18      0       0
                                              1 COMRAM    18    18      0
                         _check_leds
 ---------------------------------------------------------------------------------
 (8) _check_leds                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_pic
   _md_restart
     _delay5ms
     _wakeup_module_ok
       _delay5ms
       _md_uart_write_str_ok
         _md_uart_write_str
           _md_uart_send
         _setup_timer3
   _receive_sms
     _check_sms
       _delete_sms
         _md_uart_write_str_ok
           _md_uart_write_str
             _md_uart_send
           _setup_timer3
       _md_uart_write_str_ok
         _md_uart_write_str
           _md_uart_send
         _setup_timer3
       _read_sms
         _md_uart_write_str_ok
           _md_uart_write_str
             _md_uart_send
           _setup_timer3
       _str_matches
     _delay5ms
     _ee_read
   _receive_sms_init
     _delay5ms
     _md_uart_write_str_ok
       _md_uart_write_str
         _md_uart_send
       _setup_timer3
   _send_text
     _delay5ms
     _md_uart_write_str_ok
       _md_uart_write_str
         _md_uart_send
       _setup_timer3
     _setup_timer3
   _startup_md_ok
     _init_uart_modem
     _is_connected
       _md_attached
         _delay5ms
         _md_uart_write_str_ok
           _md_uart_write_str
             _md_uart_send
           _setup_timer3
         _str_matches
     _md_io_setup_ok
       _init_modem_ok
         _delay5ms
         _md_uart_write_str_ok
           _md_uart_write_str
             _md_uart_send
           _setup_timer3
       _is_first_run
         _ee_read
       _save_first_run
         _ee_write
       _sim_card_ok
         _delay5ms
         _md_uart_write_str_ok
           _md_uart_write_str
             _md_uart_send
           _setup_timer3
         _setup_timer3
         _str_matches
       _write_defaults
         _ee_read
         _ee_write
     _registration_ok
       _delay5ms
       _md_uart_write_str_ok
         _md_uart_write_str
           _md_uart_send
         _setup_timer3
       _setup_timer3
       _str_matches
     _wakeup_module_ok
       _delay5ms
       _md_uart_write_str_ok
         _md_uart_write_str
           _md_uart_send
         _setup_timer3

 _isr (ROOT)
   _check_leds

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A0       7       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4D      5A       5       56.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      4A       1       78.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      12        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 17 16:58:52 2018

                     __CFG_CP0$ON 000000                       __CFG_CP1$ON 000000  
                     __CFG_CP2$ON 000000                       __CFG_CP3$ON 000000  
                     __CFG_CPB$ON 000000                                _RD 007D30  
                     __CFG_CPD$ON 000000                                _WR 007D31  
                    ?_md_attached 0001                               l120 1448  
                             l122 1466                               l123 147E  
                             l301 1526                               l302 1516  
                             l119 144C                               l313 0A38  
                             l331 1280                               l315 0A60  
                             l500 0F32                               l332 12A0  
                             l317 0AF0                               l261 0E5E  
                             l262 0E0E                               l503 0F92  
                             l319 0B4A                               l264 0E14  
                             l265 0E50                               l290 1116  
                             l266 0E3C                               l610 0704  
                             l291 110A                               l267 0E4C  
                             l603 06C0                               l620 07DC  
                             l612 070A                               l293 113E  
                             l605 06E2                               l294 1132  
                             l622 0826                               l614 0738  
                             l287 10EE                               l615 082E  
                             l800 15A8                               l288 10E2  
                             l616 0770                               l801 15AC  
                             l641 0C7C                               l466 1438  
                             l642 0BB0                               l618 07A2  
                             l467 1408                               l643 0C70  
                             l651 0C6A                               l820 08C4  
                             l493 0FAA                               l494 0F98  
                             l830 0936                               l495 0EC8  
                             l487 14F6                               l488 14CC  
                             l648 0C66                               l840 09AA  
                             l824 0914                               l497 0ECE  
                             l825 08FC                               l834 0988  
                             l914 1592                               l850 1556  
                             l499 0EF2                               l835 0970  
                             l819 08DC                               l780 11C2  
                             l844 09FC                               l860 0CCE  
                             l852 1568                               l781 11AA  
                             l829 094E                               l861 0CEC  
                             l791 1210                               l839 09C2  
                             l864 0CF6                               l785 11EE  
                             l849 155A                               l786 11D6  
                             l778 1198                               l866 0D20  
                             l859 0D8C                               l867 0D7C  
                             l875 1494                               l796 159E  
                             l868 0D78                               l869 0D66  
                             l877 14A2                               l798 15A4  
                             l878 14B0                               l879 14BE  
                             _APN FF55                               _GIE 007F97  
                             l997 012E                               _IP1 FF53  
                             _IP2 FF51                               l999 0168  
                             _IP3 FF4F                               _IP4 FF4D  
      __size_of_md_uart_write_str 0042                               _isr 0008  
                             prod 000FF3                               wreg 000FE8  
                      _TXSTA1bits 000FAC               receive_sms@sms_time 007F  
         send_text@ready_to_write 008C                      __CFG_LVP$OFF 000000  
                            l1000 013C                              l1010 024C  
                            l1011 021E                              l1020 04A6  
                            l1004 01BC                              l1013 0294  
                            l1005 018E                              l1022 051C  
                            l1014 0266                              l1023 04EE  
                            l1007 0204                              l1016 041C  
                            l1008 01D6                              l1017 03EE  
                            l1019 04D4                              l4203 06B8  
                            l4127 0D5E                              l4161 0A58  
                            l4283 1190                              l3773 159E  
                            l3695 167A                              ?_isr 0001  
                            _CFGS 007D36                              STR_1 FFA0  
                            STR_2 FFD8                              STR_3 FFEE  
                            STR_4 FFC9                              STR_5 FFC9  
                            STR_6 FFC9                              STR_7 FFE4  
                            STR_8 FFF7                              STR_9 FFCC  
                            u4100 06A0                              u3230 142A  
                            u3400 1228                              u3340 15B4  
                            u3500 0C3E                              u3237 1420  
                            u3430 0B62                              u4070 064C  
                            u3360 14E8                              u3440 0B7E  
                            u3600 08EA                              u4080 0668  
                            u4330 11D0                              u3370 14EA  
                            u3450 0B9A                              u4090 0684  
                            u3460 0BCA                              u3620 0924  
                            u3540 1634                              u4260 083A  
                            u4350 11FC                              u3390 12CA  
                            u4510 1530                              u4270 084C  
                            u3640 095E                              u3560 0880  
                            u4281 116C                              u4450 109E  
                            u3490 0C3C                              u3570 089C  
                            u4291 117E                              u4460 10BA  
                            u3660 0998                              u3580 08B8  
                            u4470 10D6                              u3680 09D2  
                            u4570 0E5C                              u3930 0D6E  
                            u3850 0C9C                              u3770 017C  
                            _RCIE 007CED                              u3860 0CB8  
                            u4590 0E6E                              u3960 0A12  
                            u3970 0A2E                              _WREN 007D32  
          __size_of_startup_md_ok 0040            registration_ok@matches 00AA  
                 __end_of_VERSION FF42                       _str_matches 14C2  
                            _main 1442                              _scfg FF61  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            indf0 000FEF                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 004B                     __CFG_BORV$190 000000  
               ?_receive_sms_init 0001                              prodh 000FF4  
                            prodl 000FF3                              start 00BE  
                   __CFG_IESO$OFF 000000                 ?_wakeup_module_ok 0001  
              ??_receive_sms_init 0023                 ??_init_uart_modem 0014  
                  _md_io_setup_ok 153A                      ___param_bank 000000  
              ??_wakeup_module_ok 0023           __size_of_save_first_run 0010  
                           ??_isr 0002                      _BAUDCON1bits 000FB8  
                           ?_main 0001                             _EEADR 000FA9  
                   ?_md_uart_send 0001                             _EEPGD 007D37  
                           _CREN1 007D5C                             _T0CON 000FD5  
                           _T3CON 000FB1                             _RC1IE 007CED  
                           _RC1IF 007CF5                             _RC2IE 007D1D  
                           _CYCLE FF5A                             i2l142 1062  
                           i2l150 0FEA                             i2l151 0FF8  
                           i2l160 1036                             i2l136 0072  
                           i2l153 1004                             i2l145 0FB0  
                           i2l137 0066                             i2l146 0FBC  
                           i2l155 100A                             i2l147 0FBE  
                           i2l164 1040                             i2l156 1020  
                           i2l149 0FCC                             i2l166 1046  
                           i2l167 1052                             i2l168 1054  
                           _RETRY FF59                             _TMR0H 000FD7  
                           _PORT1 FF4B                             _PORT2 FF49  
                           _PORT3 FF47                             _TMR0L 000FD6  
                           _PORT4 FF45                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _TRMT1 007D61  
                           _TXEN1 007D65                             _TXEN2 007B95  
                           _ZONE1 FF5D                             _ZONE2 FF5C  
                 __end_of_cgdcont FF91                   __end_of_ee_read 1608  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                __CFG_MCLRE$INTMCLR 000000  
                           _sgact FF91                             pclath 000FFA  
                           tablat 000FF5                             plusw1 000FE3  
                           plusw2 000FDB                check_sms@msgPlace1 007C  
              check_sms@msgPlace2 007D                check_sms@msgPlace3 007B  
                           status 000FD8                             wtemp6 004C  
                  __CFG_HFOFST$ON 000000            __end_of_md_io_setup_ok 156C  
                    ?_receive_sms 0001                   __initialization 13A6  
                    __end_of_main 1482                      __end_of_scfg FF7D  
                    md_attached@i 00AA                    send_text@count 0089  
                  send_text@ctrlz 008A                  ??_write_defaults 0017  
                 write_defaults@i 001C                     _startup_md_ok 1482  
               ??_registration_ok 0023                    ??_md_uart_send 0014  
                   ?_is_connected 0001                            ??_main 0031  
             check_sms@cmgl_check 0072                     __activetblptr 000003  
                   ?_is_first_run 0001                 __end_of_LINE_CARD FF45  
                          _EEADRH 000FAA                            _EEDATA 000FA8  
                          _EECON2 000FA7                            _ANSELA 000F38  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                  delete_sms@cmgd 0027                            _RC1REG 000FAE  
                  __CFG_WDTEN$OFF 000000                            _INTCON 000FF2  
                          _RCSTA1 000FAB                            _RCSTA2 000F71  
        registration_ok@creg_resp 00A0                            _TMR0IE 007F95  
                          _SPBRG1 000FAF                            _TMR0IF 007F92  
                          _TMR3IF 007D09                            _TMR3ON 007D88  
                          _TX1REG 000FAD                write_defaults@addr 0019  
              write_defaults@page 001B                write_defaults@temp 001A  
                          _TP_PIN FF5B                  __end_of_delay5ms 15C6  
                    ?_sim_card_ok 0001                   ?_md_io_setup_ok 0001  
                __end_of_ee_write 159C                    __CFG_XINST$OFF 000000  
   __end_ofreceive_sms_init@F6784 FE99     __end_ofreceive_sms_init@F6786 FE37  
   __end_ofreceive_sms_init@F6788 FE7F                 __end_of_TEST_FREQ FF60  
                  __CFG_STVREN$ON 000000      md_uart_write_str@currentChar 0018  
                md_attached@F6790 FED3                  md_attached@F6786 FEA5  
                md_attached@F6788 FEFD                    ?_startup_md_ok 0001  
                __end_of_init_pic 13A6     __size_of_md_uart_write_str_ok 010A  
               __end_of_UNIT_ACCT FF37                         ??_ee_read 0015  
                          clear_0 13EC                    ??_is_connected 0025  
                __end_of_read_sms 133C            __size_of_init_modem_ok 01B0  
                  ??_is_first_run 0017                      __pdataCOMRAM 0031  
            __size_of_md_attached 013A                      __mediumconst FE1C  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8               wakeup_module_ok@cnt 0078  
             wakeup_module_ok@ipr 0060         init_modem_ok@queryVersion 007C  
                      __accesstop 0060           __end_of__initialization 13F6  
                 __CFG_PBADEN$OFF 000000                     ___rparam_used 000001  
                   __end_of_CYCLE FF5B                     __end_of_RETRY FF5A  
                   __end_of_PORT1 FF4D                     __end_of_PORT2 FF4B  
                   __end_of_PORT3 FF49                     __end_of_PORT4 FF47  
                   __end_of_ZONE1 FF5E                     __end_of_ZONE2 FF5D  
                  __pcstackCOMRAM 0001                      __pidataBANK0 166C  
                  _save_first_run 164E                __size_of_check_sms 0150  
                   __end_of_sgact FFA0                __end_of_ENCRYPTION FF58  
            receive_sms_init@cmgf 0089              receive_sms_init@cnmi 007A  
            receive_sms_init@cpms 0060                   send_text@number 0026  
                 _SERVER_ACK_TIME FF5E                   _init_uart_modem 15C6  
                      __pbssBANK1 0100                    receive_sms@cnt 0080  
                      _check_leds 0FAE                     check_sms@cmgl 0062  
                   _init_modem_ok 0850                   __CFG_PLLCFG$OFF 000000  
                   check_sms@temp 007A                      ?_str_matches 0014  
            __end_of_md_uart_send 1684                 _delayBetweenBytes 0046  
          __end_of_save_first_run 165E                __CFG_CCP2MX$PORTC1 000000  
                      _delete_sms 1214                   delete_sms@F6825 FF0F  
            __size_of_receive_sms 0038                   ??_startup_md_ok 0025  
              __CFG_CCP3MX$PORTB5 000000                      str_matches@i 001C  
              __size_of_send_text 010A         __size_of_receive_sms_init 00D4  
                      _ledPattern 00B9         __size_of_wakeup_module_ok 00B4  
                  sim_card_ok@buf 0060                         ?_delay5ms 0014  
                       ?_ee_write 0014                           _SPBRGH1 000FB0  
                         _HL_freq 0048               __end_of_ACCESS_CODE FF3D  
                         _VERSION FF3D                    str_matches@len 0018  
                  str_matches@raw 0014                    ?_init_modem_ok 0001  
               __end_of_check_sms 0B50              __end_of_is_connected 168C  
                       ?_init_pic 0001                         ?_read_sms 0023  
                      _md_restart 1638        md_uart_write_str_ok@toSend 001A  
                 _registration_ok 063A                   __CFG_PWRTEN$OFF 000000  
      md_uart_write_str_ok@wantOk 001D              __end_of_is_first_run 1638  
                         __Hparam 0000                           __Lparam 0000  
                 ?_save_first_run 0001         md_uart_write_str_ok@count 0021  
            __size_of_sim_card_ok 0110                      _inListenMode 00AD  
                         _cgdcont FF7D                        check_sms@i 007E  
                         _ee_read 15EC                           __pcinit 13A6  
                         __ramtop 1000                           _mdRxBuf 0100  
                         __ptext0 1442                           __ptext1 1482  
                         __ptext2 063A                           __ptext3 153A  
                         __ptext4 00C2                           __ptext5 0C8A  
                         __ptext6 164E                           __ptext7 156C  
                         __ptext8 1620                           __ptext9 0850  
                 _ledPatternCount 004A           __end_of_SERVER_ACK_TIME FF5F  
                    __size_of_isr 00B6           __end_of_init_uart_modem 15EC  
                      ??_delay5ms 0016                  sim_card_ok@F6791 FEBD  
                sim_card_ok@F6793 FE7F                        ??_ee_write 0016  
           md_attached@gprs_check 0088                         _LINE_CARD FF42  
        __end_ofmd_attached@F6790 FEDE          __end_ofmd_attached@F6786 FEB1  
        __end_ofmd_attached@F6788 FF06              end_of_initialization 13F6  
                ??_md_io_setup_ok 0024                       ?_check_leds 0001  
               __end_of_send_text 0EA4           __end_ofdelete_sms@F6825 FF18  
                      ??_init_pic 0014                  sim_card_ok@count 0098  
                      ??_read_sms 0025                       ?_delete_sms 0023  
                         postdec1 000FE5                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                       _TEST_FREQ FF5F                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
                     _ACCESS_CODE FF37        __end_ofinit_modem_ok@F6780 FE60  
      __end_ofinit_modem_ok@F6782 FEF3        __end_ofinit_modem_ok@F6784 FEA5  
                    read_sms@cmgr 0025             __end_ofread_sms@F6815 FF21  
                       _UNIT_ACCT FF31      __end_ofopen_connection@F6810 FED3  
    __end_ofopen_connection@F6812 FEFD                  __CFG_FOSC$INTIO7 000000  
                   ?_setup_timer3 0001                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
           __end_of_SMS_WAIT_TIME FF59                   ??_init_modem_ok 0023  
           __size_of_md_uart_send 000C      __end_of_md_uart_write_str_ok 0FAE  
         __end_of_registration_ok 0850                       ?_md_restart 0001  
            __size_of_str_matches 0040                    __end_of_TP_PIN FF5C  
           receive_sms_init@F6784 FE8C             receive_sms_init@F6786 FE1D  
           receive_sms_init@F6788 FE70                       _BAUDCONbits 000FB8  
                   __pidataCOMRAM 1608                     ??_md_attached 0023  
             __size_of_check_leds 00DE                  _receive_sms_init 108C  
                    _md_uart_send 1678                    md_attached@buf 0060  
                  md_attached@cnt 00A8                  _wakeup_module_ok 1160  
                  ??_setup_timer3 0014                 wakeup_module_ok@i 0079  
             start_initialization 13A6                  ?_init_uart_modem 0001  
                     __end_of_APN FF57                       __end_of_IP1 FF55  
                     __end_of_IP2 FF53                       __end_of_IP3 FF51  
                     __end_of_IP4 FF4F      __end_ofregistration_ok@F6760 FEBD  
    __end_ofregistration_ok@F6762 FF0F      __end_ofregistration_ok@F6756 FEE9  
    __end_ofregistration_ok@F6758 FF29                       __end_of_isr 00BE  
         __size_of_write_defaults 0578               __size_of_delete_sms 00A2  
           __size_of_is_connected 0008                     send_text@temp 0088  
            _registration_ok$1870 00A8             __size_of_is_first_run 0018  
                 init_modem_ok@c1 0088                   init_modem_ok@c2 0089  
                 init_modem_ok@c3 008A                   init_modem_ok@c4 008B  
                 init_modem_ok@c5 0087               init_modem_ok@ledCfg 0060  
                  check_sms@F6796 FE60                    check_sms@F6798 FF29  
                     __pdataBANK0 00AD               init_modem_ok@repeat 008C  
                    _is_connected 1684               __size_of_md_restart 0016  
                     __pbssCOMRAM 0049                      _is_first_run 1620  
                   __pcstackBANK0 0060               __end_of_md_attached 0C8A  
md_uart_write_str_ok@lengthToSend 001C                 __size_of_delay5ms 002A  
               __size_of_ee_write 0030                  ?_registration_ok 0001  
                ??_save_first_run 0017                         _check_sms 0A00  
                       __pnvBANK0 00B9                     ??_receive_sms 0031  
               __size_of_init_pic 006A                 __size_of_read_sms 0086  
            open_connection@F6810 FEC8              open_connection@F6812 FEF3  
        __end_ofsim_card_ok@F6791 FEC8          __end_ofsim_card_ok@F6793 FE8C  
          __end_ofcheck_sms@F6796 FE70            __end_ofcheck_sms@F6798 FF31  
                       __pintcode 0008                     __pmediumconst FE1C  
           __end_of_startup_md_ok 14C2            socket_configured@F6782 FE37  
            _md_uart_write_str_ok 0EA4                          ?_ee_read 0014  
                __CFG_PRICLKEN$ON 000000                        send_text@i 008B  
                       delay5ms@i 0016                         delay5ms@j 0017  
          md_uart_write_str@index 0019                      ??_check_leds 0001  
            md_attached@gprs_resp 009F                          _LATBbits 000F8A  
                        _LATCbits 000F8B                     ??_sim_card_ok 0023  
                      ?_check_sms 0001                   sim_card_ok@cpin 008D  
                 sim_card_ok@temp 009A                         _send_text 0D9A  
                        i2u311_40 1030                          i2u305_40 0FD4  
            __end_of_setup_timer3 166C                          i2u305_46 0FD6  
                    ??_delete_sms 0025                          i2u309_40 101A  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                registration_ok@i 00AC                  registration_ok@j 00AB  
                __CFG_WDTPS$32768 000000              registration_ok@F6760 FEB1  
            registration_ok@F6762 FF06              registration_ok@F6756 FEDE  
            registration_ok@F6758 FF21                       _JENS_NUMBER 00AE  
             __end_of_receive_sms 153A             ?_md_uart_write_str_ok 001A  
                     _md_attached 0B50                __end_of_check_leds 108C  
            registration_ok@cereg 0060           init_modem_ok@ledPattern 0070  
                  _write_defaults 00C2                __end_of_delete_sms 12B6  
                       copy_data0 13BA                         copy_data1 13DA  
              init_modem_ok@F6780 FE50                init_modem_ok@F6782 FEE9  
              init_modem_ok@F6784 FE99                      send_text@buf 0060  
                    send_text@len 0025                      send_text@msg 0023  
                    ??_md_restart 0023          __end_of_receive_sms_init 1160  
                    delete_sms@p1 0030                      delete_sms@p2 0023  
                    delete_sms@p3 0024          __end_of_wakeup_module_ok 1214  
             __end_of_PROGRAM_ACK FF61                        ?_send_text 0023  
                        __Hrparam 0000                      ee_write@addr 0014  
                    ee_write@data 0015                      ee_write@page 0016  
                        __Lrparam 0000                __CFG_BOREN$SBORDIS 000000  
               __CFG_P2BMX$PORTB5 000000                init_modem_ok@index 0086  
             __end_of_sim_card_ok 0D9A                sim_card_ok@matches 0099  
                __size_of_ee_read 001C            __end_of_write_defaults 063A  
                     ee_read@addr 0014                       ee_read@data 0016  
              __end_of_md_restart 164E                       ee_read@page 0015  
                        _delay5ms 159C                          _ee_write 156C  
               _md_uart_write_str 1400                          __ptext10 1684  
                        __ptext11 0B50                          __ptext20 1214  
                        __ptext12 15C6                          __ptext21 1638  
                        __ptext13 0D9A                          __ptext30 0FAE  
                        __ptext22 1160                          __ptext14 108C  
                        __ptext23 0EA4                          __ptext15 1502  
                        __ptext24 165E                          __ptext16 15EC  
                        __ptext25 1400                          __ptext17 0A00  
                        __ptext26 1678                          __ptext18 14C2  
                        __ptext27 159C                          __ptext19 12B6  
                        __ptext28 133C                        _ENCRYPTION FF57  
                    sim_card_ok@i 009C                      sim_card_ok@j 009B  
                     delay5ms@cnt 0014                ?_md_uart_write_str 0015  
           __end_of_init_modem_ok 0A00               md_attached@attached 00A9  
                   ??_str_matches 0019                     __size_of_main 0040  
                        _init_pic 133C             md_uart_write_str@data 0015  
                        _read_sms 12B6                       ??_check_sms 0060  
             ??_md_uart_write_str 0018                       _receive_sms 1502  
                  _saveINTCONbits 0049             md_uart_write_str_ok@i 0022  
                      _RC1STAbits 000FAB           __size_of_md_io_setup_ok 0032  
          ??_md_uart_write_str_ok 001E                          int$flags 004B  
          md_attached@gprs_attach 0094               registration_ok@creg 006C  
             registration_ok@temp 00A9                   ?_write_defaults 0001  
       __end_of_md_uart_write_str 1442                        _INTCONbits 000FF2  
         sim_card_ok@cpinResponse 0080             _wakeup_module_ok$2062 0075  
        md_uart_write_str_ok@temp 0020                          intlevel2 0000  
                     _PROGRAM_ACK FF60          __size_of_init_uart_modem 0026  
           __size_of_setup_timer3 000E                  read_sms@txtAddr1 002E  
                read_sms@txtAddr2 0023                  read_sms@txtAddr3 0024  
                      _RCSTA1bits 000FAB                       _sim_card_ok 0C8A  
                     ??_send_text 0028              md_uart_write_str@len 0017  
       registration_ok@cereg_resp 0077                        _OSCCONbits 000FD3  
             __end_of_str_matches 1502                  md_uart_send@data 0014  
              registration_ok@buf 0080           wakeup_module_ok@initStr 0070  
             str_matches@expected 0016           wakeup_module_ok@rsp1_ok 0076  
         wakeup_module_ok@rsp2_ok 0077                     read_sms@F6815 FF18  
                    _setup_timer3 165E             wakeup_module_ok@F6760 0031  
               __CFG_T3CMX$PORTC0 000000             wakeup_module_ok@F6758 0041  
                   _SMS_WAIT_TIME FF58                str_matches@matches 001B  
  __end_ofsocket_configured@F6782 FE50          __size_of_registration_ok 0216  
