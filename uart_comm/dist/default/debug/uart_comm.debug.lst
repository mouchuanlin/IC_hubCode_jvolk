

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 04 14:26:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F26K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  001B14                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _VERSION
    76  001B14  32                 	db	50
    77  001B15  30                 	db	48
    78  001B16  31                 	db	49
    79  001B17  30                 	db	48
    80  001B18  00                 	db	0
    81                           
    82                           	psect	smallconst
    83  001000                     __psmallconst:
    84                           	opt stack 0
    85  001000  00                 	db	0
    86  001001                     init_modem_io_ok@F6749:
    87                           	opt stack 0
    88  001001  41                 	db	65
    89  001002  54                 	db	84
    90  001003  23                 	db	35
    91  001004  47                 	db	71
    92  001005  50                 	db	80
    93  001006  49                 	db	73
    94  001007  4F                 	db	79
    95  001008  3D                 	db	61
    96  001009  37                 	db	55
    97  00100A  2C                 	db	44
    98  00100B  30                 	db	48
    99  00100C  2C                 	db	44
   100  00100D  32                 	db	50
   101  00100E  0D                 	db	13
   102  00100F  0A                 	db	10
   103  001010  00                 	db	0
   104  001011                     __end_ofinit_modem_io_ok@F6749:
   105                           	opt stack 0
   106  001011                     wakeup_modem_ok@F6742:
   107                           	opt stack 0
   108  001011  41                 	db	65
   109  001012  54                 	db	84
   110  001013  2B                 	db	43
   111  001014  49                 	db	73
   112  001015  50                 	db	80
   113  001016  52                 	db	82
   114  001017  3D                 	db	61
   115  001018  31                 	db	49
   116  001019  31                 	db	49
   117  00101A  35                 	db	53
   118  00101B  32                 	db	50
   119  00101C  30                 	db	48
   120  00101D  30                 	db	48
   121  00101E  0D                 	db	13
   122  00101F  0A                 	db	10
   123  001020  00                 	db	0
   124  001021                     __end_ofwakeup_modem_ok@F6742:
   125                           	opt stack 0
   126  001021                     sim_card_ok@F6760:
   127                           	opt stack 0
   128  001021  2B                 	db	43
   129  001022  43                 	db	67
   130  001023  50                 	db	80
   131  001024  49                 	db	73
   132  001025  4E                 	db	78
   133  001026  3A                 	db	58
   134  001027  20                 	db	32
   135  001028  52                 	db	82
   136  001029  45                 	db	69
   137  00102A  41                 	db	65
   138  00102B  44                 	db	68
   139  00102C  59                 	db	89
   140  00102D  00                 	db	0
   141  00102E                     __end_ofsim_card_ok@F6760:
   142                           	opt stack 0
   143  00102E                     init_modem_io_ok@F6753:
   144                           	opt stack 0
   145  00102E  41                 	db	65
   146  00102F  54                 	db	84
   147  001030  23                 	db	35
   148  001031  53                 	db	83
   149  001032  4C                 	db	76
   150  001033  45                 	db	69
   151  001034  44                 	db	68
   152  001035  3D                 	db	61
   153  001036  34                 	db	52
   154  001037  0D                 	db	13
   155  001038  0A                 	db	10
   156  001039  00                 	db	0
   157  00103A                     __end_ofinit_modem_io_ok@F6753:
   158                           	opt stack 0
   159  00103A                     sim_card_ok@F6758:
   160                           	opt stack 0
   161  00103A  41                 	db	65
   162  00103B  54                 	db	84
   163  00103C  2B                 	db	43
   164  00103D  43                 	db	67
   165  00103E  50                 	db	80
   166  00103F  49                 	db	73
   167  001040  4E                 	db	78
   168  001041  3F                 	db	63
   169  001042  0D                 	db	13
   170  001043  0A                 	db	10
   171  001044  00                 	db	0
   172  001045                     __end_ofsim_card_ok@F6758:
   173                           	opt stack 0
   174  001045                     init_modem_io_ok@F6751:
   175                           	opt stack 0
   176  001045  41                 	db	65
   177  001046  54                 	db	84
   178  001047  23                 	db	35
   179  001048  43                 	db	67
   180  001049  47                 	db	71
   181  00104A  4D                 	db	77
   182  00104B  52                 	db	82
   183  00104C  0D                 	db	13
   184  00104D  0A                 	db	10
   185  00104E  00                 	db	0
   186  00104F                     __end_ofinit_modem_io_ok@F6751:
   187                           	opt stack 0
   188  00104F                     _default_ACCT:
   189                           	opt stack 0
   190  00104F  30                 	db	48
   191  001050  30                 	db	48
   192  001051  30                 	db	48
   193  001052  30                 	db	48
   194  001053  23                 	db	35
   195  001054  00                 	db	0
   196  001055                     __end_of_default_ACCT:
   197                           	opt stack 0
   198  001055                     _default_ACCESS_CODE:
   199                           	opt stack 0
   200  001055  31                 	db	49
   201  001056  31                 	db	49
   202  001057  31                 	db	49
   203  001058  31                 	db	49
   204  001059  23                 	db	35
   205  00105A  00                 	db	0
   206  00105B                     __end_of_default_ACCESS_CODE:
   207                           	opt stack 0
   208  00105B                     wakeup_modem_ok@F6740:
   209                           	opt stack 0
   210  00105B  41                 	db	65
   211  00105C  54                 	db	84
   212  00105D  0D                 	db	13
   213  00105E  0A                 	db	10
   214  00105F  00                 	db	0
   215  001060                     __end_ofwakeup_modem_ok@F6740:
   216                           	opt stack 0
   217  001060                     _default_LINE_CARD:
   218                           	opt stack 0
   219  001060  31                 	db	49
   220  001061  23                 	db	35
   221  001062  00                 	db	0
   222  001063                     __end_of_default_LINE_CARD:
   223                           	opt stack 0
   224  001063                     _default_PORT4:
   225                           	opt stack 0
   226  001063  07E4               	dw	2020
   227  001065                     __end_of_default_PORT4:
   228                           	opt stack 0
   229  001065                     _default_PORT3:
   230                           	opt stack 0
   231  001065  07E4               	dw	2020
   232  001067                     __end_of_default_PORT3:
   233                           	opt stack 0
   234  001067                     _default_PORT2:
   235                           	opt stack 0
   236  001067  07E4               	dw	2020
   237  001069                     __end_of_default_PORT2:
   238                           	opt stack 0
   239  001069                     _default_PORT1:
   240                           	opt stack 0
   241  001069  07E4               	dw	2020
   242  00106B                     __end_of_default_PORT1:
   243                           	opt stack 0
   244  00106B                     _default_IP4:
   245                           	opt stack 0
   246  00106B  23                 	db	35
   247  00106C  00                 	db	0
   248  00106D                     __end_of_default_IP4:
   249                           	opt stack 0
   250  00106D                     _default_IP3:
   251                           	opt stack 0
   252  00106D  23                 	db	35
   253  00106E  00                 	db	0
   254  00106F                     __end_of_default_IP3:
   255                           	opt stack 0
   256  00106F                     _default_IP2:
   257                           	opt stack 0
   258  00106F  23                 	db	35
   259  001070  00                 	db	0
   260  001071                     __end_of_default_IP2:
   261                           	opt stack 0
   262  001071                     _default_IP1:
   263                           	opt stack 0
   264  001071  23                 	db	35
   265  001072  00                 	db	0
   266  001073                     __end_of_default_IP1:
   267                           	opt stack 0
   268  001073                     _default_APN:
   269                           	opt stack 0
   270  001073  23                 	db	35
   271  001074  00                 	db	0
   272  001075                     __end_of_default_APN:
   273                           	opt stack 0
   274  001075                     _default_ENCRYPTION:
   275                           	opt stack 0
   276  001075  01                 	db	1
   277  001076                     __end_of_default_ENCRYPTION:
   278                           	opt stack 0
   279  001076                     _default_SMS_WAIT_TIME:
   280                           	opt stack 0
   281  001076  0A                 	db	10
   282  001077                     __end_of_default_SMS_WAIT_TIME:
   283                           	opt stack 0
   284  001077                     _default_RETRY:
   285                           	opt stack 0
   286  001077  0A                 	db	10
   287  001078                     __end_of_default_RETRY:
   288                           	opt stack 0
   289  001078                     _default_CYCLE:
   290                           	opt stack 0
   291  001078  02                 	db	2
   292  001079                     __end_of_default_CYCLE:
   293                           	opt stack 0
   294  001079                     _default_TP_PIN:
   295                           	opt stack 0
   296  001079  00                 	db	0
   297  00107A                     __end_of_default_TP_PIN:
   298                           	opt stack 0
   299  00107A                     _default_ZONE2:
   300                           	opt stack 0
   301  00107A  14                 	db	20
   302  00107B                     __end_of_default_ZONE2:
   303                           	opt stack 0
   304  00107B                     _default_ZONE1:
   305                           	opt stack 0
   306  00107B  01                 	db	1
   307  00107C                     __end_of_default_ZONE1:
   308                           	opt stack 0
   309  00107C                     _default_SERVER_ACK_TIME:
   310                           	opt stack 0
   311  00107C  2D                 	db	45
   312  00107D                     __end_of_default_SERVER_ACK_TIME:
   313                           	opt stack 0
   314  00107D                     _default_TEST_FREQ:
   315                           	opt stack 0
   316  00107D  0F                 	db	15
   317  00107E                     __end_of_default_TEST_FREQ:
   318                           	opt stack 0
   319  00107E                     _default_PROGRAM_ACK:
   320                           	opt stack 0
   321  00107E  01                 	db	1
   322  00107F                     __end_of_default_PROGRAM_ACK:
   323                           	opt stack 0
   324  0000                     _ANSELB	set	3897
   325  0000                     _ANSELC	set	3898
   326  0000                     _ANSELA	set	3896
   327  0000                     _PIR2bits	set	4001
   328  0000                     _EECON2	set	4007
   329  0000                     _EEDATA	set	4008
   330  0000                     _EEADR	set	4009
   331  0000                     _EEADRH	set	4010
   332  0000                     _INTCONbits	set	4082
   333  0000                     _INTCON	set	4082
   334  0000                     _TX1REG	set	4013
   335  0000                     _RC1REG	set	4014
   336  0000                     _TMR3L	set	4018
   337  0000                     _TMR3H	set	4019
   338  0000                     _T3CON	set	4017
   339  0000                     _PIR1bits	set	3998
   340  0000                     _RCSTA1bits	set	4011
   341  0000                     _RC1STAbits	set	4011
   342  0000                     _SPBRG1	set	4015
   343  0000                     _SPBRGH1	set	4016
   344  0000                     _TXSTA1bits	set	4012
   345  0000                     _BAUDCONbits	set	4024
   346  0000                     _BAUDCON1bits	set	4024
   347  0000                     _PORTAbits	set	3968
   348  0000                     _PORTBbits	set	3969
   349  0000                     _LATCbits	set	3979
   350  0000                     _TRISCbits	set	3988
   351  0000                     _PORTCbits	set	3970
   352  0000                     _TRISBbits	set	3987
   353  0000                     _LATAbits	set	3977
   354  0000                     _TRISAbits	set	3986
   355  0000                     _OSCCONbits	set	4051
   356  0000                     _LATBbits	set	3978
   357  0000                     _WR	set	32049
   358  0000                     _WREN	set	32050
   359  0000                     _RD	set	32048
   360  0000                     _EEPGD	set	32055
   361  0000                     _CFGS	set	32054
   362  0000                     _GIE	set	32663
   363  0000                     _TRMT1	set	32097
   364  0000                     _TMR3ON	set	32136
   365  0000                     _TMR3IF	set	32009
   366  0000                     _RC1IF	set	31989
   367  0000                     _CREN1	set	32092
   368  0000                     _RC1IE	set	31981
   369                           
   370                           ; #config settings
   371  00107F  00                 	db	0	; dummy byte at the end
   372  0000                     
   373                           	psect	cinit
   374  001908                     __pcinit:
   375                           	opt stack 0
   376  001908                     start_initialization:
   377                           	opt stack 0
   378  001908                     __initialization:
   379                           	opt stack 0
   380                           
   381                           ; Initialize objects allocated to COMRAM (5 bytes)
   382                           ; load TBLPTR registers with __pidataCOMRAM
   383  001908  0E14               	movlw	low __pidataCOMRAM
   384  00190A  6EF6               	movwf	tblptrl,c
   385  00190C  0E1B               	movlw	high __pidataCOMRAM
   386  00190E  6EF7               	movwf	tblptrh,c
   387  001910  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   388  001912  6EF8               	movwf	tblptru,c
   389  001914  EE00  F03B         	lfsr	0,__pdataCOMRAM
   390  001918  EE10 F005          	lfsr	1,5
   391  00191C                     copy_data0:
   392  00191C  0009               	tblrd		*+
   393  00191E  CFF5 FFEE          	movff	tablat,postinc0
   394  001922  50E5               	movf	postdec1,w,c
   395  001924  50E1               	movf	fsr1l,w,c
   396  001926  E1FA               	bnz	copy_data0
   397                           
   398                           ; Clear objects allocated to BANK1 (100 bytes)
   399  001928  EE01  F000         	lfsr	0,__pbssBANK1
   400  00192C  0E64               	movlw	100
   401  00192E                     clear_0:
   402  00192E  6AEE               	clrf	postinc0,c
   403  001930  06E8               	decf	wreg,f,c
   404  001932  E1FD               	bnz	clear_0
   405                           
   406                           ; Clear objects allocated to COMRAM (1 bytes)
   407  001934  6A40               	clrf	__pbssCOMRAM& (0+255),c
   408  001936                     end_of_initialization:
   409                           	opt stack 0
   410  001936                     __end_of__initialization:
   411                           	opt stack 0
   412  001936  0E00               	movlw	low (__Lsmallconst shr (0+16))
   413  001938  6EF8               	movwf	tblptru,c
   414  00193A  0E10               	movlw	high __Lsmallconst
   415  00193C  6EF7               	movwf	tblptrh,c
   416  00193E  0100               	movlb	0
   417  001940  EF6D  F00D         	goto	_main	;jump to C main() function
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	bssCOMRAM
   428  000040                     __pbssCOMRAM:
   429                           	opt stack 0
   430  000040                     _saveINTCONbits:
   431                           	opt stack 0
   432  000040                     	ds	1
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	dataCOMRAM
   443  00003B                     __pdataCOMRAM:
   444                           	opt stack 0
   445  00003B                     _VERSION:
   446                           	opt stack 0
   447  00003B                     	ds	5
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postdec1	equ	0xFE5
   455                           fsr1l	equ	0xFE1
   456                           
   457                           	psect	bssBANK1
   458  000100                     __pbssBANK1:
   459                           	opt stack 0
   460  000100                     _returnStr:
   461                           	opt stack 0
   462  000100                     	ds	100
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	cstackBANK0
   473  000060                     __pcstackBANK0:
   474                           	opt stack 0
   475  000060                     md_uart_send_ok@buf:
   476                           	opt stack 0
   477                           
   478                           ; 100 bytes @ 0x0
   479  000060                     	ds	100
   480  0000C4                     md_uart_send_ok@temp:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x64
   484  0000C4                     	ds	1
   485  0000C5                     md_uart_send_ok@count:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x65
   489  0000C5                     	ds	1
   490  0000C6                     md_uart_send_ok@k:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x66
   494  0000C6                     	ds	1
   495  0000C7                     md_uart_send_ok@i:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x67
   499  0000C7                     	ds	1
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1l	equ	0xFE1
   508                           
   509                           	psect	cstackCOMRAM
   510  000001                     __pcstackCOMRAM:
   511                           	opt stack 0
   512  000001                     ??_restart_modem:
   513  000001                     md_uart_transmit@data:
   514                           	opt stack 0
   515  000001                     ee_read@addr:
   516                           	opt stack 0
   517  000001                     ee_write@addr:
   518                           	opt stack 0
   519  000001                     delay5ms@cnt:
   520                           	opt stack 0
   521  000001                     sim_card_ok@cpinResponse:
   522                           	opt stack 0
   523                           
   524                           ; 13 bytes @ 0x0
   525  000001                     	ds	1
   526  000002                     ee_read@page:
   527                           	opt stack 0
   528  000002                     ee_write@data:
   529                           	opt stack 0
   530  000002                     md_uart_write@data:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x1
   534  000002                     	ds	1
   535  000003                     delay5ms@i:
   536                           	opt stack 0
   537  000003                     ee_read@data:
   538                           	opt stack 0
   539  000003                     ee_write@page:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x2
   543  000003                     	ds	1
   544  000004                     ??_write_defaults:
   545  000004                     delay5ms@j:
   546                           	opt stack 0
   547  000004                     md_uart_write@len:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x3
   551  000004                     	ds	1
   552  000005                     md_uart_write@currentChar:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x4
   556  000005                     	ds	1
   557  000006                     md_uart_write@index:
   558                           	opt stack 0
   559  000006                     write_defaults@page:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x5
   563  000006                     	ds	1
   564  000007                     write_defaults@addr:
   565                           	opt stack 0
   566  000007                     md_uart_send_ok@toSend:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x6
   570  000007                     	ds	1
   571  000008                     write_defaults@temp:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x7
   575  000008                     	ds	1
   576  000009                     md_uart_send_ok@lengthToSend:
   577                           	opt stack 0
   578  000009                     write_defaults@i:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x8
   582  000009                     	ds	1
   583  00000A                     md_uart_send_ok@rtnStr:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x9
   587  00000A                     	ds	2
   588  00000C                     md_uart_send_ok@want_ok:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0xB
   592  00000C                     	ds	1
   593  00000D                     md_uart_send_ok@wait_count:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0xC
   597  00000D                     	ds	1
   598  00000E                     ??_md_uart_send_ok:
   599  00000E                     sim_card_ok@cpin:
   600                           	opt stack 0
   601                           
   602                           ; 11 bytes @ 0xD
   603  00000E                     	ds	5
   604  000013                     wakeup_modem_ok@ipr:
   605                           	opt stack 0
   606  000013                     init_modem_io_ok@ledCfg:
   607                           	opt stack 0
   608                           
   609                           ; 16 bytes @ 0x12
   610  000013                     	ds	6
   611  000019                     sim_card_ok@matches:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x18
   615  000019                     	ds	1
   616  00001A                     sim_card_ok@cnt:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x19
   620  00001A                     	ds	9
   621  000023                     wakeup_modem_ok@at:
   622                           	opt stack 0
   623  000023                     init_modem_io_ok@ledPattern:
   624                           	opt stack 0
   625                           
   626                           ; 12 bytes @ 0x22
   627  000023                     	ds	5
   628  000028                     wakeup_modem_ok@cnt:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x27
   632  000028                     	ds	7
   633  00002F                     init_modem_io_ok@queryVersion:
   634                           	opt stack 0
   635                           
   636                           ; 10 bytes @ 0x2E
   637  00002F                     	ds	10
   638  000039                     init_modem_io_ok@cnt:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x38
   642  000039                     	ds	1
   643  00003A                     start_modem@i:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x39
   647  00003A                     	ds	1
   648  00003B                     tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           postdec1	equ	0xFE5
   655                           fsr1l	equ	0xFE1
   656                           
   657                           ; 1 bytes @ 0x3A
   658 ;;
   659 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   660 ;;
   661 ;; *************** function _main *****************
   662 ;; Defined at:
   663 ;;		line 19 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels required when called:    7
   683 ;; This function calls:
   684 ;;		_init_pic
   685 ;;		_init_uart_md
   686 ;;		_start_modem
   687 ;; This function is called by:
   688 ;;		Startup code after reset
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text0
   693  001ADA                     __ptext0:
   694                           	opt stack 0
   695  001ADA                     _main:
   696                           	opt stack 24
   697                           
   698                           ;main.c: 21: init_pic();
   699                           
   700                           ;incstack = 0
   701  001ADA  EC35  F00C         	call	_init_pic	;wreg free
   702                           
   703                           ;main.c: 22: init_uart_md();
   704  001ADE  EC2E  F00D         	call	_init_uart_md	;wreg free
   705                           
   706                           ;main.c: 23: start_modem();
   707  001AE2  ECED  F00C         	call	_start_modem	;wreg free
   708  001AE6                     
   709                           ;main.c: 25: {
   710                           ;main.c: 26: LATBbits.LB3=0;
   711  001AE6  968A               	bcf	3978,3,c	;volatile
   712  001AE8  D7FE               	goto	l85
   713  001AEA                     __end_of_main:
   714                           	opt stack 0
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           
   724 ;; *************** function _start_modem *****************
   725 ;; Defined at:
   726 ;;		line 13 in file "modem.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  i               1   57[COMRAM] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        1 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    6
   747 ;; This function calls:
   748 ;;		_delay5ms
   749 ;;		_restart_modem
   750 ;;		_startup_modem_ok
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text1
   757  0019DA                     __ptext1:
   758                           	opt stack 0
   759  0019DA                     _start_modem:
   760                           	opt stack 24
   761                           
   762                           ;modem.c: 15: LATAbits.LA3 = 1;
   763                           
   764                           ;incstack = 0
   765  0019DA  8689               	bsf	3977,3,c	;volatile
   766                           
   767                           ;modem.c: 17: for (uint8_t i = 0; i < 30; i ++)
   768  0019DC  0E00               	movlw	0
   769  0019DE  6E3A               	movwf	start_modem@i,c
   770  0019E0                     l2041:
   771  0019E0  0E1D               	movlw	29
   772  0019E2  643A               	cpfsgt	start_modem@i,c
   773  0019E4  D001               	goto	l172
   774  0019E6  D00A               	goto	l174
   775  0019E8                     l172:
   776                           
   777                           ;modem.c: 18: delay5ms(200);
   778  0019E8  0E00               	movlw	0
   779  0019EA  6E02               	movwf	delay5ms@cnt+1,c
   780  0019EC  0EC8               	movlw	200
   781  0019EE  6E01               	movwf	delay5ms@cnt,c
   782  0019F0  EC19  F00D         	call	_delay5ms	;wreg free
   783  0019F4  2A3A               	incf	start_modem@i,f,c
   784  0019F6  D7F4               	goto	l2041
   785  0019F8                     
   786                           ;modem.c: 20: restart_modem();
   787  0019F8  EC5E  F00C         	call	_restart_modem	;wreg free
   788  0019FC                     l174:
   789  0019FC  EC41  F00D         	call	_startup_modem_ok	;wreg free
   790  001A00  0900               	iorlw	0
   791  001A02  A4D8               	btfss	status,2,c
   792  001A04  0012               	return	
   793  001A06  D7F8               	goto	l175
   794  001A08                     __end_of_start_modem:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           postdec1	equ	0xFE5
   803                           fsr1l	equ	0xFE1
   804                           status	equ	0xFD8
   805                           
   806 ;; *************** function _startup_modem_ok *****************
   807 ;; Defined at:
   808 ;;		line 25 in file "modem.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      unsigned char 
   815 ;; Registers used:
   816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    5
   829 ;; This function calls:
   830 ;;		_init_uart_md
   831 ;;		_setup_modem_io_ok
   832 ;;		_wakeup_modem_ok
   833 ;; This function is called by:
   834 ;;		_start_modem
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text2
   839  001A82                     __ptext2:
   840                           	opt stack 0
   841  001A82                     _startup_modem_ok:
   842                           	opt stack 24
   843                           
   844                           ;modem.c: 27: init_uart_md();
   845                           
   846                           ;incstack = 0
   847  001A82  EC2E  F00D         	call	_init_uart_md	;wreg free
   848                           
   849                           ;modem.c: 28: if (!wakeup_modem_ok())
   850  001A86  ECE5  F00B         	call	_wakeup_modem_ok	;wreg free
   851  001A8A  0900               	iorlw	0
   852  001A8C  A4D8               	btfss	status,2,c
   853  001A8E  D002               	goto	l180
   854                           
   855                           ;modem.c: 29: return 0;
   856  001A90  0E00               	movlw	0
   857  001A92  0012               	return	
   858  001A94                     l180:
   859                           
   860                           ;modem.c: 30: if (!setup_modem_io_ok())
   861  001A94  ECBC  F00C         	call	_setup_modem_io_ok	;wreg free
   862  001A98  0900               	iorlw	0
   863  001A9A  A4D8               	btfss	status,2,c
   864  001A9C  D002               	goto	l182
   865                           
   866                           ;modem.c: 31: return 0;
   867  001A9E  0E00               	movlw	0
   868  001AA0  0012               	return	
   869  001AA2                     l182:
   870                           
   871                           ;modem.c: 32: return 1;
   872  001AA2  0E01               	movlw	1
   873  001AA4  0012               	return	
   874  001AA6                     __end_of_startup_modem_ok:
   875                           	opt stack 0
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           postdec1	equ	0xFE5
   883                           fsr1l	equ	0xFE1
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function _wakeup_modem_ok *****************
   887 ;; Defined at:
   888 ;;		line 62 in file "modem.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  ipr            16   18[COMRAM] const unsigned char [16]
   893 ;;  at              5   34[COMRAM] const unsigned char [5]
   894 ;;  cnt             1   39[COMRAM] unsigned char 
   895 ;;  cmds_ok         1    0        unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      unsigned char 
   898 ;; Registers used:
   899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:       22 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    3
   912 ;; This function calls:
   913 ;;		_md_uart_send_ok
   914 ;; This function is called by:
   915 ;;		_startup_modem_ok
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text3
   920  0017CA                     __ptext3:
   921                           	opt stack 0
   922  0017CA                     _wakeup_modem_ok:
   923                           	opt stack 25
   924                           
   925                           ;modem.c: 64: const uint8_t at[] = "AT\r\n";
   926                           
   927                           ;incstack = 0
   928  0017CA  0E5B               	movlw	low wakeup_modem_ok@F6740
   929  0017CC  6EF6               	movwf	tblptrl,c
   930  0017CE                     	if	0	;There is only one active tblptr byte
   931  0017CE                     	endif
   932  0017CE                     	if	0	;There are less than 3 active tblptr bytes
   933  0017CE                     	endif
   934  0017CE  EE20  F023         	lfsr	2,wakeup_modem_ok@at
   935  0017D2  0E04               	movlw	4
   936  0017D4                     u1040:
   937  0017D4  0009               	tblrd		*+
   938  0017D6  CFF5 FFDE          	movff	tablat,postinc2
   939  0017DA  06E8               	decf	wreg,f,c
   940  0017DC  E2FB               	bc	u1040
   941                           
   942                           ;modem.c: 65: const uint8_t ipr[] = "AT+IPR=115200\r\n";
   943  0017DE  0E11               	movlw	low wakeup_modem_ok@F6742
   944  0017E0  6EF6               	movwf	tblptrl,c
   945  0017E2                     	if	0	;There is only one active tblptr byte
   946  0017E2                     	endif
   947  0017E2                     	if	0	;There are less than 3 active tblptr bytes
   948  0017E2                     	endif
   949  0017E2  EE20  F013         	lfsr	2,wakeup_modem_ok@ipr
   950  0017E6  0E0F               	movlw	15
   951  0017E8                     u1050:
   952  0017E8  0009               	tblrd		*+
   953  0017EA  CFF5 FFDE          	movff	tablat,postinc2
   954  0017EE  06E8               	decf	wreg,f,c
   955  0017F0  E2FB               	bc	u1050
   956                           
   957                           ;modem.c: 66: bool cmds_ok;
   958                           ;modem.c: 67: uint8_t cnt = 20;
   959  0017F2  0E14               	movlw	20
   960  0017F4  6E28               	movwf	wakeup_modem_ok@cnt,c
   961                           
   962                           ;modem.c: 68: while (!md_uart_send_ok((uint8_t *)&at[0],sizeof(at), returnStr,1,40) && -
      +                          -cnt > 0)
   963  0017F6  D001               	goto	l204
   964  0017F8                     l205:
   965                           
   966                           ;modem.c: 69: __nop();
   967  0017F8  F000               	nop	
   968  0017FA                     l204:
   969  0017FA  0E23               	movlw	low wakeup_modem_ok@at
   970  0017FC  6E07               	movwf	md_uart_send_ok@toSend,c
   971  0017FE  0E00               	movlw	high wakeup_modem_ok@at
   972  001800  6E08               	movwf	md_uart_send_ok@toSend+1,c
   973  001802  0E05               	movlw	5
   974  001804  6E09               	movwf	md_uart_send_ok@lengthToSend,c
   975  001806  0E00               	movlw	low _returnStr
   976  001808  6E0A               	movwf	md_uart_send_ok@rtnStr,c
   977  00180A  0E01               	movlw	high _returnStr
   978  00180C  6E0B               	movwf	md_uart_send_ok@rtnStr+1,c
   979  00180E  0E01               	movlw	1
   980  001810  6E0C               	movwf	md_uart_send_ok@want_ok,c
   981  001812  0E28               	movlw	40
   982  001814  6E0D               	movwf	md_uart_send_ok@wait_count,c
   983  001816  EC69  F00A         	call	_md_uart_send_ok	;wreg free
   984  00181A  0900               	iorlw	0
   985  00181C  A4D8               	btfss	status,2,c
   986  00181E  D002               	goto	l207
   987  001820  2E28               	decfsz	wakeup_modem_ok@cnt,f,c
   988  001822  D7EA               	goto	l205
   989  001824                     l207:
   990                           
   991                           ;modem.c: 70: if (cnt == 0)
   992  001824  5028               	movf	wakeup_modem_ok@cnt,w,c
   993  001826  A4D8               	btfss	status,2,c
   994  001828  D002               	goto	l209
   995                           
   996                           ;modem.c: 71: return 0;
   997  00182A  0E00               	movlw	0
   998  00182C  0012               	return	
   999  00182E                     l209:
  1000                           
  1001                           ;modem.c: 73: cnt = 20;
  1002  00182E  0E14               	movlw	20
  1003  001830  6E28               	movwf	wakeup_modem_ok@cnt,c
  1004  001832  0E13               	movlw	low wakeup_modem_ok@ipr
  1005  001834  6E07               	movwf	md_uart_send_ok@toSend,c
  1006  001836  0E00               	movlw	high wakeup_modem_ok@ipr
  1007  001838  6E08               	movwf	md_uart_send_ok@toSend+1,c
  1008  00183A  0E10               	movlw	16
  1009  00183C  6E09               	movwf	md_uart_send_ok@lengthToSend,c
  1010  00183E  0E00               	movlw	low _returnStr
  1011  001840  6E0A               	movwf	md_uart_send_ok@rtnStr,c
  1012  001842  0E01               	movlw	high _returnStr
  1013  001844  6E0B               	movwf	md_uart_send_ok@rtnStr+1,c
  1014  001846  0E01               	movlw	1
  1015  001848  6E0C               	movwf	md_uart_send_ok@want_ok,c
  1016  00184A  0E28               	movlw	40
  1017  00184C  6E0D               	movwf	md_uart_send_ok@wait_count,c
  1018  00184E  EC69  F00A         	call	_md_uart_send_ok	;wreg free
  1019  001852  0900               	iorlw	0
  1020  001854  A4D8               	btfss	status,2,c
  1021  001856  D002               	goto	l214
  1022  001858  2E28               	decfsz	wakeup_modem_ok@cnt,f,c
  1023  00185A  D7EB               	goto	l212
  1024  00185C                     l214:
  1025                           
  1026                           ;modem.c: 75: if (cnt == 0)
  1027  00185C  5028               	movf	wakeup_modem_ok@cnt,w,c
  1028  00185E  A4D8               	btfss	status,2,c
  1029  001860  D002               	goto	l216
  1030                           
  1031                           ;modem.c: 76: return 0;
  1032  001862  0E00               	movlw	0
  1033  001864  0012               	return	
  1034  001866                     l216:
  1035                           
  1036                           ;modem.c: 77: else
  1037                           ;modem.c: 78: return 1;
  1038  001866  0E01               	movlw	1
  1039  001868  0012               	return	
  1040  00186A                     __end_of_wakeup_modem_ok:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           postdec1	equ	0xFE5
  1049                           fsr1l	equ	0xFE1
  1050                           postinc2	equ	0xFDE
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _setup_modem_io_ok *****************
  1054 ;; Defined at:
  1055 ;;		line 83 in file "modem.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      unsigned char 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    4
  1076 ;; This function calls:
  1077 ;;		_init_modem_io_ok
  1078 ;;		_is_first_run
  1079 ;;		_save_first_run
  1080 ;;		_sim_card_ok
  1081 ;;		_write_defaults
  1082 ;; This function is called by:
  1083 ;;		_startup_modem_ok
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text4
  1088  001978                     __ptext4:
  1089                           	opt stack 0
  1090  001978                     _setup_modem_io_ok:
  1091                           	opt stack 24
  1092                           
  1093                           ;modem.c: 85: if (is_first_run())
  1094                           
  1095                           ;incstack = 0
  1096  001978  EC61  F00D         	call	_is_first_run	;wreg free
  1097  00197C  0900               	iorlw	0
  1098  00197E  B4D8               	btfsc	status,2,c
  1099  001980  D00B               	goto	l220
  1100                           
  1101                           ;modem.c: 86: {
  1102                           ;modem.c: 87: write_defaults();
  1103  001982  EC40  F008         	call	_write_defaults	;wreg free
  1104                           
  1105                           ;modem.c: 88: if (!init_modem_io_ok())
  1106  001986  EC71  F00B         	call	_init_modem_io_ok	;wreg free
  1107  00198A  0900               	iorlw	0
  1108  00198C  A4D8               	btfss	status,2,c
  1109  00198E  D002               	goto	l221
  1110                           
  1111                           ;modem.c: 89: return 0;
  1112  001990  0E00               	movlw	0
  1113  001992  0012               	return	
  1114  001994                     l221:
  1115                           
  1116                           ;modem.c: 90: save_first_run();
  1117  001994  EC75  F00D         	call	_save_first_run	;wreg free
  1118  001998                     l220:
  1119                           
  1120                           ;modem.c: 91: }
  1121                           ;modem.c: 92: if (sim_card_ok())
  1122  001998  ECA2  F00C         	call	_sim_card_ok	;wreg free
  1123  00199C  0900               	iorlw	0
  1124  00199E  B4D8               	btfsc	status,2,c
  1125  0019A0  D002               	goto	l223
  1126                           
  1127                           ;modem.c: 93: return 1;
  1128  0019A2  0E01               	movlw	1
  1129  0019A4  0012               	return	
  1130  0019A6                     l223:
  1131                           
  1132                           ;modem.c: 94: else
  1133                           ;modem.c: 95: return 0;
  1134  0019A6  0E00               	movlw	0
  1135  0019A8  0012               	return	
  1136  0019AA                     __end_of_setup_modem_io_ok:
  1137                           	opt stack 0
  1138                           tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec1	equ	0xFE5
  1145                           fsr1l	equ	0xFE1
  1146                           postinc2	equ	0xFDE
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _write_defaults *****************
  1150 ;; Defined at:
  1151 ;;		line 13 in file "default_settings.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  i               1    8[COMRAM] unsigned char 
  1156 ;;  temp            1    7[COMRAM] unsigned char 
  1157 ;;  addr            1    6[COMRAM] unsigned char 
  1158 ;;  page            1    5[COMRAM] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;Total ram usage:        6 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    1
  1175 ;; This function calls:
  1176 ;;		_ee_read
  1177 ;;		_ee_write
  1178 ;; This function is called by:
  1179 ;;		_setup_modem_io_ok
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text5
  1184  001080                     __ptext5:
  1185                           	opt stack 0
  1186  001080                     _write_defaults:
  1187                           	opt stack 26
  1188                           
  1189                           ;default_settings.c: 15: saveINTCONbits = INTCON;
  1190                           
  1191                           ;incstack = 0
  1192  001080  CFF2 F040          	movff	intcon,_saveINTCONbits	;volatile
  1193                           
  1194                           ;default_settings.c: 16: INTCONbits.GIE = 0;
  1195  001084  9EF2               	bcf	intcon,7,c	;volatile
  1196                           
  1197                           ;default_settings.c: 17: INTCONbits.GIEH = 0;
  1198  001086  9EF2               	bcf	intcon,7,c	;volatile
  1199                           
  1200                           ;default_settings.c: 18: INTCONbits.GIEL = 0;
  1201  001088  9CF2               	bcf	intcon,6,c	;volatile
  1202                           
  1203                           ;default_settings.c: 20: uint8_t page, addr, i, temp;
  1204                           ;default_settings.c: 22: if( ee_read(0, 0x00)==VERSION[0] )
  1205  00108A  0E00               	movlw	0
  1206  00108C  6E01               	movwf	ee_read@addr,c
  1207  00108E  0E00               	movlw	0
  1208  001090  EC53  F00D         	call	_ee_read
  1209  001094  183B               	xorwf	_VERSION,w,c
  1210  001096  A4D8               	btfss	status,2,c
  1211  001098  D010               	goto	l415
  1212                           
  1213                           ;default_settings.c: 23: {
  1214                           ;default_settings.c: 24: if( ee_read(0, 0x01)==VERSION[1] )
  1215  00109A  0E01               	movlw	1
  1216  00109C  6E01               	movwf	ee_read@addr,c
  1217  00109E  0E00               	movlw	0
  1218  0010A0  EC53  F00D         	call	_ee_read
  1219  0010A4  183C               	xorwf	_VERSION+1,w,c
  1220  0010A6  A4D8               	btfss	status,2,c
  1221  0010A8  D008               	goto	l415
  1222                           
  1223                           ;default_settings.c: 25: {
  1224                           ;default_settings.c: 26: if( ee_read(0, 0x02)==VERSION[2] )
  1225  0010AA  0E02               	movlw	2
  1226  0010AC  6E01               	movwf	ee_read@addr,c
  1227  0010AE  0E00               	movlw	0
  1228  0010B0  EC53  F00D         	call	_ee_read
  1229  0010B4  183D               	xorwf	_VERSION+2,w,c
  1230  0010B6  B4D8               	btfsc	status,2,c
  1231  0010B8  0012               	return	
  1232  0010BA                     l415:
  1233                           
  1234                           ;default_settings.c: 28: }
  1235                           ;default_settings.c: 29: }
  1236                           ;default_settings.c: 32: page = 0x00;
  1237  0010BA  0E00               	movlw	0
  1238  0010BC  6E06               	movwf	write_defaults@page,c
  1239                           
  1240                           ;default_settings.c: 33: addr = 0x10;
  1241  0010BE  0E10               	movlw	16
  1242  0010C0  6E07               	movwf	write_defaults@addr,c
  1243                           
  1244                           ;default_settings.c: 34: i = 0;
  1245  0010C2  0E00               	movlw	0
  1246  0010C4  6E09               	movwf	write_defaults@i,c
  1247                           
  1248                           ;default_settings.c: 35: while (i++ < 0x20 && temp != '#')
  1249  0010C6  D013               	goto	l417
  1250  0010C8                     
  1251                           ;default_settings.c: 36: {
  1252                           ;default_settings.c: 37: temp = default_APN[i];
  1253  0010C8  5009               	movf	write_defaults@i,w,c
  1254  0010CA  0D01               	mullw	1
  1255  0010CC  0E73               	movlw	low _default_APN
  1256  0010CE  24F3               	addwf	prodl,w,c
  1257  0010D0  6EF6               	movwf	tblptrl,c
  1258  0010D2  0E10               	movlw	high _default_APN
  1259  0010D4  20F4               	addwfc	prodh,w,c
  1260  0010D6  6EF7               	movwf	tblptrh,c
  1261  0010D8                     	if	0	;There are less than 3 active tblptr bytes
  1262  0010D8                     	endif
  1263  0010D8  0008               	tblrd		*
  1264  0010DA  CFF5 F008          	movff	tablat,write_defaults@temp
  1265                           
  1266                           ;default_settings.c: 38: ee_write(page, (uint8_t)(addr + i), temp);
  1267  0010DE  5007               	movf	write_defaults@addr,w,c
  1268  0010E0  2409               	addwf	write_defaults@i,w,c
  1269  0010E2  6E01               	movwf	ee_write@addr,c
  1270  0010E4  C008  F002         	movff	write_defaults@temp,ee_write@data
  1271  0010E8  5006               	movf	write_defaults@page,w,c
  1272  0010EA  ECD5  F00C         	call	_ee_write
  1273  0010EE                     l417:
  1274  0010EE  2A09               	incf	write_defaults@i,f,c
  1275  0010F0  0409               	decf	write_defaults@i,w,c
  1276  0010F2  6E04               	movwf	??_write_defaults& (0+255),c
  1277  0010F4  0E20               	movlw	32
  1278  0010F6  6004               	cpfslt	??_write_defaults,c
  1279  0010F8  D004               	goto	u870
  1280  0010FA  0E23               	movlw	35
  1281  0010FC  1808               	xorwf	write_defaults@temp,w,c
  1282  0010FE  A4D8               	btfss	status,2,c
  1283  001100  D7E3               	goto	l418
  1284  001102                     u870:
  1285                           
  1286                           ;default_settings.c: 39: }
  1287                           ;default_settings.c: 41: page = 0x00;
  1288  001102  0E00               	movlw	0
  1289  001104  6E06               	movwf	write_defaults@page,c
  1290                           
  1291                           ;default_settings.c: 42: addr = 0x30;
  1292  001106  0E30               	movlw	48
  1293  001108  6E07               	movwf	write_defaults@addr,c
  1294                           
  1295                           ;default_settings.c: 43: temp = 0x00;
  1296  00110A  0E00               	movlw	0
  1297  00110C  6E08               	movwf	write_defaults@temp,c
  1298                           
  1299                           ;default_settings.c: 44: i = 0;
  1300  00110E  0E00               	movlw	0
  1301  001110  6E09               	movwf	write_defaults@i,c
  1302                           
  1303                           ;default_settings.c: 45: while (temp != '#')
  1304  001112  D014               	goto	l422
  1305  001114                     
  1306                           ;default_settings.c: 46: {
  1307                           ;default_settings.c: 47: temp = default_IP1[i];
  1308  001114  5009               	movf	write_defaults@i,w,c
  1309  001116  0D01               	mullw	1
  1310  001118  0E71               	movlw	low _default_IP1
  1311  00111A  24F3               	addwf	prodl,w,c
  1312  00111C  6EF6               	movwf	tblptrl,c
  1313  00111E  0E10               	movlw	high _default_IP1
  1314  001120  20F4               	addwfc	prodh,w,c
  1315  001122  6EF7               	movwf	tblptrh,c
  1316  001124                     	if	0	;There are less than 3 active tblptr bytes
  1317  001124                     	endif
  1318  001124  0008               	tblrd		*
  1319  001126  CFF5 F008          	movff	tablat,write_defaults@temp
  1320                           
  1321                           ;default_settings.c: 48: ee_write(page, (uint8_t)(addr + i), temp);
  1322  00112A  5007               	movf	write_defaults@addr,w,c
  1323  00112C  2409               	addwf	write_defaults@i,w,c
  1324  00112E  6E01               	movwf	ee_write@addr,c
  1325  001130  C008  F002         	movff	write_defaults@temp,ee_write@data
  1326  001134  5006               	movf	write_defaults@page,w,c
  1327  001136  ECD5  F00C         	call	_ee_write
  1328                           
  1329                           ;default_settings.c: 49: i++;
  1330  00113A  2A09               	incf	write_defaults@i,f,c
  1331  00113C                     l422:
  1332  00113C  0E23               	movlw	35
  1333  00113E  1808               	xorwf	write_defaults@temp,w,c
  1334  001140  A4D8               	btfss	status,2,c
  1335  001142  D7E8               	goto	l423
  1336                           
  1337                           ;default_settings.c: 50: }
  1338                           ;default_settings.c: 52: page = 0x00;
  1339  001144  0E00               	movlw	0
  1340  001146  6E06               	movwf	write_defaults@page,c
  1341                           
  1342                           ;default_settings.c: 53: addr = 0x50;
  1343  001148  0E50               	movlw	80
  1344  00114A  6E07               	movwf	write_defaults@addr,c
  1345                           
  1346                           ;default_settings.c: 54: temp = 0x00;
  1347  00114C  0E00               	movlw	0
  1348  00114E  6E08               	movwf	write_defaults@temp,c
  1349                           
  1350                           ;default_settings.c: 55: i = 0;
  1351  001150  0E00               	movlw	0
  1352  001152  6E09               	movwf	write_defaults@i,c
  1353                           
  1354                           ;default_settings.c: 56: while (temp != '#')
  1355  001154  D014               	goto	l425
  1356  001156                     
  1357                           ;default_settings.c: 57: {
  1358                           ;default_settings.c: 58: temp = default_IP2[i];
  1359  001156  5009               	movf	write_defaults@i,w,c
  1360  001158  0D01               	mullw	1
  1361  00115A  0E6F               	movlw	low _default_IP2
  1362  00115C  24F3               	addwf	prodl,w,c
  1363  00115E  6EF6               	movwf	tblptrl,c
  1364  001160  0E10               	movlw	high _default_IP2
  1365  001162  20F4               	addwfc	prodh,w,c
  1366  001164  6EF7               	movwf	tblptrh,c
  1367  001166                     	if	0	;There are less than 3 active tblptr bytes
  1368  001166                     	endif
  1369  001166  0008               	tblrd		*
  1370  001168  CFF5 F008          	movff	tablat,write_defaults@temp
  1371                           
  1372                           ;default_settings.c: 59: ee_write(page, (uint8_t)(addr + i), temp);
  1373  00116C  5007               	movf	write_defaults@addr,w,c
  1374  00116E  2409               	addwf	write_defaults@i,w,c
  1375  001170  6E01               	movwf	ee_write@addr,c
  1376  001172  C008  F002         	movff	write_defaults@temp,ee_write@data
  1377  001176  5006               	movf	write_defaults@page,w,c
  1378  001178  ECD5  F00C         	call	_ee_write
  1379                           
  1380                           ;default_settings.c: 60: i++;
  1381  00117C  2A09               	incf	write_defaults@i,f,c
  1382  00117E                     l425:
  1383  00117E  0E23               	movlw	35
  1384  001180  1808               	xorwf	write_defaults@temp,w,c
  1385  001182  A4D8               	btfss	status,2,c
  1386  001184  D7E8               	goto	l426
  1387                           
  1388                           ;default_settings.c: 61: }
  1389                           ;default_settings.c: 63: page = 0x00;
  1390  001186  0E00               	movlw	0
  1391  001188  6E06               	movwf	write_defaults@page,c
  1392                           
  1393                           ;default_settings.c: 64: addr = 0x70;
  1394  00118A  0E70               	movlw	112
  1395  00118C  6E07               	movwf	write_defaults@addr,c
  1396                           
  1397                           ;default_settings.c: 65: temp = 0x00;
  1398  00118E  0E00               	movlw	0
  1399  001190  6E08               	movwf	write_defaults@temp,c
  1400                           
  1401                           ;default_settings.c: 66: i = 0;
  1402  001192  0E00               	movlw	0
  1403  001194  6E09               	movwf	write_defaults@i,c
  1404                           
  1405                           ;default_settings.c: 67: while (temp != '#')
  1406  001196  D014               	goto	l428
  1407  001198                     
  1408                           ;default_settings.c: 68: {
  1409                           ;default_settings.c: 69: temp = default_IP3[i];
  1410  001198  5009               	movf	write_defaults@i,w,c
  1411  00119A  0D01               	mullw	1
  1412  00119C  0E6D               	movlw	low _default_IP3
  1413  00119E  24F3               	addwf	prodl,w,c
  1414  0011A0  6EF6               	movwf	tblptrl,c
  1415  0011A2  0E10               	movlw	high _default_IP3
  1416  0011A4  20F4               	addwfc	prodh,w,c
  1417  0011A6  6EF7               	movwf	tblptrh,c
  1418  0011A8                     	if	0	;There are less than 3 active tblptr bytes
  1419  0011A8                     	endif
  1420  0011A8  0008               	tblrd		*
  1421  0011AA  CFF5 F008          	movff	tablat,write_defaults@temp
  1422                           
  1423                           ;default_settings.c: 70: ee_write(page, (uint8_t)(addr + i), temp);
  1424  0011AE  5007               	movf	write_defaults@addr,w,c
  1425  0011B0  2409               	addwf	write_defaults@i,w,c
  1426  0011B2  6E01               	movwf	ee_write@addr,c
  1427  0011B4  C008  F002         	movff	write_defaults@temp,ee_write@data
  1428  0011B8  5006               	movf	write_defaults@page,w,c
  1429  0011BA  ECD5  F00C         	call	_ee_write
  1430                           
  1431                           ;default_settings.c: 71: i++;
  1432  0011BE  2A09               	incf	write_defaults@i,f,c
  1433  0011C0                     l428:
  1434  0011C0  0E23               	movlw	35
  1435  0011C2  1808               	xorwf	write_defaults@temp,w,c
  1436  0011C4  A4D8               	btfss	status,2,c
  1437  0011C6  D7E8               	goto	l429
  1438                           
  1439                           ;default_settings.c: 72: }
  1440                           ;default_settings.c: 74: page = 0x00;
  1441  0011C8  0E00               	movlw	0
  1442  0011CA  6E06               	movwf	write_defaults@page,c
  1443                           
  1444                           ;default_settings.c: 75: addr = 0x90;
  1445  0011CC  0E90               	movlw	144
  1446  0011CE  6E07               	movwf	write_defaults@addr,c
  1447                           
  1448                           ;default_settings.c: 76: temp = 0x00;
  1449  0011D0  0E00               	movlw	0
  1450  0011D2  6E08               	movwf	write_defaults@temp,c
  1451                           
  1452                           ;default_settings.c: 77: i = 0;
  1453  0011D4  0E00               	movlw	0
  1454  0011D6  6E09               	movwf	write_defaults@i,c
  1455                           
  1456                           ;default_settings.c: 78: while (temp != '#')
  1457  0011D8  D014               	goto	l431
  1458  0011DA                     
  1459                           ;default_settings.c: 79: {
  1460                           ;default_settings.c: 80: temp = default_IP4[i];
  1461  0011DA  5009               	movf	write_defaults@i,w,c
  1462  0011DC  0D01               	mullw	1
  1463  0011DE  0E6B               	movlw	low _default_IP4
  1464  0011E0  24F3               	addwf	prodl,w,c
  1465  0011E2  6EF6               	movwf	tblptrl,c
  1466  0011E4  0E10               	movlw	high _default_IP4
  1467  0011E6  20F4               	addwfc	prodh,w,c
  1468  0011E8  6EF7               	movwf	tblptrh,c
  1469  0011EA                     	if	0	;There are less than 3 active tblptr bytes
  1470  0011EA                     	endif
  1471  0011EA  0008               	tblrd		*
  1472  0011EC  CFF5 F008          	movff	tablat,write_defaults@temp
  1473                           
  1474                           ;default_settings.c: 81: ee_write(page, (uint8_t)(addr + i), temp);
  1475  0011F0  5007               	movf	write_defaults@addr,w,c
  1476  0011F2  2409               	addwf	write_defaults@i,w,c
  1477  0011F4  6E01               	movwf	ee_write@addr,c
  1478  0011F6  C008  F002         	movff	write_defaults@temp,ee_write@data
  1479  0011FA  5006               	movf	write_defaults@page,w,c
  1480  0011FC  ECD5  F00C         	call	_ee_write
  1481                           
  1482                           ;default_settings.c: 82: i++;
  1483  001200  2A09               	incf	write_defaults@i,f,c
  1484  001202                     l431:
  1485  001202  0E23               	movlw	35
  1486  001204  1808               	xorwf	write_defaults@temp,w,c
  1487  001206  A4D8               	btfss	status,2,c
  1488  001208  D7E8               	goto	l432
  1489                           
  1490                           ;default_settings.c: 83: }
  1491                           ;default_settings.c: 86: page = 0x00;
  1492  00120A  0E00               	movlw	0
  1493  00120C  6E06               	movwf	write_defaults@page,c
  1494                           
  1495                           ;default_settings.c: 87: addr = 0xB0;
  1496  00120E  0EB0               	movlw	176
  1497  001210  6E07               	movwf	write_defaults@addr,c
  1498                           
  1499                           ;default_settings.c: 88: ee_write(page, addr, (default_PORT1 >> 8));
  1500  001212  C007  F001         	movff	write_defaults@addr,ee_write@addr
  1501  001216  0E69               	movlw	low _default_PORT1
  1502  001218  6EF6               	movwf	tblptrl,c
  1503  00121A                     	if	0	;There is only one active tblptr byte
  1504  00121A                     	endif
  1505  00121A                     	if	0	;There are less than 3 active tblptr bytes
  1506  00121A                     	endif
  1507  00121A  0009               	tblrd		*+
  1508  00121C  CFF5 F004          	movff	tablat,??_write_defaults
  1509  001220  0009               	tblrd		*+
  1510  001222  CFF5 F005          	movff	tablat,??_write_defaults+1
  1511  001226  C005  F004         	movff	??_write_defaults+1,??_write_defaults
  1512  00122A  6A05               	clrf	??_write_defaults+1,c
  1513  00122C  5004               	movf	??_write_defaults,w,c
  1514  00122E  6E02               	movwf	ee_write@data,c
  1515  001230  5006               	movf	write_defaults@page,w,c
  1516  001232  ECD5  F00C         	call	_ee_write
  1517                           
  1518                           ;default_settings.c: 89: ee_write(page, (uint8_t)(addr + 1), (default_PORT1 & 0x00FF));
  1519  001236  2807               	incf	write_defaults@addr,w,c
  1520  001238  6E01               	movwf	ee_write@addr,c
  1521  00123A  0E69               	movlw	low _default_PORT1
  1522  00123C  6EF6               	movwf	tblptrl,c
  1523  00123E                     	if	0	;There is only one active tblptr byte
  1524  00123E                     	endif
  1525  00123E                     	if	0	;There are less than 3 active tblptr bytes
  1526  00123E                     	endif
  1527  00123E  0008               	tblrd		*
  1528  001240  CFF5 F002          	movff	tablat,ee_write@data
  1529  001244  5006               	movf	write_defaults@page,w,c
  1530  001246  ECD5  F00C         	call	_ee_write
  1531                           
  1532                           ;default_settings.c: 91: page = 0x00;
  1533  00124A  0E00               	movlw	0
  1534  00124C  6E06               	movwf	write_defaults@page,c
  1535                           
  1536                           ;default_settings.c: 92: addr = 0xB2;
  1537  00124E  0EB2               	movlw	178
  1538  001250  6E07               	movwf	write_defaults@addr,c
  1539                           
  1540                           ;default_settings.c: 93: ee_write(page, addr, (default_PORT2 >> 8));
  1541  001252  C007  F001         	movff	write_defaults@addr,ee_write@addr
  1542  001256  0E67               	movlw	low _default_PORT2
  1543  001258  6EF6               	movwf	tblptrl,c
  1544  00125A                     	if	0	;There is only one active tblptr byte
  1545  00125A                     	endif
  1546  00125A                     	if	0	;There are less than 3 active tblptr bytes
  1547  00125A                     	endif
  1548  00125A  0009               	tblrd		*+
  1549  00125C  CFF5 F004          	movff	tablat,??_write_defaults
  1550  001260  0009               	tblrd		*+
  1551  001262  CFF5 F005          	movff	tablat,??_write_defaults+1
  1552  001266  C005  F004         	movff	??_write_defaults+1,??_write_defaults
  1553  00126A  6A05               	clrf	??_write_defaults+1,c
  1554  00126C  5004               	movf	??_write_defaults,w,c
  1555  00126E  6E02               	movwf	ee_write@data,c
  1556  001270  5006               	movf	write_defaults@page,w,c
  1557  001272  ECD5  F00C         	call	_ee_write
  1558                           
  1559                           ;default_settings.c: 94: ee_write(page, (uint8_t)(addr + 1), (default_PORT2 & 0x00FF));
  1560  001276  2807               	incf	write_defaults@addr,w,c
  1561  001278  6E01               	movwf	ee_write@addr,c
  1562  00127A  0E67               	movlw	low _default_PORT2
  1563  00127C  6EF6               	movwf	tblptrl,c
  1564  00127E                     	if	0	;There is only one active tblptr byte
  1565  00127E                     	endif
  1566  00127E                     	if	0	;There are less than 3 active tblptr bytes
  1567  00127E                     	endif
  1568  00127E  0008               	tblrd		*
  1569  001280  CFF5 F002          	movff	tablat,ee_write@data
  1570  001284  5006               	movf	write_defaults@page,w,c
  1571  001286  ECD5  F00C         	call	_ee_write
  1572                           
  1573                           ;default_settings.c: 96: page = 0x00;
  1574  00128A  0E00               	movlw	0
  1575  00128C  6E06               	movwf	write_defaults@page,c
  1576                           
  1577                           ;default_settings.c: 97: addr = 0xB4;
  1578  00128E  0EB4               	movlw	180
  1579  001290  6E07               	movwf	write_defaults@addr,c
  1580                           
  1581                           ;default_settings.c: 98: ee_write(page, addr, (default_PORT3 >> 8));
  1582  001292  C007  F001         	movff	write_defaults@addr,ee_write@addr
  1583  001296  0E65               	movlw	low _default_PORT3
  1584  001298  6EF6               	movwf	tblptrl,c
  1585  00129A                     	if	0	;There is only one active tblptr byte
  1586  00129A                     	endif
  1587  00129A                     	if	0	;There are less than 3 active tblptr bytes
  1588  00129A                     	endif
  1589  00129A  0009               	tblrd		*+
  1590  00129C  CFF5 F004          	movff	tablat,??_write_defaults
  1591  0012A0  0009               	tblrd		*+
  1592  0012A2  CFF5 F005          	movff	tablat,??_write_defaults+1
  1593  0012A6  C005  F004         	movff	??_write_defaults+1,??_write_defaults
  1594  0012AA  6A05               	clrf	??_write_defaults+1,c
  1595  0012AC  5004               	movf	??_write_defaults,w,c
  1596  0012AE  6E02               	movwf	ee_write@data,c
  1597  0012B0  5006               	movf	write_defaults@page,w,c
  1598  0012B2  ECD5  F00C         	call	_ee_write
  1599                           
  1600                           ;default_settings.c: 99: ee_write(page, (uint8_t)(addr + 1), (default_PORT3 & 0x00FF));
  1601  0012B6  2807               	incf	write_defaults@addr,w,c
  1602  0012B8  6E01               	movwf	ee_write@addr,c
  1603  0012BA  0E65               	movlw	low _default_PORT3
  1604  0012BC  6EF6               	movwf	tblptrl,c
  1605  0012BE                     	if	0	;There is only one active tblptr byte
  1606  0012BE                     	endif
  1607  0012BE                     	if	0	;There are less than 3 active tblptr bytes
  1608  0012BE                     	endif
  1609  0012BE  0008               	tblrd		*
  1610  0012C0  CFF5 F002          	movff	tablat,ee_write@data
  1611  0012C4  5006               	movf	write_defaults@page,w,c
  1612  0012C6  ECD5  F00C         	call	_ee_write
  1613                           
  1614                           ;default_settings.c: 101: page = 0x00;
  1615  0012CA  0E00               	movlw	0
  1616  0012CC  6E06               	movwf	write_defaults@page,c
  1617                           
  1618                           ;default_settings.c: 102: addr = 0xB6;
  1619  0012CE  0EB6               	movlw	182
  1620  0012D0  6E07               	movwf	write_defaults@addr,c
  1621                           
  1622                           ;default_settings.c: 103: ee_write(page, addr, (default_PORT4 >> 8));
  1623  0012D2  C007  F001         	movff	write_defaults@addr,ee_write@addr
  1624  0012D6  0E63               	movlw	low _default_PORT4
  1625  0012D8  6EF6               	movwf	tblptrl,c
  1626  0012DA                     	if	0	;There is only one active tblptr byte
  1627  0012DA                     	endif
  1628  0012DA                     	if	0	;There are less than 3 active tblptr bytes
  1629  0012DA                     	endif
  1630  0012DA  0009               	tblrd		*+
  1631  0012DC  CFF5 F004          	movff	tablat,??_write_defaults
  1632  0012E0  0009               	tblrd		*+
  1633  0012E2  CFF5 F005          	movff	tablat,??_write_defaults+1
  1634  0012E6  C005  F004         	movff	??_write_defaults+1,??_write_defaults
  1635  0012EA  6A05               	clrf	??_write_defaults+1,c
  1636  0012EC  5004               	movf	??_write_defaults,w,c
  1637  0012EE  6E02               	movwf	ee_write@data,c
  1638  0012F0  5006               	movf	write_defaults@page,w,c
  1639  0012F2  ECD5  F00C         	call	_ee_write
  1640                           
  1641                           ;default_settings.c: 104: ee_write(page, (uint8_t)(addr + 1), (default_PORT4 & 0x00FF));
  1642  0012F6  2807               	incf	write_defaults@addr,w,c
  1643  0012F8  6E01               	movwf	ee_write@addr,c
  1644  0012FA  0E63               	movlw	low _default_PORT4
  1645  0012FC  6EF6               	movwf	tblptrl,c
  1646  0012FE                     	if	0	;There is only one active tblptr byte
  1647  0012FE                     	endif
  1648  0012FE                     	if	0	;There are less than 3 active tblptr bytes
  1649  0012FE                     	endif
  1650  0012FE  0008               	tblrd		*
  1651  001300  CFF5 F002          	movff	tablat,ee_write@data
  1652  001304  5006               	movf	write_defaults@page,w,c
  1653  001306  ECD5  F00C         	call	_ee_write
  1654                           
  1655                           ;default_settings.c: 107: page = 0x00;
  1656  00130A  0E00               	movlw	0
  1657  00130C  6E06               	movwf	write_defaults@page,c
  1658                           
  1659                           ;default_settings.c: 108: addr = 0xC0;
  1660  00130E  0EC0               	movlw	192
  1661  001310  6E07               	movwf	write_defaults@addr,c
  1662                           
  1663                           ;default_settings.c: 109: temp = 0x00;
  1664  001312  0E00               	movlw	0
  1665  001314  6E08               	movwf	write_defaults@temp,c
  1666                           
  1667                           ;default_settings.c: 110: i = 0;
  1668  001316  0E00               	movlw	0
  1669  001318  6E09               	movwf	write_defaults@i,c
  1670                           
  1671                           ;default_settings.c: 111: while (temp != '#')
  1672  00131A  D014               	goto	l434
  1673  00131C                     
  1674                           ;default_settings.c: 112: {
  1675                           ;default_settings.c: 113: temp = default_ACCESS_CODE[i];
  1676  00131C  5009               	movf	write_defaults@i,w,c
  1677  00131E  0D01               	mullw	1
  1678  001320  0E55               	movlw	low _default_ACCESS_CODE
  1679  001322  24F3               	addwf	prodl,w,c
  1680  001324  6EF6               	movwf	tblptrl,c
  1681  001326  0E10               	movlw	high _default_ACCESS_CODE
  1682  001328  20F4               	addwfc	prodh,w,c
  1683  00132A  6EF7               	movwf	tblptrh,c
  1684  00132C                     	if	0	;There are less than 3 active tblptr bytes
  1685  00132C                     	endif
  1686  00132C  0008               	tblrd		*
  1687  00132E  CFF5 F008          	movff	tablat,write_defaults@temp
  1688                           
  1689                           ;default_settings.c: 114: ee_write(page, (uint8_t)(addr + i), temp);
  1690  001332  5007               	movf	write_defaults@addr,w,c
  1691  001334  2409               	addwf	write_defaults@i,w,c
  1692  001336  6E01               	movwf	ee_write@addr,c
  1693  001338  C008  F002         	movff	write_defaults@temp,ee_write@data
  1694  00133C  5006               	movf	write_defaults@page,w,c
  1695  00133E  ECD5  F00C         	call	_ee_write
  1696                           
  1697                           ;default_settings.c: 115: i ++;
  1698  001342  2A09               	incf	write_defaults@i,f,c
  1699  001344                     l434:
  1700  001344  0E23               	movlw	35
  1701  001346  1808               	xorwf	write_defaults@temp,w,c
  1702  001348  A4D8               	btfss	status,2,c
  1703  00134A  D7E8               	goto	l435
  1704                           
  1705                           ;default_settings.c: 116: }
  1706                           ;default_settings.c: 119: ee_write(0x00, 0xC7, default_PROGRAM_ACK);
  1707  00134C  0EC7               	movlw	199
  1708  00134E  6E01               	movwf	ee_write@addr,c
  1709  001350  0E7E               	movlw	low _default_PROGRAM_ACK
  1710  001352  6EF6               	movwf	tblptrl,c
  1711  001354                     	if	0	;There is only one active tblptr byte
  1712  001354                     	endif
  1713  001354                     	if	0	;There are less than 3 active tblptr bytes
  1714  001354                     	endif
  1715  001354  0008               	tblrd		*
  1716  001356  CFF5 F002          	movff	tablat,ee_write@data
  1717  00135A  0E00               	movlw	0
  1718  00135C  ECD5  F00C         	call	_ee_write
  1719                           
  1720                           ;default_settings.c: 121: ee_write(0x00, 0xC8, default_TEST_FREQ);
  1721  001360  0EC8               	movlw	200
  1722  001362  6E01               	movwf	ee_write@addr,c
  1723  001364  0E7D               	movlw	low _default_TEST_FREQ
  1724  001366  6EF6               	movwf	tblptrl,c
  1725  001368                     	if	0	;There is only one active tblptr byte
  1726  001368                     	endif
  1727  001368                     	if	0	;There are less than 3 active tblptr bytes
  1728  001368                     	endif
  1729  001368  0008               	tblrd		*
  1730  00136A  CFF5 F002          	movff	tablat,ee_write@data
  1731  00136E  0E00               	movlw	0
  1732  001370  ECD5  F00C         	call	_ee_write
  1733                           
  1734                           ;default_settings.c: 123: ee_write(0x00, 0xC9, default_SERVER_ACK_TIME);
  1735  001374  0EC9               	movlw	201
  1736  001376  6E01               	movwf	ee_write@addr,c
  1737  001378  0E7C               	movlw	low _default_SERVER_ACK_TIME
  1738  00137A  6EF6               	movwf	tblptrl,c
  1739  00137C                     	if	0	;There is only one active tblptr byte
  1740  00137C                     	endif
  1741  00137C                     	if	0	;There are less than 3 active tblptr bytes
  1742  00137C                     	endif
  1743  00137C  0008               	tblrd		*
  1744  00137E  CFF5 F002          	movff	tablat,ee_write@data
  1745  001382  0E00               	movlw	0
  1746  001384  ECD5  F00C         	call	_ee_write
  1747                           
  1748                           ;default_settings.c: 125: ee_write(0x00, 0xB8, default_SMS_WAIT_TIME);
  1749  001388  0EB8               	movlw	184
  1750  00138A  6E01               	movwf	ee_write@addr,c
  1751  00138C  0E76               	movlw	low _default_SMS_WAIT_TIME
  1752  00138E  6EF6               	movwf	tblptrl,c
  1753  001390                     	if	0	;There is only one active tblptr byte
  1754  001390                     	endif
  1755  001390                     	if	0	;There are less than 3 active tblptr bytes
  1756  001390                     	endif
  1757  001390  0008               	tblrd		*
  1758  001392  CFF5 F002          	movff	tablat,ee_write@data
  1759  001396  0E00               	movlw	0
  1760  001398  ECD5  F00C         	call	_ee_write
  1761                           
  1762                           ;default_settings.c: 127: page = 0x00;
  1763  00139C  0E00               	movlw	0
  1764  00139E  6E06               	movwf	write_defaults@page,c
  1765                           
  1766                           ;default_settings.c: 128: addr = 0xCA;
  1767  0013A0  0ECA               	movlw	202
  1768  0013A2  6E07               	movwf	write_defaults@addr,c
  1769                           
  1770                           ;default_settings.c: 129: temp = 0x00;
  1771  0013A4  0E00               	movlw	0
  1772  0013A6  6E08               	movwf	write_defaults@temp,c
  1773                           
  1774                           ;default_settings.c: 130: i = 0;
  1775  0013A8  0E00               	movlw	0
  1776  0013AA  6E09               	movwf	write_defaults@i,c
  1777                           
  1778                           ;default_settings.c: 131: while (temp != '#')
  1779  0013AC  D014               	goto	l437
  1780  0013AE                     
  1781                           ;default_settings.c: 132: {
  1782                           ;default_settings.c: 133: temp = default_ACCT[i];
  1783  0013AE  5009               	movf	write_defaults@i,w,c
  1784  0013B0  0D01               	mullw	1
  1785  0013B2  0E4F               	movlw	low _default_ACCT
  1786  0013B4  24F3               	addwf	prodl,w,c
  1787  0013B6  6EF6               	movwf	tblptrl,c
  1788  0013B8  0E10               	movlw	high _default_ACCT
  1789  0013BA  20F4               	addwfc	prodh,w,c
  1790  0013BC  6EF7               	movwf	tblptrh,c
  1791  0013BE                     	if	0	;There are less than 3 active tblptr bytes
  1792  0013BE                     	endif
  1793  0013BE  0008               	tblrd		*
  1794  0013C0  CFF5 F008          	movff	tablat,write_defaults@temp
  1795                           
  1796                           ;default_settings.c: 134: ee_write(page, (uint8_t)(addr + i), temp);
  1797  0013C4  5007               	movf	write_defaults@addr,w,c
  1798  0013C6  2409               	addwf	write_defaults@i,w,c
  1799  0013C8  6E01               	movwf	ee_write@addr,c
  1800  0013CA  C008  F002         	movff	write_defaults@temp,ee_write@data
  1801  0013CE  5006               	movf	write_defaults@page,w,c
  1802  0013D0  ECD5  F00C         	call	_ee_write
  1803                           
  1804                           ;default_settings.c: 135: i ++;
  1805  0013D4  2A09               	incf	write_defaults@i,f,c
  1806  0013D6                     l437:
  1807  0013D6  0E23               	movlw	35
  1808  0013D8  1808               	xorwf	write_defaults@temp,w,c
  1809  0013DA  A4D8               	btfss	status,2,c
  1810  0013DC  D7E8               	goto	l438
  1811                           
  1812                           ;default_settings.c: 136: }
  1813                           ;default_settings.c: 138: page = 0x00;
  1814  0013DE  0E00               	movlw	0
  1815  0013E0  6E06               	movwf	write_defaults@page,c
  1816                           
  1817                           ;default_settings.c: 139: addr = 0xD0;
  1818  0013E2  0ED0               	movlw	208
  1819  0013E4  6E07               	movwf	write_defaults@addr,c
  1820                           
  1821                           ;default_settings.c: 140: temp = 0x00;
  1822  0013E6  0E00               	movlw	0
  1823  0013E8  6E08               	movwf	write_defaults@temp,c
  1824                           
  1825                           ;default_settings.c: 141: i = 0;
  1826  0013EA  0E00               	movlw	0
  1827  0013EC  6E09               	movwf	write_defaults@i,c
  1828                           
  1829                           ;default_settings.c: 142: while (temp != '#')
  1830  0013EE  D014               	goto	l440
  1831  0013F0                     
  1832                           ;default_settings.c: 143: {
  1833                           ;default_settings.c: 144: temp = default_LINE_CARD[i];
  1834  0013F0  5009               	movf	write_defaults@i,w,c
  1835  0013F2  0D01               	mullw	1
  1836  0013F4  0E60               	movlw	low _default_LINE_CARD
  1837  0013F6  24F3               	addwf	prodl,w,c
  1838  0013F8  6EF6               	movwf	tblptrl,c
  1839  0013FA  0E10               	movlw	high _default_LINE_CARD
  1840  0013FC  20F4               	addwfc	prodh,w,c
  1841  0013FE  6EF7               	movwf	tblptrh,c
  1842  001400                     	if	0	;There are less than 3 active tblptr bytes
  1843  001400                     	endif
  1844  001400  0008               	tblrd		*
  1845  001402  CFF5 F008          	movff	tablat,write_defaults@temp
  1846                           
  1847                           ;default_settings.c: 145: ee_write(page, (uint8_t)(addr + i), temp);
  1848  001406  5007               	movf	write_defaults@addr,w,c
  1849  001408  2409               	addwf	write_defaults@i,w,c
  1850  00140A  6E01               	movwf	ee_write@addr,c
  1851  00140C  C008  F002         	movff	write_defaults@temp,ee_write@data
  1852  001410  5006               	movf	write_defaults@page,w,c
  1853  001412  ECD5  F00C         	call	_ee_write
  1854                           
  1855                           ;default_settings.c: 146: i ++;
  1856  001416  2A09               	incf	write_defaults@i,f,c
  1857  001418                     l440:
  1858  001418  0E23               	movlw	35
  1859  00141A  1808               	xorwf	write_defaults@temp,w,c
  1860  00141C  A4D8               	btfss	status,2,c
  1861  00141E  D7E8               	goto	l441
  1862                           
  1863                           ;default_settings.c: 147: }
  1864                           ;default_settings.c: 149: ee_write(0, 0xB9, default_ZONE1);
  1865  001420  0EB9               	movlw	185
  1866  001422  6E01               	movwf	ee_write@addr,c
  1867  001424  0E7B               	movlw	low _default_ZONE1
  1868  001426  6EF6               	movwf	tblptrl,c
  1869  001428                     	if	0	;There is only one active tblptr byte
  1870  001428                     	endif
  1871  001428                     	if	0	;There are less than 3 active tblptr bytes
  1872  001428                     	endif
  1873  001428  0008               	tblrd		*
  1874  00142A  CFF5 F002          	movff	tablat,ee_write@data
  1875  00142E  0E00               	movlw	0
  1876  001430  ECD5  F00C         	call	_ee_write
  1877                           
  1878                           ;default_settings.c: 150: ee_write(0, 0xBA, default_ZONE2);
  1879  001434  0EBA               	movlw	186
  1880  001436  6E01               	movwf	ee_write@addr,c
  1881  001438  0E7A               	movlw	low _default_ZONE2
  1882  00143A  6EF6               	movwf	tblptrl,c
  1883  00143C                     	if	0	;There is only one active tblptr byte
  1884  00143C                     	endif
  1885  00143C                     	if	0	;There are less than 3 active tblptr bytes
  1886  00143C                     	endif
  1887  00143C  0008               	tblrd		*
  1888  00143E  CFF5 F002          	movff	tablat,ee_write@data
  1889  001442  0E00               	movlw	0
  1890  001444  ECD5  F00C         	call	_ee_write
  1891                           
  1892                           ;default_settings.c: 151: ee_write(0, 0xBB, default_TP_PIN);
  1893  001448  0EBB               	movlw	187
  1894  00144A  6E01               	movwf	ee_write@addr,c
  1895  00144C  0E79               	movlw	low _default_TP_PIN
  1896  00144E  6EF6               	movwf	tblptrl,c
  1897  001450                     	if	0	;There is only one active tblptr byte
  1898  001450                     	endif
  1899  001450                     	if	0	;There are less than 3 active tblptr bytes
  1900  001450                     	endif
  1901  001450  0008               	tblrd		*
  1902  001452  CFF5 F002          	movff	tablat,ee_write@data
  1903  001456  0E00               	movlw	0
  1904  001458  ECD5  F00C         	call	_ee_write
  1905                           
  1906                           ;default_settings.c: 152: ee_write(0, 0xBC, default_CYCLE);
  1907  00145C  0EBC               	movlw	188
  1908  00145E  6E01               	movwf	ee_write@addr,c
  1909  001460  0E78               	movlw	low _default_CYCLE
  1910  001462  6EF6               	movwf	tblptrl,c
  1911  001464                     	if	0	;There is only one active tblptr byte
  1912  001464                     	endif
  1913  001464                     	if	0	;There are less than 3 active tblptr bytes
  1914  001464                     	endif
  1915  001464  0008               	tblrd		*
  1916  001466  CFF5 F002          	movff	tablat,ee_write@data
  1917  00146A  0E00               	movlw	0
  1918  00146C  ECD5  F00C         	call	_ee_write
  1919                           
  1920                           ;default_settings.c: 153: ee_write(0, 0xBD, default_RETRY);
  1921  001470  0EBD               	movlw	189
  1922  001472  6E01               	movwf	ee_write@addr,c
  1923  001474  0E77               	movlw	low _default_RETRY
  1924  001476  6EF6               	movwf	tblptrl,c
  1925  001478                     	if	0	;There is only one active tblptr byte
  1926  001478                     	endif
  1927  001478                     	if	0	;There are less than 3 active tblptr bytes
  1928  001478                     	endif
  1929  001478  0008               	tblrd		*
  1930  00147A  CFF5 F002          	movff	tablat,ee_write@data
  1931  00147E  0E00               	movlw	0
  1932  001480  ECD5  F00C         	call	_ee_write
  1933                           
  1934                           ;default_settings.c: 155: ee_write(0, 0xE0,default_ENCRYPTION);
  1935  001484  0EE0               	movlw	224
  1936  001486  6E01               	movwf	ee_write@addr,c
  1937  001488  0E75               	movlw	low _default_ENCRYPTION
  1938  00148A  6EF6               	movwf	tblptrl,c
  1939  00148C                     	if	0	;There is only one active tblptr byte
  1940  00148C                     	endif
  1941  00148C                     	if	0	;There are less than 3 active tblptr bytes
  1942  00148C                     	endif
  1943  00148C  0008               	tblrd		*
  1944  00148E  CFF5 F002          	movff	tablat,ee_write@data
  1945  001492  0E00               	movlw	0
  1946  001494  ECD5  F00C         	call	_ee_write
  1947                           
  1948                           ;default_settings.c: 157: ee_write(0, 0x0F, 0x00);
  1949  001498  0E0F               	movlw	15
  1950  00149A  6E01               	movwf	ee_write@addr,c
  1951  00149C  0E00               	movlw	0
  1952  00149E  6E02               	movwf	ee_write@data,c
  1953  0014A0  0E00               	movlw	0
  1954  0014A2  ECD5  F00C         	call	_ee_write
  1955                           
  1956                           ;default_settings.c: 159: ee_write(0, 0x00, VERSION[0]);
  1957  0014A6  0E00               	movlw	0
  1958  0014A8  6E01               	movwf	ee_write@addr,c
  1959  0014AA  C03B  F002         	movff	_VERSION,ee_write@data
  1960  0014AE  0E00               	movlw	0
  1961  0014B0  ECD5  F00C         	call	_ee_write
  1962                           
  1963                           ;default_settings.c: 160: ee_write(0, 0x01, VERSION[1]);
  1964  0014B4  0E01               	movlw	1
  1965  0014B6  6E01               	movwf	ee_write@addr,c
  1966  0014B8  C03C  F002         	movff	_VERSION+1,ee_write@data
  1967  0014BC  0E00               	movlw	0
  1968  0014BE  ECD5  F00C         	call	_ee_write
  1969                           
  1970                           ;default_settings.c: 161: ee_write(0, 0x02, VERSION[2]);
  1971  0014C2  0E02               	movlw	2
  1972  0014C4  6E01               	movwf	ee_write@addr,c
  1973  0014C6  C03D  F002         	movff	_VERSION+2,ee_write@data
  1974  0014CA  0E00               	movlw	0
  1975  0014CC  ECD5  F00C         	call	_ee_write
  1976  0014D0  0012               	return		;funcret
  1977  0014D2                     __end_of_write_defaults:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           prodh	equ	0xFF4
  1984                           prodl	equ	0xFF3
  1985                           intcon	equ	0xFF2
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           postdec1	equ	0xFE5
  1989                           fsr1l	equ	0xFE1
  1990                           postinc2	equ	0xFDE
  1991                           status	equ	0xFD8
  1992                           
  1993 ;; *************** function _sim_card_ok *****************
  1994 ;; Defined at:
  1995 ;;		line 127 in file "modem.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  buf            32    0        unsigned char [32]
  2000 ;;  cpinResponse   13    0[COMRAM] const unsigned char [13]
  2001 ;;  cpin           11   13[COMRAM] const unsigned char [11]
  2002 ;;  cnt             1   25[COMRAM] unsigned char 
  2003 ;;  matches         1   24[COMRAM] unsigned char 
  2004 ;;  i               1    0        unsigned char 
  2005 ;;  temp            1    0        unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      unsigned char 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;Total ram usage:       26 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_setup_modem_io_ok
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text6
  2029  001944                     __ptext6:
  2030                           	opt stack 0
  2031  001944                     _sim_card_ok:
  2032                           	opt stack 27
  2033                           
  2034                           ;modem.c: 129: const uint8_t cpin[] = "AT+CPIN?\r\n";
  2035                           
  2036                           ;incstack = 0
  2037  001944  0E3A               	movlw	low sim_card_ok@F6758
  2038  001946  6EF6               	movwf	tblptrl,c
  2039  001948                     	if	0	;There is only one active tblptr byte
  2040  001948                     	endif
  2041  001948                     	if	0	;There are less than 3 active tblptr bytes
  2042  001948                     	endif
  2043  001948  EE20  F00E         	lfsr	2,sim_card_ok@cpin
  2044  00194C  0E0A               	movlw	10
  2045  00194E                     u420:
  2046  00194E  0009               	tblrd		*+
  2047  001950  CFF5 FFDE          	movff	tablat,postinc2
  2048  001954  06E8               	decf	wreg,f,c
  2049  001956  E2FB               	bc	u420
  2050                           
  2051                           ;modem.c: 130: const uint8_t cpinResponse[] = "+CPIN: READY";
  2052  001958  0E21               	movlw	low sim_card_ok@F6760
  2053  00195A  6EF6               	movwf	tblptrl,c
  2054  00195C                     	if	0	;There is only one active tblptr byte
  2055  00195C                     	endif
  2056  00195C                     	if	0	;There are less than 3 active tblptr bytes
  2057  00195C                     	endif
  2058  00195C  EE20  F001         	lfsr	2,sim_card_ok@cpinResponse
  2059  001960  0E0C               	movlw	12
  2060  001962                     u430:
  2061  001962  0009               	tblrd		*+
  2062  001964  CFF5 FFDE          	movff	tablat,postinc2
  2063  001968  06E8               	decf	wreg,f,c
  2064  00196A  E2FB               	bc	u430
  2065                           
  2066                           ;modem.c: 131: bool matches = 0;
  2067  00196C  0E00               	movlw	0
  2068  00196E  6E19               	movwf	sim_card_ok@matches,c
  2069                           
  2070                           ;modem.c: 132: uint8_t buf[32], temp, i, cnt = 20;
  2071  001970  0E14               	movlw	20
  2072  001972  6E1A               	movwf	sim_card_ok@cnt,c
  2073                           
  2074                           ;modem.c: 134: return 1;
  2075  001974  0E01               	movlw	1
  2076  001976  0012               	return	
  2077  001978                     __end_of_sim_card_ok:
  2078                           	opt stack 0
  2079                           tblptru	equ	0xFF8
  2080                           tblptrh	equ	0xFF7
  2081                           tblptrl	equ	0xFF6
  2082                           tablat	equ	0xFF5
  2083                           prodh	equ	0xFF4
  2084                           prodl	equ	0xFF3
  2085                           intcon	equ	0xFF2
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           postdec1	equ	0xFE5
  2089                           fsr1l	equ	0xFE1
  2090                           postinc2	equ	0xFDE
  2091                           status	equ	0xFD8
  2092                           
  2093 ;; *************** function _save_first_run *****************
  2094 ;; Defined at:
  2095 ;;		line 170 in file "default_settings.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    1
  2116 ;; This function calls:
  2117 ;;		_ee_write
  2118 ;; This function is called by:
  2119 ;;		_setup_modem_io_ok
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text7
  2124  001AEA                     __ptext7:
  2125                           	opt stack 0
  2126  001AEA                     _save_first_run:
  2127                           	opt stack 26
  2128                           
  2129                           ;default_settings.c: 172: ee_write(0, 0xF0, 0x57);
  2130                           
  2131                           ;incstack = 0
  2132  001AEA  0EF0               	movlw	240
  2133  001AEC  6E01               	movwf	ee_write@addr,c
  2134  001AEE  0E57               	movlw	87
  2135  001AF0  6E02               	movwf	ee_write@data,c
  2136  001AF2  0E00               	movlw	0
  2137  001AF4  ECD5  F00C         	call	_ee_write
  2138  001AF8  0012               	return		;funcret
  2139  001AFA                     __end_of_save_first_run:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           intcon	equ	0xFF2
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           postdec1	equ	0xFE5
  2151                           fsr1l	equ	0xFE1
  2152                           postinc2	equ	0xFDE
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _ee_write *****************
  2156 ;; Defined at:
  2157 ;;		line 26 in file "eeprom.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  page            1    wreg     unsigned char 
  2160 ;;  addr            1    0[COMRAM] unsigned char 
  2161 ;;  data            1    1[COMRAM] unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  page            1    2[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;Total ram usage:        3 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_write_defaults
  2183 ;;		_save_first_run
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text8
  2188  0019AA                     __ptext8:
  2189                           	opt stack 0
  2190  0019AA                     _ee_write:
  2191                           	opt stack 26
  2192                           
  2193                           ;incstack = 0
  2194                           ;ee_write@page stored from wreg
  2195  0019AA  6E03               	movwf	ee_write@page,c
  2196                           
  2197                           ;eeprom.c: 28: GIE = 0;
  2198  0019AC  9EF2               	bcf	intcon,7,c	;volatile
  2199                           
  2200                           ;eeprom.c: 29: EEADRH = page;
  2201  0019AE  C003  FFAA         	movff	ee_write@page,4010	;volatile
  2202                           
  2203                           ;eeprom.c: 30: EEADR = addr;
  2204  0019B2  C001  FFA9         	movff	ee_write@addr,4009	;volatile
  2205                           
  2206                           ;eeprom.c: 31: EEDATA = data;
  2207  0019B6  C002  FFA8         	movff	ee_write@data,4008	;volatile
  2208                           
  2209                           ;eeprom.c: 32: CFGS = 0;
  2210  0019BA  9CA6               	bcf	4006,6,c	;volsfr
  2211                           
  2212                           ;eeprom.c: 33: EEPGD = 0;
  2213  0019BC  9EA6               	bcf	4006,7,c	;volsfr
  2214                           
  2215                           ;eeprom.c: 34: WREN = 1;
  2216  0019BE  84A6               	bsf	4006,2,c	;volsfr
  2217                           
  2218                           ;eeprom.c: 35: GIE = 0;
  2219  0019C0  9EF2               	bcf	intcon,7,c	;volatile
  2220                           
  2221                           ;eeprom.c: 36: EECON2 = 0x55;
  2222  0019C2  0E55               	movlw	85
  2223  0019C4  6EA7               	movwf	4007,c	;volsfr
  2224                           
  2225                           ;eeprom.c: 37: EECON2 = 0xAA;
  2226  0019C6  0EAA               	movlw	170
  2227  0019C8  6EA7               	movwf	4007,c	;volsfr
  2228                           
  2229                           ;eeprom.c: 38: WR = 1;
  2230  0019CA  82A6               	bsf	4006,1,c	;volsfr
  2231                           
  2232                           ;eeprom.c: 39: GIE = 1;
  2233  0019CC  8EF2               	bsf	intcon,7,c	;volatile
  2234                           
  2235                           ;eeprom.c: 40: WREN = 0;
  2236  0019CE  94A6               	bcf	4006,2,c	;volsfr
  2237  0019D0  B2A6               	btfsc	4006,1,c	;volsfr
  2238  0019D2  D7FE               	goto	l479
  2239                           
  2240                           ;eeprom.c: 42: PIR2bits.EEIF = 0;
  2241  0019D4  98A1               	bcf	4001,4,c	;volatile
  2242                           
  2243                           ;eeprom.c: 43: GIE = 1;
  2244  0019D6  8EF2               	bsf	intcon,7,c	;volatile
  2245  0019D8  0012               	return		;funcret
  2246  0019DA                     __end_of_ee_write:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           prodh	equ	0xFF4
  2253                           prodl	equ	0xFF3
  2254                           intcon	equ	0xFF2
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           postdec1	equ	0xFE5
  2258                           fsr1l	equ	0xFE1
  2259                           postinc2	equ	0xFDE
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _is_first_run *****************
  2263 ;; Defined at:
  2264 ;;		line 165 in file "default_settings.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    1
  2285 ;; This function calls:
  2286 ;;		_ee_read
  2287 ;; This function is called by:
  2288 ;;		_setup_modem_io_ok
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text9
  2293  001AC2                     __ptext9:
  2294                           	opt stack 0
  2295  001AC2                     _is_first_run:
  2296                           	opt stack 26
  2297                           
  2298                           ;default_settings.c: 167: return (bool)(ee_read(0, 0xF0) != 0x57);
  2299                           
  2300                           ;incstack = 0
  2301  001AC2  0EF0               	movlw	240
  2302  001AC4  6E01               	movwf	ee_read@addr,c
  2303  001AC6  0E00               	movlw	0
  2304  001AC8  EC53  F00D         	call	_ee_read
  2305  001ACC  0A57               	xorlw	87
  2306  001ACE  B4D8               	btfsc	status,2,c
  2307  001AD0  D002               	goto	u810
  2308  001AD2  0E01               	movlw	1
  2309  001AD4  0012               	return	
  2310  001AD6                     u810:
  2311  001AD6  0E00               	movlw	0
  2312  001AD8  0012               	return	
  2313  001ADA                     __end_of_is_first_run:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           prodh	equ	0xFF4
  2320                           prodl	equ	0xFF3
  2321                           intcon	equ	0xFF2
  2322                           postinc0	equ	0xFEE
  2323                           wreg	equ	0xFE8
  2324                           postdec1	equ	0xFE5
  2325                           fsr1l	equ	0xFE1
  2326                           postinc2	equ	0xFDE
  2327                           status	equ	0xFD8
  2328                           
  2329 ;; *************** function _ee_read *****************
  2330 ;; Defined at:
  2331 ;;		line 11 in file "eeprom.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  page            1    wreg     unsigned char 
  2334 ;;  addr            1    0[COMRAM] unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  page            1    1[COMRAM] unsigned char 
  2337 ;;  data            1    2[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      unsigned char 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:        3 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_write_defaults
  2357 ;;		_is_first_run
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text10
  2362  001AA6                     __ptext10:
  2363                           	opt stack 0
  2364  001AA6                     _ee_read:
  2365                           	opt stack 26
  2366                           
  2367                           ;incstack = 0
  2368                           ;ee_read@page stored from wreg
  2369  001AA6  6E02               	movwf	ee_read@page,c
  2370                           
  2371                           ;eeprom.c: 13: unsigned char data;
  2372                           ;eeprom.c: 14: GIE = 0;
  2373  001AA8  9EF2               	bcf	intcon,7,c	;volatile
  2374                           
  2375                           ;eeprom.c: 15: EEADRH = page;
  2376  001AAA  C002  FFAA         	movff	ee_read@page,4010	;volatile
  2377                           
  2378                           ;eeprom.c: 16: EEADR = addr;
  2379  001AAE  C001  FFA9         	movff	ee_read@addr,4009	;volatile
  2380                           
  2381                           ;eeprom.c: 17: CFGS = 0;
  2382  001AB2  9CA6               	bcf	4006,6,c	;volsfr
  2383                           
  2384                           ;eeprom.c: 18: EEPGD = 0;
  2385  001AB4  9EA6               	bcf	4006,7,c	;volsfr
  2386                           
  2387                           ;eeprom.c: 19: RD = 1;
  2388  001AB6  80A6               	bsf	4006,0,c	;volsfr
  2389                           
  2390                           ;eeprom.c: 20: data = EEDATA;
  2391  001AB8  CFA8 F003          	movff	4008,ee_read@data	;volatile
  2392                           
  2393                           ;eeprom.c: 21: GIE = 1;
  2394  001ABC  8EF2               	bsf	intcon,7,c	;volatile
  2395                           
  2396                           ;eeprom.c: 22: return (data);
  2397  001ABE  5003               	movf	ee_read@data,w,c
  2398  001AC0  0012               	return	
  2399  001AC2                     __end_of_ee_read:
  2400                           	opt stack 0
  2401                           tblptru	equ	0xFF8
  2402                           tblptrh	equ	0xFF7
  2403                           tblptrl	equ	0xFF6
  2404                           tablat	equ	0xFF5
  2405                           prodh	equ	0xFF4
  2406                           prodl	equ	0xFF3
  2407                           intcon	equ	0xFF2
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           postdec1	equ	0xFE5
  2411                           fsr1l	equ	0xFE1
  2412                           postinc2	equ	0xFDE
  2413                           status	equ	0xFD8
  2414                           
  2415 ;; *************** function _init_modem_io_ok *****************
  2416 ;; Defined at:
  2417 ;;		line 99 in file "modem.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  ledCfg         16   18[COMRAM] const unsigned char [16]
  2422 ;;  ledPattern     12   34[COMRAM] const unsigned char [12]
  2423 ;;  queryVersion   10   46[COMRAM] const unsigned char [10]
  2424 ;;  cnt             1   56[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      unsigned char 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:       39 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    3
  2441 ;; This function calls:
  2442 ;;		_md_uart_send_ok
  2443 ;; This function is called by:
  2444 ;;		_setup_modem_io_ok
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text11
  2449  0016E2                     __ptext11:
  2450                           	opt stack 0
  2451  0016E2                     _init_modem_io_ok:
  2452                           	opt stack 24
  2453                           
  2454                           ;modem.c: 101: uint8_t cnt = 20;
  2455                           
  2456                           ;incstack = 0
  2457  0016E2  0E14               	movlw	20
  2458  0016E4  6E39               	movwf	init_modem_io_ok@cnt,c
  2459                           
  2460                           ;modem.c: 106: const uint8_t ledCfg[] = "AT#GPIO=7,0,2\r\n";
  2461  0016E6  0E01               	movlw	low init_modem_io_ok@F6749
  2462  0016E8  6EF6               	movwf	tblptrl,c
  2463  0016EA                     	if	0	;There is only one active tblptr byte
  2464  0016EA                     	endif
  2465  0016EA                     	if	0	;There are less than 3 active tblptr bytes
  2466  0016EA                     	endif
  2467  0016EA  EE20  F013         	lfsr	2,init_modem_io_ok@ledCfg
  2468  0016EE  0E0F               	movlw	15
  2469  0016F0                     u950:
  2470  0016F0  0009               	tblrd		*+
  2471  0016F2  CFF5 FFDE          	movff	tablat,postinc2
  2472  0016F6  06E8               	decf	wreg,f,c
  2473  0016F8  E2FB               	bc	u950
  2474                           
  2475                           ;modem.c: 108: const uint8_t queryVersion[] = "AT#CGMR\r\n";
  2476  0016FA  0E45               	movlw	low init_modem_io_ok@F6751
  2477  0016FC  6EF6               	movwf	tblptrl,c
  2478  0016FE                     	if	0	;There is only one active tblptr byte
  2479  0016FE                     	endif
  2480  0016FE                     	if	0	;There are less than 3 active tblptr bytes
  2481  0016FE                     	endif
  2482  0016FE  EE20  F02F         	lfsr	2,init_modem_io_ok@queryVersion
  2483  001702  0E09               	movlw	9
  2484  001704                     u960:
  2485  001704  0009               	tblrd		*+
  2486  001706  CFF5 FFDE          	movff	tablat,postinc2
  2487  00170A  06E8               	decf	wreg,f,c
  2488  00170C  E2FB               	bc	u960
  2489                           
  2490                           ;modem.c: 109: const uint8_t ledPattern[] = "AT#SLED=4\r\n";
  2491  00170E  0E2E               	movlw	low init_modem_io_ok@F6753
  2492  001710  6EF6               	movwf	tblptrl,c
  2493  001712                     	if	0	;There is only one active tblptr byte
  2494  001712                     	endif
  2495  001712                     	if	0	;There are less than 3 active tblptr bytes
  2496  001712                     	endif
  2497  001712  EE20  F023         	lfsr	2,init_modem_io_ok@ledPattern
  2498  001716  0E0B               	movlw	11
  2499  001718                     u970:
  2500  001718  0009               	tblrd		*+
  2501  00171A  CFF5 FFDE          	movff	tablat,postinc2
  2502  00171E  06E8               	decf	wreg,f,c
  2503  001720  E2FB               	bc	u970
  2504  001722  0E13               	movlw	low init_modem_io_ok@ledCfg
  2505  001724  6E07               	movwf	md_uart_send_ok@toSend,c
  2506  001726  0E00               	movlw	high init_modem_io_ok@ledCfg
  2507  001728  6E08               	movwf	md_uart_send_ok@toSend+1,c
  2508  00172A  0E10               	movlw	16
  2509  00172C  6E09               	movwf	md_uart_send_ok@lengthToSend,c
  2510  00172E  0E00               	movlw	low _returnStr
  2511  001730  6E0A               	movwf	md_uart_send_ok@rtnStr,c
  2512  001732  0E01               	movlw	high _returnStr
  2513  001734  6E0B               	movwf	md_uart_send_ok@rtnStr+1,c
  2514  001736  0E01               	movlw	1
  2515  001738  6E0C               	movwf	md_uart_send_ok@want_ok,c
  2516  00173A  0E28               	movlw	40
  2517  00173C  6E0D               	movwf	md_uart_send_ok@wait_count,c
  2518  00173E  EC69  F00A         	call	_md_uart_send_ok	;wreg free
  2519  001742  0900               	iorlw	0
  2520  001744  A4D8               	btfss	status,2,c
  2521  001746  D002               	goto	l236
  2522  001748  2E39               	decfsz	init_modem_io_ok@cnt,f,c
  2523  00174A  D7EB               	goto	l234
  2524  00174C                     l236:
  2525                           
  2526                           ;modem.c: 112: if (cnt == 0)
  2527  00174C  5039               	movf	init_modem_io_ok@cnt,w,c
  2528  00174E  A4D8               	btfss	status,2,c
  2529  001750  D002               	goto	l238
  2530                           
  2531                           ;modem.c: 113: return 0;
  2532  001752  0E00               	movlw	0
  2533  001754  0012               	return	
  2534  001756                     l238:
  2535                           
  2536                           ;modem.c: 114: cnt = 20;
  2537  001756  0E14               	movlw	20
  2538  001758  6E39               	movwf	init_modem_io_ok@cnt,c
  2539  00175A  0E2F               	movlw	low init_modem_io_ok@queryVersion
  2540  00175C  6E07               	movwf	md_uart_send_ok@toSend,c
  2541  00175E  0E00               	movlw	high init_modem_io_ok@queryVersion
  2542  001760  6E08               	movwf	md_uart_send_ok@toSend+1,c
  2543  001762  0E0A               	movlw	10
  2544  001764  6E09               	movwf	md_uart_send_ok@lengthToSend,c
  2545  001766  0E00               	movlw	low _returnStr
  2546  001768  6E0A               	movwf	md_uart_send_ok@rtnStr,c
  2547  00176A  0E01               	movlw	high _returnStr
  2548  00176C  6E0B               	movwf	md_uart_send_ok@rtnStr+1,c
  2549  00176E  0E01               	movlw	1
  2550  001770  6E0C               	movwf	md_uart_send_ok@want_ok,c
  2551  001772  0E28               	movlw	40
  2552  001774  6E0D               	movwf	md_uart_send_ok@wait_count,c
  2553  001776  EC69  F00A         	call	_md_uart_send_ok	;wreg free
  2554  00177A  0900               	iorlw	0
  2555  00177C  A4D8               	btfss	status,2,c
  2556  00177E  D002               	goto	l243
  2557  001780  2E39               	decfsz	init_modem_io_ok@cnt,f,c
  2558  001782  D7EB               	goto	l241
  2559  001784                     l243:
  2560                           
  2561                           ;modem.c: 116: if (cnt == 0)
  2562  001784  5039               	movf	init_modem_io_ok@cnt,w,c
  2563  001786  A4D8               	btfss	status,2,c
  2564  001788  D002               	goto	l245
  2565                           
  2566                           ;modem.c: 117: return 0;
  2567  00178A  0E00               	movlw	0
  2568  00178C  0012               	return	
  2569  00178E                     l245:
  2570                           
  2571                           ;modem.c: 118: cnt = 20;
  2572  00178E  0E14               	movlw	20
  2573  001790  6E39               	movwf	init_modem_io_ok@cnt,c
  2574  001792  0E23               	movlw	low init_modem_io_ok@ledPattern
  2575  001794  6E07               	movwf	md_uart_send_ok@toSend,c
  2576  001796  0E00               	movlw	high init_modem_io_ok@ledPattern
  2577  001798  6E08               	movwf	md_uart_send_ok@toSend+1,c
  2578  00179A  0E0C               	movlw	12
  2579  00179C  6E09               	movwf	md_uart_send_ok@lengthToSend,c
  2580  00179E  0E00               	movlw	low _returnStr
  2581  0017A0  6E0A               	movwf	md_uart_send_ok@rtnStr,c
  2582  0017A2  0E01               	movlw	high _returnStr
  2583  0017A4  6E0B               	movwf	md_uart_send_ok@rtnStr+1,c
  2584  0017A6  0E01               	movlw	1
  2585  0017A8  6E0C               	movwf	md_uart_send_ok@want_ok,c
  2586  0017AA  0E28               	movlw	40
  2587  0017AC  6E0D               	movwf	md_uart_send_ok@wait_count,c
  2588  0017AE  EC69  F00A         	call	_md_uart_send_ok	;wreg free
  2589  0017B2  0900               	iorlw	0
  2590  0017B4  A4D8               	btfss	status,2,c
  2591  0017B6  D002               	goto	l249
  2592  0017B8  2E39               	decfsz	init_modem_io_ok@cnt,f,c
  2593  0017BA  D7EB               	goto	l247
  2594  0017BC                     l249:
  2595                           
  2596                           ;modem.c: 120: if (cnt == 0)
  2597  0017BC  5039               	movf	init_modem_io_ok@cnt,w,c
  2598  0017BE  A4D8               	btfss	status,2,c
  2599  0017C0  D002               	goto	l251
  2600                           
  2601                           ;modem.c: 121: return 0;
  2602  0017C2  0E00               	movlw	0
  2603  0017C4  0012               	return	
  2604  0017C6                     l251:
  2605                           
  2606                           ;modem.c: 123: return 1;
  2607  0017C6  0E01               	movlw	1
  2608  0017C8  0012               	return	
  2609  0017CA                     __end_of_init_modem_io_ok:
  2610                           	opt stack 0
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           prodh	equ	0xFF4
  2616                           prodl	equ	0xFF3
  2617                           intcon	equ	0xFF2
  2618                           postinc0	equ	0xFEE
  2619                           wreg	equ	0xFE8
  2620                           postdec1	equ	0xFE5
  2621                           fsr1l	equ	0xFE1
  2622                           postinc2	equ	0xFDE
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _md_uart_send_ok *****************
  2626 ;; Defined at:
  2627 ;;		line 44 in file "uart.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  toSend          2    6[COMRAM] PTR unsigned char 
  2630 ;;		 -> init_modem_io_ok@ledPattern(12), init_modem_io_ok@queryVersion(10), init_modem_io_ok@ledCfg(16), wakeup_modem_ok
      +@ipr(16), 
  2631 ;;		 -> wakeup_modem_ok@at(5), 
  2632 ;;  lengthToSend    1    8[COMRAM] unsigned char 
  2633 ;;  rtnStr          2    9[COMRAM] PTR unsigned char 
  2634 ;;		 -> returnStr(100), 
  2635 ;;  want_ok         1   11[COMRAM] unsigned char 
  2636 ;;  wait_count      1   12[COMRAM] unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  k               1  102[BANK0 ] unsigned char 
  2639 ;;  buf           100    0[BANK0 ] unsigned char [100]
  2640 ;;  i               1  103[BANK0 ] unsigned char 
  2641 ;;  count           1  101[BANK0 ] unsigned char 
  2642 ;;  temp            1  100[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      unsigned char 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Locals:         0     104       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Totals:        12     104       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;Total ram usage:      116 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    2
  2659 ;; This function calls:
  2660 ;;		_md_uart_write
  2661 ;;		_setup_timer3
  2662 ;; This function is called by:
  2663 ;;		_wakeup_modem_ok
  2664 ;;		_init_modem_io_ok
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text12
  2669  0014D2                     __ptext12:
  2670                           	opt stack 0
  2671  0014D2                     _md_uart_send_ok:
  2672                           	opt stack 25
  2673                           
  2674                           ;uart.c: 46: uint8_t buf[100],temp, i = 0, count = wait_count;
  2675                           
  2676                           ;incstack = 0
  2677  0014D2  0E00               	movlw	0
  2678  0014D4  0100               	movlb	0	; () banked
  2679  0014D6  6FC7               	movwf	md_uart_send_ok@i& (0+255),b
  2680                           
  2681                           ; BSR set to: 0
  2682  0014D8  C00D  F0C5         	movff	md_uart_send_ok@wait_count,md_uart_send_ok@count
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;uart.c: 47: md_uart_write(toSend, lengthToSend);
  2686  0014DC  C007  F002         	movff	md_uart_send_ok@toSend,md_uart_write@data
  2687  0014E0  C008  F003         	movff	md_uart_send_ok@toSend+1,md_uart_write@data+1
  2688  0014E4  C009  F004         	movff	md_uart_send_ok@lengthToSend,md_uart_write@len
  2689  0014E8  EC04  F00D         	call	_md_uart_write	;wreg free
  2690                           
  2691                           ;uart.c: 55: if (!want_ok)
  2692  0014EC  500C               	movf	md_uart_send_ok@want_ok,w,c
  2693  0014EE  A4D8               	btfss	status,2,c
  2694  0014F0  D002               	goto	l317
  2695                           
  2696                           ;uart.c: 56: return 1;
  2697  0014F2  0E01               	movlw	1
  2698  0014F4  0012               	return	
  2699  0014F6                     l317:
  2700                           
  2701                           ;uart.c: 58: RC1IE = 0;
  2702  0014F6  9A9D               	bcf	3997,5,c	;volatile
  2703                           
  2704                           ;uart.c: 59: CREN1 = 1;
  2705  0014F8  88AB               	bsf	4011,4,c	;volatile
  2706                           
  2707                           ;uart.c: 60: while (count-- != 0)
  2708  0014FA  D0E9               	goto	l319
  2709  0014FC                     
  2710                           ;uart.c: 61: {
  2711                           ;uart.c: 62: setup_timer3();
  2712  0014FC  EC7D  F00D         	call	_setup_timer3	;wreg free
  2713                           
  2714                           ;uart.c: 63: while(!TMR3IF)
  2715  001500  D0E3               	goto	l332
  2716  001502                     l322:
  2717                           
  2718                           ;uart.c: 64: {
  2719                           ;uart.c: 65: if( RC1IF == 1 )
  2720  001502  AA9E               	btfss	3998,5,c	;volatile
  2721  001504  D0E1               	goto	l332
  2722                           
  2723                           ;uart.c: 66: {
  2724                           ;uart.c: 67: temp = RC1REG;
  2725  001506  CFAE F0C4          	movff	4014,md_uart_send_ok@temp	;volatile
  2726                           
  2727                           ;uart.c: 68: buf[i++] = temp;
  2728  00150A  0100               	movlb	0	; () banked
  2729  00150C  51C7               	movf	md_uart_send_ok@i& (0+255),w,b
  2730  00150E  0D01               	mullw	1
  2731  001510  0E60               	movlw	low md_uart_send_ok@buf
  2732  001512  24F3               	addwf	prodl,w,c
  2733  001514  6ED9               	movwf	fsr2l,c
  2734  001516  0E00               	movlw	high md_uart_send_ok@buf
  2735  001518  20F4               	addwfc	prodh,w,c
  2736  00151A  6EDA               	movwf	fsr2h,c
  2737  00151C  C0C4  FFDF         	movff	md_uart_send_ok@temp,indf2
  2738                           
  2739                           ; BSR set to: 0
  2740  001520  2BC7               	incf	md_uart_send_ok@i& (0+255),f,b
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;uart.c: 70: if (i >= sizeof(buf))
  2744  001522  0E63               	movlw	99
  2745  001524  65C7               	cpfsgt	md_uart_send_ok@i& (0+255),b
  2746  001526  D002               	goto	l324
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;uart.c: 71: i = sizeof(buf) - 1;
  2750  001528  0E63               	movlw	99
  2751  00152A  6FC7               	movwf	md_uart_send_ok@i& (0+255),b
  2752  00152C                     l324:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;uart.c: 73: if (buf[(uint8_t)(i-2)] == 'O' && buf[i-1] == 'K' && (buf[i-3] == '\n' || b
      +                          uf[i-2] == '\r'))
  2756                           
  2757                           ; BSR set to: 0
  2758  00152C  C0C7  F00E         	movff	md_uart_send_ok@i,??_md_uart_send_ok
  2759  001530  0EFE               	movlw	254
  2760  001532  260E               	addwf	??_md_uart_send_ok,f,c
  2761  001534  500E               	movf	??_md_uart_send_ok,w,c
  2762  001536  0D01               	mullw	1
  2763  001538  0E60               	movlw	low md_uart_send_ok@buf
  2764  00153A  24F3               	addwf	prodl,w,c
  2765  00153C  6ED9               	movwf	fsr2l,c
  2766  00153E  0E00               	movlw	high md_uart_send_ok@buf
  2767  001540  20F4               	addwfc	prodh,w,c
  2768  001542  6EDA               	movwf	fsr2h,c
  2769  001544  0E4F               	movlw	79
  2770  001546  18DE               	xorwf	postinc2,w,c
  2771  001548  A4D8               	btfss	status,2,c
  2772  00154A  D05B               	goto	l325
  2773                           
  2774                           ; BSR set to: 0
  2775  00154C  0EFF               	movlw	255
  2776  00154E  6E0E               	movwf	??_md_uart_send_ok& (0+255),c
  2777  001550  0EFF               	movlw	255
  2778  001552  6E0F               	movwf	(??_md_uart_send_ok+1)& (0+255),c
  2779  001554  51C7               	movf	md_uart_send_ok@i& (0+255),w,b
  2780  001556  6E10               	movwf	(??_md_uart_send_ok+2)& (0+255),c
  2781  001558  6A11               	clrf	(??_md_uart_send_ok+3)& (0+255),c
  2782  00155A  500E               	movf	??_md_uart_send_ok,w,c
  2783  00155C  2610               	addwf	??_md_uart_send_ok+2,f,c
  2784  00155E  500F               	movf	??_md_uart_send_ok+1,w,c
  2785  001560  2211               	addwfc	??_md_uart_send_ok+3,f,c
  2786  001562  0E60               	movlw	low md_uart_send_ok@buf
  2787  001564  2410               	addwf	??_md_uart_send_ok+2,w,c
  2788  001566  6ED9               	movwf	fsr2l,c
  2789  001568  0E00               	movlw	high md_uart_send_ok@buf
  2790  00156A  2011               	addwfc	??_md_uart_send_ok+3,w,c
  2791  00156C  6EDA               	movwf	fsr2h,c
  2792  00156E  0E4B               	movlw	75
  2793  001570  18DE               	xorwf	postinc2,w,c
  2794  001572  A4D8               	btfss	status,2,c
  2795  001574  D046               	goto	l325
  2796                           
  2797                           ; BSR set to: 0
  2798  001576  0EFD               	movlw	253
  2799  001578  6E0E               	movwf	??_md_uart_send_ok& (0+255),c
  2800  00157A  0EFF               	movlw	255
  2801  00157C  6E0F               	movwf	(??_md_uart_send_ok+1)& (0+255),c
  2802  00157E  51C7               	movf	md_uart_send_ok@i& (0+255),w,b
  2803  001580  6E10               	movwf	(??_md_uart_send_ok+2)& (0+255),c
  2804  001582  6A11               	clrf	(??_md_uart_send_ok+3)& (0+255),c
  2805  001584  500E               	movf	??_md_uart_send_ok,w,c
  2806  001586  2610               	addwf	??_md_uart_send_ok+2,f,c
  2807  001588  500F               	movf	??_md_uart_send_ok+1,w,c
  2808  00158A  2211               	addwfc	??_md_uart_send_ok+3,f,c
  2809  00158C  0E60               	movlw	low md_uart_send_ok@buf
  2810  00158E  2410               	addwf	??_md_uart_send_ok+2,w,c
  2811  001590  6ED9               	movwf	fsr2l,c
  2812  001592  0E00               	movlw	high md_uart_send_ok@buf
  2813  001594  2011               	addwfc	??_md_uart_send_ok+3,w,c
  2814  001596  6EDA               	movwf	fsr2h,c
  2815  001598  0E0A               	movlw	10
  2816  00159A  18DE               	xorwf	postinc2,w,c
  2817  00159C  B4D8               	btfsc	status,2,c
  2818  00159E  D015               	goto	u710
  2819                           
  2820                           ; BSR set to: 0
  2821  0015A0  0EFE               	movlw	254
  2822  0015A2  6E0E               	movwf	??_md_uart_send_ok& (0+255),c
  2823  0015A4  0EFF               	movlw	255
  2824  0015A6  6E0F               	movwf	(??_md_uart_send_ok+1)& (0+255),c
  2825  0015A8  51C7               	movf	md_uart_send_ok@i& (0+255),w,b
  2826  0015AA  6E10               	movwf	(??_md_uart_send_ok+2)& (0+255),c
  2827  0015AC  6A11               	clrf	(??_md_uart_send_ok+3)& (0+255),c
  2828  0015AE  500E               	movf	??_md_uart_send_ok,w,c
  2829  0015B0  2610               	addwf	??_md_uart_send_ok+2,f,c
  2830  0015B2  500F               	movf	??_md_uart_send_ok+1,w,c
  2831  0015B4  2211               	addwfc	??_md_uart_send_ok+3,f,c
  2832  0015B6  0E60               	movlw	low md_uart_send_ok@buf
  2833  0015B8  2410               	addwf	??_md_uart_send_ok+2,w,c
  2834  0015BA  6ED9               	movwf	fsr2l,c
  2835  0015BC  0E00               	movlw	high md_uart_send_ok@buf
  2836  0015BE  2011               	addwfc	??_md_uart_send_ok+3,w,c
  2837  0015C0  6EDA               	movwf	fsr2h,c
  2838  0015C2  0E0D               	movlw	13
  2839  0015C4  18DE               	xorwf	postinc2,w,c
  2840  0015C6  A4D8               	btfss	status,2,c
  2841  0015C8  D01C               	goto	l325
  2842  0015CA                     u710:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;uart.c: 74: {
  2846                           ;uart.c: 75: RC1IE = 1;
  2847  0015CA  8A9D               	bsf	3997,5,c	;volatile
  2848                           
  2849                           ;uart.c: 76: CREN1 = 0;
  2850  0015CC  98AB               	bcf	4011,4,c	;volatile
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;uart.c: 77: for (uint8_t k = 0; k <= i; k ++)
  2854  0015CE  0E00               	movlw	0
  2855  0015D0  6FC6               	movwf	md_uart_send_ok@k& (0+255),b
  2856  0015D2  D011               	goto	l328
  2857  0015D4                     
  2858                           ; BSR set to: 0
  2859                           ;uart.c: 78: {
  2860                           ;uart.c: 80: *rtnStr = buf[k];
  2861                           
  2862                           ; BSR set to: 0
  2863  0015D4  51C6               	movf	md_uart_send_ok@k& (0+255),w,b
  2864  0015D6  0D01               	mullw	1
  2865  0015D8  0E60               	movlw	low md_uart_send_ok@buf
  2866  0015DA  24F3               	addwf	prodl,w,c
  2867  0015DC  6ED9               	movwf	fsr2l,c
  2868  0015DE  0E00               	movlw	high md_uart_send_ok@buf
  2869  0015E0  20F4               	addwfc	prodh,w,c
  2870  0015E2  6EDA               	movwf	fsr2h,c
  2871  0015E4  C00A  FFE1         	movff	md_uart_send_ok@rtnStr,fsr1l
  2872  0015E8  C00B  FFE2         	movff	md_uart_send_ok@rtnStr+1,fsr1h
  2873  0015EC  CFDF FFE7          	movff	indf2,indf1
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;uart.c: 81: rtnStr++;
  2877  0015F0  4A0A               	infsnz	md_uart_send_ok@rtnStr,f,c
  2878  0015F2  2A0B               	incf	md_uart_send_ok@rtnStr+1,f,c
  2879                           
  2880                           ; BSR set to: 0
  2881  0015F4  2BC6               	incf	md_uart_send_ok@k& (0+255),f,b
  2882  0015F6                     l328:
  2883                           
  2884                           ; BSR set to: 0
  2885                           
  2886                           ; BSR set to: 0
  2887  0015F6  51C6               	movf	md_uart_send_ok@k& (0+255),w,b
  2888  0015F8  5DC7               	subwf	md_uart_send_ok@i& (0+255),w,b
  2889  0015FA  B0D8               	btfsc	status,0,c
  2890  0015FC  D7EB               	goto	l329
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;uart.c: 82: }
  2894                           ;uart.c: 83: return 1;
  2895                           
  2896                           ; BSR set to: 0
  2897  0015FE  0E01               	movlw	1
  2898                           
  2899                           ; BSR set to: 0
  2900  001600  0012               	return	
  2901  001602                     l325:
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;uart.c: 85: else if (buf[(uint8_t)(i-3)] == 'E' && buf[(uint8_t)(i-2)] == 'R' && buf[i-
      +                          1] == 'R' && (buf[i-4] == '\n' || buf[i-4] == '\r'))
  2905                           
  2906                           ; BSR set to: 0
  2907  001602  C0C7  F00E         	movff	md_uart_send_ok@i,??_md_uart_send_ok
  2908  001606  0EFD               	movlw	253
  2909  001608  260E               	addwf	??_md_uart_send_ok,f,c
  2910  00160A  500E               	movf	??_md_uart_send_ok,w,c
  2911  00160C  0D01               	mullw	1
  2912  00160E  0E60               	movlw	low md_uart_send_ok@buf
  2913  001610  24F3               	addwf	prodl,w,c
  2914  001612  6ED9               	movwf	fsr2l,c
  2915  001614  0E00               	movlw	high md_uart_send_ok@buf
  2916  001616  20F4               	addwfc	prodh,w,c
  2917  001618  6EDA               	movwf	fsr2h,c
  2918  00161A  0E45               	movlw	69
  2919  00161C  18DE               	xorwf	postinc2,w,c
  2920  00161E  A4D8               	btfss	status,2,c
  2921  001620  D053               	goto	l332
  2922                           
  2923                           ; BSR set to: 0
  2924  001622  C0C7  F00E         	movff	md_uart_send_ok@i,??_md_uart_send_ok
  2925  001626  0EFE               	movlw	254
  2926  001628  260E               	addwf	??_md_uart_send_ok,f,c
  2927  00162A  500E               	movf	??_md_uart_send_ok,w,c
  2928  00162C  0D01               	mullw	1
  2929  00162E  0E60               	movlw	low md_uart_send_ok@buf
  2930  001630  24F3               	addwf	prodl,w,c
  2931  001632  6ED9               	movwf	fsr2l,c
  2932  001634  0E00               	movlw	high md_uart_send_ok@buf
  2933  001636  20F4               	addwfc	prodh,w,c
  2934  001638  6EDA               	movwf	fsr2h,c
  2935  00163A  0E52               	movlw	82
  2936  00163C  18DE               	xorwf	postinc2,w,c
  2937  00163E  A4D8               	btfss	status,2,c
  2938  001640  D043               	goto	l332
  2939                           
  2940                           ; BSR set to: 0
  2941  001642  0EFF               	movlw	255
  2942  001644  6E0E               	movwf	??_md_uart_send_ok& (0+255),c
  2943  001646  0EFF               	movlw	255
  2944  001648  6E0F               	movwf	(??_md_uart_send_ok+1)& (0+255),c
  2945  00164A  51C7               	movf	md_uart_send_ok@i& (0+255),w,b
  2946  00164C  6E10               	movwf	(??_md_uart_send_ok+2)& (0+255),c
  2947  00164E  6A11               	clrf	(??_md_uart_send_ok+3)& (0+255),c
  2948  001650  500E               	movf	??_md_uart_send_ok,w,c
  2949  001652  2610               	addwf	??_md_uart_send_ok+2,f,c
  2950  001654  500F               	movf	??_md_uart_send_ok+1,w,c
  2951  001656  2211               	addwfc	??_md_uart_send_ok+3,f,c
  2952  001658  0E60               	movlw	low md_uart_send_ok@buf
  2953  00165A  2410               	addwf	??_md_uart_send_ok+2,w,c
  2954  00165C  6ED9               	movwf	fsr2l,c
  2955  00165E  0E00               	movlw	high md_uart_send_ok@buf
  2956  001660  2011               	addwfc	??_md_uart_send_ok+3,w,c
  2957  001662  6EDA               	movwf	fsr2h,c
  2958  001664  0E52               	movlw	82
  2959  001666  18DE               	xorwf	postinc2,w,c
  2960  001668  A4D8               	btfss	status,2,c
  2961  00166A  D02E               	goto	l332
  2962                           
  2963                           ; BSR set to: 0
  2964  00166C  0EFC               	movlw	252
  2965  00166E  6E0E               	movwf	??_md_uart_send_ok& (0+255),c
  2966  001670  0EFF               	movlw	255
  2967  001672  6E0F               	movwf	(??_md_uart_send_ok+1)& (0+255),c
  2968  001674  51C7               	movf	md_uart_send_ok@i& (0+255),w,b
  2969  001676  6E10               	movwf	(??_md_uart_send_ok+2)& (0+255),c
  2970  001678  6A11               	clrf	(??_md_uart_send_ok+3)& (0+255),c
  2971  00167A  500E               	movf	??_md_uart_send_ok,w,c
  2972  00167C  2610               	addwf	??_md_uart_send_ok+2,f,c
  2973  00167E  500F               	movf	??_md_uart_send_ok+1,w,c
  2974  001680  2211               	addwfc	??_md_uart_send_ok+3,f,c
  2975  001682  0E60               	movlw	low md_uart_send_ok@buf
  2976  001684  2410               	addwf	??_md_uart_send_ok+2,w,c
  2977  001686  6ED9               	movwf	fsr2l,c
  2978  001688  0E00               	movlw	high md_uart_send_ok@buf
  2979  00168A  2011               	addwfc	??_md_uart_send_ok+3,w,c
  2980  00168C  6EDA               	movwf	fsr2h,c
  2981  00168E  0E0A               	movlw	10
  2982  001690  18DE               	xorwf	postinc2,w,c
  2983  001692  B4D8               	btfsc	status,2,c
  2984  001694  D015               	goto	u770
  2985                           
  2986                           ; BSR set to: 0
  2987  001696  0EFC               	movlw	252
  2988  001698  6E0E               	movwf	??_md_uart_send_ok& (0+255),c
  2989  00169A  0EFF               	movlw	255
  2990  00169C  6E0F               	movwf	(??_md_uart_send_ok+1)& (0+255),c
  2991  00169E  51C7               	movf	md_uart_send_ok@i& (0+255),w,b
  2992  0016A0  6E10               	movwf	(??_md_uart_send_ok+2)& (0+255),c
  2993  0016A2  6A11               	clrf	(??_md_uart_send_ok+3)& (0+255),c
  2994  0016A4  500E               	movf	??_md_uart_send_ok,w,c
  2995  0016A6  2610               	addwf	??_md_uart_send_ok+2,f,c
  2996  0016A8  500F               	movf	??_md_uart_send_ok+1,w,c
  2997  0016AA  2211               	addwfc	??_md_uart_send_ok+3,f,c
  2998  0016AC  0E60               	movlw	low md_uart_send_ok@buf
  2999  0016AE  2410               	addwf	??_md_uart_send_ok+2,w,c
  3000  0016B0  6ED9               	movwf	fsr2l,c
  3001  0016B2  0E00               	movlw	high md_uart_send_ok@buf
  3002  0016B4  2011               	addwfc	??_md_uart_send_ok+3,w,c
  3003  0016B6  6EDA               	movwf	fsr2h,c
  3004  0016B8  0E0D               	movlw	13
  3005  0016BA  18DE               	xorwf	postinc2,w,c
  3006  0016BC  A4D8               	btfss	status,2,c
  3007  0016BE  D004               	goto	l332
  3008  0016C0                     u770:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;uart.c: 86: {
  3012                           ;uart.c: 87: RC1IE = 1;
  3013  0016C0  8A9D               	bsf	3997,5,c	;volatile
  3014                           
  3015                           ;uart.c: 88: CREN1 = 0;
  3016  0016C2  98AB               	bcf	4011,4,c	;volatile
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;uart.c: 89: return 0;
  3020  0016C4  0E00               	movlw	0
  3021                           
  3022                           ; BSR set to: 0
  3023  0016C6  0012               	return	
  3024  0016C8                     l332:
  3025                           
  3026                           ; BSR set to: 0
  3027                           
  3028                           ; BSR set to: 0
  3029                           
  3030                           ; BSR set to: 0
  3031  0016C8  A2A1               	btfss	4001,1,c	;volatile
  3032  0016CA  D71B               	goto	l322
  3033                           
  3034                           ;uart.c: 90: }
  3035                           ;uart.c: 92: }
  3036                           ;uart.c: 93: }
  3037                           ;uart.c: 94: TMR3IF = 0;
  3038  0016CC  92A1               	bcf	4001,1,c	;volatile
  3039  0016CE                     l319:
  3040  0016CE  0100               	movlb	0	; () banked
  3041  0016D0  07C5               	decf	md_uart_send_ok@count& (0+255),f,b
  3042  0016D2  29C5               	incf	md_uart_send_ok@count& (0+255),w,b
  3043  0016D4  A4D8               	btfss	status,2,c
  3044  0016D6  D712               	goto	l320
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;uart.c: 95: }
  3048                           ;uart.c: 96: TMR3ON = 0;
  3049  0016D8  90B1               	bcf	4017,0,c	;volatile
  3050                           
  3051                           ;uart.c: 97: RC1IE = 1;
  3052  0016DA  8A9D               	bsf	3997,5,c	;volatile
  3053                           
  3054                           ;uart.c: 98: CREN1 = 0;
  3055  0016DC  98AB               	bcf	4011,4,c	;volatile
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;uart.c: 99: return 0;
  3059  0016DE  0E00               	movlw	0
  3060  0016E0  0012               	return	
  3061  0016E2                     __end_of_md_uart_send_ok:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon	equ	0xFF2
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           indf1	equ	0xFE7
  3073                           postdec1	equ	0xFE5
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _setup_timer3 *****************
  3083 ;; Defined at:
  3084 ;;		line 36 in file "uart.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_md_uart_send_ok
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text13
  3112  001AFA                     __ptext13:
  3113                           	opt stack 0
  3114  001AFA                     _setup_timer3:
  3115                           	opt stack 26
  3116                           
  3117                           ;uart.c: 38: T3CON = 0x71;
  3118                           
  3119                           ;incstack = 0
  3120  001AFA  0E71               	movlw	113
  3121  001AFC  6EB1               	movwf	4017,c	;volatile
  3122                           
  3123                           ;uart.c: 39: TMR3H = 0x20;
  3124  001AFE  0E20               	movlw	32
  3125  001B00  6EB3               	movwf	4019,c	;volatile
  3126                           
  3127                           ;uart.c: 40: TMR3L = 0;
  3128  001B02  0E00               	movlw	0
  3129  001B04  6EB2               	movwf	4018,c	;volatile
  3130  001B06  0012               	return		;funcret
  3131  001B08                     __end_of_setup_timer3:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           prodh	equ	0xFF4
  3138                           prodl	equ	0xFF3
  3139                           intcon	equ	0xFF2
  3140                           postinc0	equ	0xFEE
  3141                           wreg	equ	0xFE8
  3142                           indf1	equ	0xFE7
  3143                           postdec1	equ	0xFE5
  3144                           fsr1h	equ	0xFE2
  3145                           fsr1l	equ	0xFE1
  3146                           indf2	equ	0xFDF
  3147                           postinc2	equ	0xFDE
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function _md_uart_write *****************
  3153 ;; Defined at:
  3154 ;;		line 102 in file "uart.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  data            2    1[COMRAM] PTR unsigned char 
  3157 ;;		 -> init_modem_io_ok@ledPattern(12), init_modem_io_ok@queryVersion(10), init_modem_io_ok@ledCfg(16), wakeup_modem_ok
      +@ipr(16), 
  3158 ;;		 -> wakeup_modem_ok@at(5), 
  3159 ;;  len             1    3[COMRAM] unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  index           1    5[COMRAM] unsigned char 
  3162 ;;  currentChar     1    4[COMRAM] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        5 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    1
  3179 ;; This function calls:
  3180 ;;		_md_uart_transmit
  3181 ;; This function is called by:
  3182 ;;		_md_uart_send_ok
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text14
  3187  001A08                     __ptext14:
  3188                           	opt stack 0
  3189  001A08                     _md_uart_write:
  3190                           	opt stack 25
  3191                           
  3192                           ;uart.c: 104: uint8_t index, currentChar;
  3193                           ;uart.c: 105: index = 0;
  3194                           
  3195                           ;incstack = 0
  3196  001A08  0E00               	movlw	0
  3197  001A0A  6E06               	movwf	md_uart_write@index,c
  3198                           
  3199                           ;uart.c: 106: CREN1 = 0;
  3200  001A0C  98AB               	bcf	4011,4,c	;volatile
  3201  001A0E  D00C               	goto	l339
  3202  001A10                     
  3203                           ;uart.c: 108: {
  3204                           ;uart.c: 109: currentChar = *data;
  3205  001A10  C002  FFD9         	movff	md_uart_write@data,fsr2l
  3206  001A14  C003  FFDA         	movff	md_uart_write@data+1,fsr2h
  3207  001A18  50DF               	movf	indf2,w,c
  3208  001A1A  6E05               	movwf	md_uart_write@currentChar,c
  3209                           
  3210                           ;uart.c: 110: md_uart_transmit(currentChar);
  3211  001A1C  5005               	movf	md_uart_write@currentChar,w,c
  3212  001A1E  EC84  F00D         	call	_md_uart_transmit
  3213                           
  3214                           ;uart.c: 111: data++;
  3215  001A22  4A02               	infsnz	md_uart_write@data,f,c
  3216  001A24  2A03               	incf	md_uart_write@data+1,f,c
  3217  001A26  2A06               	incf	md_uart_write@index,f,c
  3218  001A28                     l339:
  3219  001A28  5004               	movf	md_uart_write@len,w,c
  3220  001A2A  5C06               	subwf	md_uart_write@index,w,c
  3221  001A2C  B0D8               	btfsc	status,0,c
  3222  001A2E  0012               	return	
  3223  001A30  D7EF               	goto	l340
  3224  001A32                     __end_of_md_uart_write:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           intcon	equ	0xFF2
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           indf1	equ	0xFE7
  3236                           postdec1	equ	0xFE5
  3237                           fsr1h	equ	0xFE2
  3238                           fsr1l	equ	0xFE1
  3239                           indf2	equ	0xFDF
  3240                           postinc2	equ	0xFDE
  3241                           fsr2h	equ	0xFDA
  3242                           fsr2l	equ	0xFD9
  3243                           status	equ	0xFD8
  3244                           
  3245 ;; *************** function _md_uart_transmit *****************
  3246 ;; Defined at:
  3247 ;;		line 115 in file "uart.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  data            1    wreg     unsigned char 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  data            1    0[COMRAM] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:        1 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_md_uart_write
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text15
  3275  001B08                     __ptext15:
  3276                           	opt stack 0
  3277  001B08                     _md_uart_transmit:
  3278                           	opt stack 25
  3279                           
  3280                           ;incstack = 0
  3281                           ;md_uart_transmit@data stored from wreg
  3282  001B08  6E01               	movwf	md_uart_transmit@data,c
  3283  001B0A                     
  3284                           ;uart.c: 117: while (!TRMT1);
  3285  001B0A  A2AC               	btfss	4012,1,c	;volatile
  3286  001B0C  D7FE               	goto	l1635
  3287                           
  3288                           ;uart.c: 118: TX1REG = data;
  3289  001B0E  C001  FFAD         	movff	md_uart_transmit@data,4013	;volatile
  3290  001B12  0012               	return		;funcret
  3291  001B14                     __end_of_md_uart_transmit:
  3292                           	opt stack 0
  3293                           tblptru	equ	0xFF8
  3294                           tblptrh	equ	0xFF7
  3295                           tblptrl	equ	0xFF6
  3296                           tablat	equ	0xFF5
  3297                           prodh	equ	0xFF4
  3298                           prodl	equ	0xFF3
  3299                           intcon	equ	0xFF2
  3300                           postinc0	equ	0xFEE
  3301                           wreg	equ	0xFE8
  3302                           indf1	equ	0xFE7
  3303                           postdec1	equ	0xFE5
  3304                           fsr1h	equ	0xFE2
  3305                           fsr1l	equ	0xFE1
  3306                           indf2	equ	0xFDF
  3307                           postinc2	equ	0xFDE
  3308                           fsr2h	equ	0xFDA
  3309                           fsr2l	equ	0xFD9
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function _init_uart_md *****************
  3313 ;; Defined at:
  3314 ;;		line 12 in file "uart.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;;		_startup_modem_ok
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text16
  3343  001A5C                     __ptext16:
  3344                           	opt stack 0
  3345  001A5C                     _init_uart_md:
  3346                           	opt stack 28
  3347                           
  3348                           ;uart.c: 14: BAUDCON1bits.BRG16 = 1;
  3349                           
  3350                           ;incstack = 0
  3351  001A5C  86B8               	bsf	4024,3,c	;volatile
  3352                           
  3353                           ;uart.c: 15: BAUDCON1bits.RCIDL = 1;
  3354  001A5E  8CB8               	bsf	4024,6,c	;volatile
  3355                           
  3356                           ;uart.c: 16: BAUDCONbits.CKTXP = 0;
  3357  001A60  98B8               	bcf	4024,4,c	;volatile
  3358                           
  3359                           ;uart.c: 17: BAUDCONbits.WUE = 0;
  3360  001A62  92B8               	bcf	4024,1,c	;volatile
  3361                           
  3362                           ;uart.c: 18: BAUDCONbits.ABDEN = 0;
  3363  001A64  90B8               	bcf	4024,0,c	;volatile
  3364                           
  3365                           ;uart.c: 19: TXSTA1bits.BRGH = 1;
  3366  001A66  84AC               	bsf	4012,2,c	;volatile
  3367                           
  3368                           ;uart.c: 20: TXSTA1bits.SYNC = 0;
  3369  001A68  98AC               	bcf	4012,4,c	;volatile
  3370                           
  3371                           ;uart.c: 21: SPBRGH1 = 0;
  3372  001A6A  0E00               	movlw	0
  3373  001A6C  6EB0               	movwf	4016,c	;volatile
  3374                           
  3375                           ;uart.c: 22: SPBRG1 = 16;
  3376  001A6E  0E10               	movlw	16
  3377  001A70  6EAF               	movwf	4015,c	;volatile
  3378                           
  3379                           ;uart.c: 24: RC1STAbits.SPEN = 1;
  3380  001A72  8EAB               	bsf	4011,7,c	;volatile
  3381                           
  3382                           ;uart.c: 25: TRISCbits.TRISC7 = 1;
  3383  001A74  8E94               	bsf	3988,7,c	;volatile
  3384                           
  3385                           ;uart.c: 26: TRISCbits.TRISC6 = 0;
  3386  001A76  9C94               	bcf	3988,6,c	;volatile
  3387                           
  3388                           ;uart.c: 28: RCSTA1bits.CREN = 1;
  3389  001A78  88AB               	bsf	4011,4,c	;volatile
  3390                           
  3391                           ;uart.c: 29: TXSTA1bits.TXEN = 1;
  3392  001A7A  8AAC               	bsf	4012,5,c	;volatile
  3393                           
  3394                           ;uart.c: 31: LATAbits.LA3 = 1;
  3395  001A7C  8689               	bsf	3977,3,c	;volatile
  3396                           
  3397                           ;uart.c: 32: PIR1bits.RC1IF = 0;
  3398  001A7E  9A9E               	bcf	3998,5,c	;volatile
  3399  001A80  0012               	return		;funcret
  3400  001A82                     __end_of_init_uart_md:
  3401                           	opt stack 0
  3402                           tblptru	equ	0xFF8
  3403                           tblptrh	equ	0xFF7
  3404                           tblptrl	equ	0xFF6
  3405                           tablat	equ	0xFF5
  3406                           prodh	equ	0xFF4
  3407                           prodl	equ	0xFF3
  3408                           intcon	equ	0xFF2
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           indf1	equ	0xFE7
  3412                           postdec1	equ	0xFE5
  3413                           fsr1h	equ	0xFE2
  3414                           fsr1l	equ	0xFE1
  3415                           indf2	equ	0xFDF
  3416                           postinc2	equ	0xFDE
  3417                           fsr2h	equ	0xFDA
  3418                           fsr2l	equ	0xFD9
  3419                           status	equ	0xFD8
  3420                           
  3421 ;; *************** function _restart_modem *****************
  3422 ;; Defined at:
  3423 ;;		line 36 in file "modem.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;Total ram usage:        2 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_start_modem
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text17
  3451  0018BC                     __ptext17:
  3452                           	opt stack 0
  3453  0018BC                     _restart_modem:
  3454                           	opt stack 29
  3455                           
  3456                           ;modem.c: 38: LATAbits.LA3 = 0;
  3457                           
  3458                           ;incstack = 0
  3459  0018BC  9689               	bcf	3977,3,c	;volatile
  3460                           
  3461                           ;modem.c: 39: _delay((unsigned long)((5000)*(8000000/4000.0)));
  3462  0018BE  0E33               	movlw	51
  3463  0018C0  6E02               	movwf	(??_restart_modem+1)& (0+255),c
  3464  0018C2  0EBB               	movlw	187
  3465  0018C4  6E01               	movwf	??_restart_modem& (0+255),c
  3466  0018C6  0EE0               	movlw	224
  3467  0018C8                     u1207:
  3468  0018C8  2EE8               	decfsz	wreg,f,c
  3469  0018CA  D7FE               	bra	u1207
  3470  0018CC  2E01               	decfsz	??_restart_modem& (0+255),f,c
  3471  0018CE  D7FC               	bra	u1207
  3472  0018D0  2E02               	decfsz	(??_restart_modem+1)& (0+255),f,c
  3473  0018D2  D7FA               	bra	u1207
  3474                           
  3475                           ;modem.c: 40: LATAbits.LA3 = 0;
  3476  0018D4  9689               	bcf	3977,3,c	;volatile
  3477                           
  3478                           ;modem.c: 41: _delay((unsigned long)((15000)*(8000000/4000.0)));
  3479  0018D6  0E99               	movlw	153
  3480  0018D8  6E02               	movwf	(??_restart_modem+1)& (0+255),c
  3481  0018DA  0E31               	movlw	49
  3482  0018DC  6E01               	movwf	??_restart_modem& (0+255),c
  3483  0018DE  0EA2               	movlw	162
  3484  0018E0                     u1217:
  3485  0018E0  2EE8               	decfsz	wreg,f,c
  3486  0018E2  D7FE               	bra	u1217
  3487  0018E4  2E01               	decfsz	??_restart_modem& (0+255),f,c
  3488  0018E6  D7FC               	bra	u1217
  3489  0018E8  2E02               	decfsz	(??_restart_modem+1)& (0+255),f,c
  3490  0018EA  D7FA               	bra	u1217
  3491  0018EC  D000               	nop2	
  3492                           
  3493                           ;modem.c: 42: _delay((unsigned long)((15000)*(8000000/4000.0)));
  3494  0018EE  0E99               	movlw	153
  3495  0018F0  6E02               	movwf	(??_restart_modem+1)& (0+255),c
  3496  0018F2  0E31               	movlw	49
  3497  0018F4  6E01               	movwf	??_restart_modem& (0+255),c
  3498  0018F6  0EA2               	movlw	162
  3499  0018F8                     u1227:
  3500  0018F8  2EE8               	decfsz	wreg,f,c
  3501  0018FA  D7FE               	bra	u1227
  3502  0018FC  2E01               	decfsz	??_restart_modem& (0+255),f,c
  3503  0018FE  D7FC               	bra	u1227
  3504  001900  2E02               	decfsz	(??_restart_modem+1)& (0+255),f,c
  3505  001902  D7FA               	bra	u1227
  3506  001904  D000               	nop2	
  3507  001906  0012               	return		;funcret
  3508  001908                     __end_of_restart_modem:
  3509                           	opt stack 0
  3510                           tblptru	equ	0xFF8
  3511                           tblptrh	equ	0xFF7
  3512                           tblptrl	equ	0xFF6
  3513                           tablat	equ	0xFF5
  3514                           prodh	equ	0xFF4
  3515                           prodl	equ	0xFF3
  3516                           intcon	equ	0xFF2
  3517                           postinc0	equ	0xFEE
  3518                           wreg	equ	0xFE8
  3519                           indf1	equ	0xFE7
  3520                           postdec1	equ	0xFE5
  3521                           fsr1h	equ	0xFE2
  3522                           fsr1l	equ	0xFE1
  3523                           indf2	equ	0xFDF
  3524                           postinc2	equ	0xFDE
  3525                           fsr2h	equ	0xFDA
  3526                           fsr2l	equ	0xFD9
  3527                           status	equ	0xFD8
  3528                           
  3529 ;; *************** function _delay5ms *****************
  3530 ;; Defined at:
  3531 ;;		line 46 in file "modem.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  cnt             2    0[COMRAM] unsigned int 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  j               1    3[COMRAM] unsigned char 
  3536 ;;  i               1    2[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        4 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_start_modem
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text18
  3560  001A32                     __ptext18:
  3561                           	opt stack 0
  3562  001A32                     _delay5ms:
  3563                           	opt stack 29
  3564                           
  3565                           ;modem.c: 48: uint8_t i, j;
  3566                           ;modem.c: 49: while(cnt-- != 0)
  3567                           
  3568                           ;incstack = 0
  3569  001A32  D00B               	goto	u1130
  3570  001A34                     l2011:
  3571                           
  3572                           ;modem.c: 50: {
  3573                           ;modem.c: 51: j = 100;
  3574  001A34  0E64               	movlw	100
  3575  001A36  6E04               	movwf	delay5ms@j,c
  3576                           
  3577                           ;modem.c: 52: while(j-- != 0)
  3578  001A38  D004               	goto	l194
  3579  001A3A                     
  3580                           ;modem.c: 53: {
  3581                           ;modem.c: 54: i = 32;
  3582  001A3A  0E20               	movlw	32
  3583  001A3C  6E03               	movwf	delay5ms@i,c
  3584  001A3E  2E03               	decfsz	delay5ms@i,f,c
  3585  001A40  D7FE               	goto	l193
  3586  001A42                     l194:
  3587  001A42  0604               	decf	delay5ms@j,f,c
  3588  001A44  2804               	incf	delay5ms@j,w,c
  3589  001A46  A4D8               	btfss	status,2,c
  3590  001A48  D7F8               	goto	l191
  3591  001A4A                     u1130:
  3592  001A4A  0601               	decf	delay5ms@cnt,f,c
  3593  001A4C  A0D8               	btfss	status,0,c
  3594  001A4E  0602               	decf	delay5ms@cnt+1,f,c
  3595  001A50  2801               	incf	delay5ms@cnt,w,c
  3596  001A52  E1F0               	bnz	l2011
  3597  001A54  2802               	incf	delay5ms@cnt+1,w,c
  3598  001A56  B4D8               	btfsc	status,2,c
  3599  001A58  0012               	return	
  3600  001A5A  D7EC               	goto	l189
  3601  001A5C                     __end_of_delay5ms:
  3602                           	opt stack 0
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           indf1	equ	0xFE7
  3613                           postdec1	equ	0xFE5
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           postinc2	equ	0xFDE
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function _init_pic *****************
  3623 ;; Defined at:
  3624 ;;		line 31 in file "main.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text19
  3652  00186A                     __ptext19:
  3653                           	opt stack 0
  3654  00186A                     _init_pic:
  3655                           	opt stack 30
  3656                           
  3657                           ;main.c: 34: OSCCONbits.IDLEN = 0;
  3658                           
  3659                           ;incstack = 0
  3660  00186A  9ED3               	bcf	4051,7,c	;volatile
  3661                           
  3662                           ;main.c: 35: OSCCONbits.IRCF = 0b110;
  3663  00186C  50D3               	movf	4051,w,c	;volatile
  3664  00186E  0B8F               	andlw	-113
  3665  001870  0960               	iorlw	96
  3666  001872  6ED3               	movwf	4051,c	;volatile
  3667                           
  3668                           ;main.c: 36: OSCCONbits.OSTS = 1;
  3669  001874  86D3               	bsf	4051,3,c	;volatile
  3670                           
  3671                           ;main.c: 40: ANSELA = 0x01;
  3672  001876  0E01               	movlw	1
  3673  001878  010F               	movlb	15	; () banked
  3674  00187A  6F38               	movwf	56,b	;volatile
  3675                           
  3676                           ; BSR set to: 15
  3677                           ;main.c: 41: TRISAbits.TRISA0 = 1;
  3678  00187C  8092               	bsf	3986,0,c	;volatile
  3679                           
  3680                           ; BSR set to: 15
  3681                           ;main.c: 42: TRISAbits.TRISA3 = 0;
  3682  00187E  9692               	bcf	3986,3,c	;volatile
  3683                           
  3684                           ; BSR set to: 15
  3685                           ;main.c: 43: LATAbits.LA3 = 0;
  3686  001880  9689               	bcf	3977,3,c	;volatile
  3687                           
  3688                           ;main.c: 46: ANSELC = 0x00;
  3689  001882  0E00               	movlw	0
  3690  001884  6F3A               	movwf	58,b	;volatile
  3691                           
  3692                           ; BSR set to: 15
  3693                           ;main.c: 47: LATBbits.LB3 = 1;
  3694  001886  868A               	bsf	3978,3,c	;volatile
  3695                           
  3696                           ; BSR set to: 15
  3697                           ;main.c: 48: TRISBbits.TRISB3 = 0;
  3698  001888  9693               	bcf	3987,3,c	;volatile
  3699                           
  3700                           ; BSR set to: 15
  3701                           ;main.c: 49: PORTCbits.RC6 = 1;
  3702  00188A  8C82               	bsf	3970,6,c	;volatile
  3703                           
  3704                           ; BSR set to: 15
  3705                           ;main.c: 50: TRISCbits.TRISC6 = 0;
  3706  00188C  9C94               	bcf	3988,6,c	;volatile
  3707                           
  3708                           ; BSR set to: 15
  3709                           ;main.c: 51: LATCbits.LATC7 = 1;
  3710  00188E  8E8B               	bsf	3979,7,c	;volatile
  3711                           
  3712                           ; BSR set to: 15
  3713                           ;main.c: 52: TRISCbits.TRISC7 = 1;
  3714  001890  8E94               	bsf	3988,7,c	;volatile
  3715                           
  3716                           ;main.c: 55: ANSELB = 0x00;
  3717  001892  0E00               	movlw	0
  3718  001894  6F39               	movwf	57,b	;volatile
  3719                           
  3720                           ; BSR set to: 15
  3721                           ;main.c: 56: TRISBbits.TRISB0 = 1;
  3722  001896  8093               	bsf	3987,0,c	;volatile
  3723                           
  3724                           ; BSR set to: 15
  3725                           ;main.c: 57: TRISCbits.TRISC1 = 1;
  3726  001898  8294               	bsf	3988,1,c	;volatile
  3727                           
  3728                           ; BSR set to: 15
  3729                           ;main.c: 58: LATBbits.LB1 = 1;
  3730  00189A  828A               	bsf	3978,1,c	;volatile
  3731                           
  3732                           ; BSR set to: 15
  3733                           ;main.c: 59: TRISBbits.TRISB1 = 1;
  3734  00189C  8293               	bsf	3987,1,c	;volatile
  3735                           
  3736                           ; BSR set to: 15
  3737                           ;main.c: 60: LATBbits.LATB2 = 1;
  3738  00189E  848A               	bsf	3978,2,c	;volatile
  3739                           
  3740                           ; BSR set to: 15
  3741                           ;main.c: 61: TRISBbits.TRISB2 = 1;
  3742  0018A0  8493               	bsf	3987,2,c	;volatile
  3743                           
  3744                           ; BSR set to: 15
  3745                           ;main.c: 62: LATCbits.LC4 = 1;
  3746  0018A2  888B               	bsf	3979,4,c	;volatile
  3747                           
  3748                           ; BSR set to: 15
  3749                           ;main.c: 63: TRISCbits.TRISC4 = 0;
  3750  0018A4  9894               	bcf	3988,4,c	;volatile
  3751                           
  3752                           ; BSR set to: 15
  3753                           ;main.c: 64: LATBbits.LATB4 = 1;
  3754  0018A6  888A               	bsf	3978,4,c	;volatile
  3755                           
  3756                           ; BSR set to: 15
  3757                           ;main.c: 65: TRISBbits.TRISB4 = 1;
  3758  0018A8  8893               	bsf	3987,4,c	;volatile
  3759                           
  3760                           ; BSR set to: 15
  3761                           ;main.c: 66: LATBbits.LATB5 = 1;
  3762  0018AA  8A8A               	bsf	3978,5,c	;volatile
  3763                           
  3764                           ; BSR set to: 15
  3765                           ;main.c: 67: TRISBbits.TRISB5 = 1;
  3766  0018AC  8A93               	bsf	3987,5,c	;volatile
  3767                           
  3768                           ; BSR set to: 15
  3769                           ;main.c: 68: LATBbits.LATB6 = 1;
  3770  0018AE  8C8A               	bsf	3978,6,c	;volatile
  3771                           
  3772                           ; BSR set to: 15
  3773                           ;main.c: 69: TRISBbits.TRISB6 = 0;
  3774  0018B0  9C93               	bcf	3987,6,c	;volatile
  3775                           
  3776                           ; BSR set to: 15
  3777                           ;main.c: 70: PORTBbits.RB7 = 1;
  3778  0018B2  8E81               	bsf	3969,7,c	;volatile
  3779                           
  3780                           ; BSR set to: 15
  3781                           ;main.c: 71: TRISBbits.TRISB7 = 1;
  3782  0018B4  8E93               	bsf	3987,7,c	;volatile
  3783                           
  3784                           ; BSR set to: 15
  3785                           ;main.c: 73: PORTAbits.RA1 = 0;
  3786  0018B6  9280               	bcf	3968,1,c	;volatile
  3787                           
  3788                           ; BSR set to: 15
  3789                           ;main.c: 74: TRISAbits.TRISA1 = 0;
  3790  0018B8  9292               	bcf	3986,1,c	;volatile
  3791                           
  3792                           ; BSR set to: 15
  3793  0018BA  0012               	return		;funcret
  3794  0018BC                     __end_of_init_pic:
  3795                           	opt stack 0
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           postinc0	equ	0xFEE
  3804                           wreg	equ	0xFE8
  3805                           indf1	equ	0xFE7
  3806                           postdec1	equ	0xFE5
  3807                           fsr1h	equ	0xFE2
  3808                           fsr1l	equ	0xFE1
  3809                           indf2	equ	0xFDF
  3810                           postinc2	equ	0xFDE
  3811                           fsr2h	equ	0xFDA
  3812                           fsr2l	equ	0xFD9
  3813                           status	equ	0xFD8
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           postinc0	equ	0xFEE
  3822                           wreg	equ	0xFE8
  3823                           indf1	equ	0xFE7
  3824                           postdec1	equ	0xFE5
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           postinc2	equ	0xFDE
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           status	equ	0xFD8
  3832                           
  3833                           	psect	rparam
  3834  0000                     tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           prodh	equ	0xFF4
  3839                           prodl	equ	0xFF3
  3840                           intcon	equ	0xFF2
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           indf1	equ	0xFE7
  3844                           postdec1	equ	0xFE5
  3845                           fsr1h	equ	0xFE2
  3846                           fsr1l	equ	0xFE1
  3847                           indf2	equ	0xFDF
  3848                           postinc2	equ	0xFDE
  3849                           fsr2h	equ	0xFDA
  3850                           fsr2l	equ	0xFD9
  3851                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    126
    Data        5
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      64
    BANK0           160    104     104
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    md_uart_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> init_modem_io_ok@ledPattern(COMRAM[12]), init_modem_io_ok@queryVersion(COMRAM[10]), init_modem_io_ok@ledCfg(COMRAM[16]), wakeup_modem_ok@ipr(COMRAM[16]), 
		 -> wakeup_modem_ok@at(COMRAM[5]), 

    md_uart_send_ok@rtnStr	PTR unsigned char  size(2) Largest target is 100
		 -> returnStr(BANK1[100]), 

    md_uart_send_ok@toSend	PTR unsigned char  size(2) Largest target is 16
		 -> init_modem_io_ok@ledPattern(COMRAM[12]), init_modem_io_ok@queryVersion(COMRAM[10]), init_modem_io_ok@ledCfg(COMRAM[16]), wakeup_modem_ok@ipr(COMRAM[16]), 
		 -> wakeup_modem_ok@at(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_start_modem
    _wakeup_modem_ok->_md_uart_send_ok
    _setup_modem_io_ok->_init_modem_io_ok
    _write_defaults->_ee_read
    _write_defaults->_ee_write
    _save_first_run->_ee_write
    _is_first_run->_ee_read
    _init_modem_io_ok->_md_uart_send_ok
    _md_uart_send_ok->_md_uart_write
    _md_uart_write->_md_uart_transmit

Critical Paths under _main in BANK0

    _wakeup_modem_ok->_md_uart_send_ok
    _init_modem_io_ok->_md_uart_send_ok

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18097
                           _init_pic
                       _init_uart_md
                        _start_modem
 ---------------------------------------------------------------------------------
 (1) _start_modem                                          1     1      0   18097
                                             57 COMRAM     1     1      0
                           _delay5ms
                      _restart_modem
                   _startup_modem_ok
 ---------------------------------------------------------------------------------
 (2) _startup_modem_ok                                     0     0      0   17907
                       _init_uart_md
                  _setup_modem_io_ok
                    _wakeup_modem_ok
 ---------------------------------------------------------------------------------
 (3) _wakeup_modem_ok                                     23    23      0    3028
                                             18 COMRAM    22    22      0
                    _md_uart_send_ok
 ---------------------------------------------------------------------------------
 (3) _setup_modem_io_ok                                    0     0      0   14879
                   _init_modem_io_ok
                       _is_first_run
                     _save_first_run
                        _sim_card_ok
                     _write_defaults
 ---------------------------------------------------------------------------------
 (4) _write_defaults                                       6     6      0    6633
                                              3 COMRAM     6     6      0
                            _ee_read
                           _ee_write
 ---------------------------------------------------------------------------------
 (4) _sim_card_ok                                         60    60      0       0
                                              0 COMRAM    26    26      0
 ---------------------------------------------------------------------------------
 (4) _save_first_run                                       0     0      0    4778
                           _ee_write
 ---------------------------------------------------------------------------------
 (5) _ee_write                                             3     1      2    4778
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _is_first_run                                         0     0      0     371
                            _ee_read
 ---------------------------------------------------------------------------------
 (5) _ee_read                                              3     2      1     371
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _init_modem_io_ok                                    39    39      0    3097
                                             18 COMRAM    39    39      0
                    _md_uart_send_ok
 ---------------------------------------------------------------------------------
 (4) _md_uart_send_ok                                    116   109      7    2890
                                              6 COMRAM    12     5      7
                                              0 BANK0    104   104      0
                      _md_uart_write
                       _setup_timer3
 ---------------------------------------------------------------------------------
 (5) _setup_timer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _md_uart_write                                        5     2      3     266
                                              1 COMRAM     5     2      3
                   _md_uart_transmit
 ---------------------------------------------------------------------------------
 (6) _md_uart_transmit                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _init_uart_md                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _restart_modem                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _delay5ms                                             4     2      2     144
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_pic
   _init_uart_md
   _start_modem
     _delay5ms
     _restart_modem
     _startup_modem_ok
       _init_uart_md
       _setup_modem_io_ok
         _init_modem_io_ok
           _md_uart_send_ok
             _md_uart_write
               _md_uart_transmit
             _setup_timer3
         _is_first_run
           _ee_read
         _save_first_run
           _ee_write
         _sim_card_ok
         _write_defaults
           _ee_read
           _ee_write
       _wakeup_modem_ok
         _md_uart_send_ok
           _md_uart_write
             _md_uart_transmit
           _setup_timer3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      68       5       65.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      40       1       67.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      12        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 04 14:26:18 2018

                ??_restart_modem 0001            _default_SMS_WAIT_TIME 1076  
         init_modem_io_ok@ledCfg 0013                      __CFG_CP0$ON 000000  
                    __CFG_CP1$ON 000000                      __CFG_CP2$ON 000000  
                    __CFG_CP3$ON 000000                               l85 1AE6  
                    __CFG_CPB$ON 000000                               _RD 007D30  
                    __CFG_CPD$ON 000000                               _WR 007D31  
         __size_of_md_uart_write 002A                              l220 1998  
                            l212 1832                              l204 17FA  
                            l221 1994                              l205 17F8  
                            l214 185C                              l223 19A6  
                            l207 1824                              l320 14FC  
                            l216 1866                              l241 175A  
                            l209 182E                              l322 1502  
                            l234 1722                              l251 17C6  
                            l243 1784                              l340 1A10  
                            l332 16C8                              l324 152C  
                            l236 174C                              l180 1A94  
                            l172 19E8                              l325 1602  
                            l317 14F6                              l245 178E  
                            l238 1756                              l422 113C  
                            l182 1AA2                              l174 19FC  
                            l191 1A3A                              l319 16CE  
                            l247 1792                              l431 1202  
                            l423 1114                              l415 10BA  
                            l175 19F8                              l328 15F6  
                            l440 1418                              l432 11DA  
                            l193 1A3E                              l329 15D4  
                            l249 17BC                              l441 13F0  
                            l425 117E                              l417 10EE  
                            l194 1A42                              l434 1344  
                            l426 1156                              l418 10C8  
                            l339 1A28                              l435 131C  
                            l428 11C0                              l189 1A34  
                            l437 13D6                              l429 1198  
                            l438 13AE                              l479 19D0  
                            _GIE 007F97                              u420 194E  
                            u430 1962                              u710 15CA  
                            u810 1AD6                              u770 16C0  
                            u950 16F0                              u870 1102  
                            u960 1704                              u970 1718  
              ?_init_modem_io_ok 0001                      _start_modem 19DA  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAC     __end_ofwakeup_modem_ok@F6740 1060  
   __end_ofwakeup_modem_ok@F6742 1021                ??_wakeup_modem_ok 0013  
     __size_of_setup_modem_io_ok 0032             __end_of_default_ACCT 1055  
             ??_init_modem_io_ok 0013                     __CFG_LVP$OFF 000000  
                           l2011 1A34                             l2041 19E0  
                           l1635 1B0A                             _CFGS 007D36  
                           u1040 17D4                             u1130 1A4A  
                           u1050 17E8                             u1207 18C8  
                           u1217 18E0                             u1227 18F8  
                           _WREN 007D32         __size_of_md_uart_send_ok 0210  
                           _main 1ADA                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                    __CFG_BORV$190 000000  
             wakeup_modem_ok@cnt 0028               wakeup_modem_ok@ipr 0013  
                           prodh 000FF4                             prodl 000FF3  
                           start 0002                    __CFG_IESO$OFF 000000  
          __end_of_default_CYCLE 1079                     ___param_bank 000000  
          __end_of_default_RETRY 1078            __end_of_default_PORT1 106B  
          __end_of_default_PORT2 1069            __end_of_default_PORT3 1067  
          __end_of_default_PORT4 1065            __end_of_default_ZONE1 107C  
          __end_of_default_ZONE2 107B          __size_of_save_first_run 0010  
                   _BAUDCON1bits 000FB8      __end_of_default_PROGRAM_ACK 107F  
                          ?_main 0001                            _EEADR 000FA9  
                 _default_TP_PIN 1079                            _EEPGD 007D37  
                          _CREN1 007D5C                            _T3CON 000FB1  
                          _RC1IE 007CED                            _RC1IF 007CF5  
                          _TMR3H 000FB3                            _TMR3L 000FB2  
                          _TRMT1 007D61                  __end_of_ee_read 1AC2  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000               __CFG_MCLRE$INTMCLR 000000  
                          tablat 000FF5                    _md_uart_write 1A08  
                          status 000FD8                   __CFG_HFOFST$ON 000000  
                __initialization 1908                     __end_of_main 1AEA  
  __end_ofinit_modem_io_ok@F6751 104F    __end_ofinit_modem_io_ok@F6753 103A  
  __end_ofinit_modem_io_ok@F6749 1011             md_uart_send_ok@count 00C5  
       __end_of_md_uart_transmit 1B14                 ??_write_defaults 0004  
         __end_of_default_TP_PIN 107A                  write_defaults@i 0009  
                         ??_main 003B                    __activetblptr 000001  
                  ?_is_first_run 0001                           _EEADRH 000FAA  
                         _EEDATA 000FA8                           _EECON2 000FA7  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                   ?_md_uart_write 0002  
                         _RC1REG 000FAE                           _INTCON 000FF2  
                         _SPBRG1 000FAF                           _TMR3IF 007D09  
                 __CFG_WDTPS$256 000000                           _TMR3ON 007D88  
                         _TX1REG 000FAD               write_defaults@addr 0007  
             write_defaults@page 0006               write_defaults@temp 0008  
               __end_of_delay5ms 1A5C                     ?_sim_card_ok 0001  
               __end_of_ee_write 19DA                    ?_init_uart_md 0001  
                 __CFG_XINST$OFF 000000                 _startup_modem_ok 1A82  
           wakeup_modem_ok@F6740 105B             wakeup_modem_ok@F6742 1011  
              ??_md_uart_send_ok 000E                   __CFG_STVREN$ON 000000  
      md_uart_send_ok@wait_count 000D                 __end_of_init_pic 18BC  
                      ??_ee_read 0002                           clear_0 192E  
             _default_ENCRYPTION 1075                   ??_is_first_run 0004  
                   __pdataCOMRAM 003B                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                     start_modem@i 003A  
            _default_ACCESS_CODE 1055                       __accesstop 0060  
        __end_of__initialization 1936                  __CFG_PBADEN$OFF 000000  
                 ??_init_uart_md 0001                    ___rparam_used 000001  
                   _default_ACCT 104F                   __pcstackCOMRAM 0001  
                 _save_first_run 1AEA                  _wakeup_modem_ok 17CA  
          md_uart_send_ok@toSend 0007            md_uart_send_ok@rtnStr 000A  
                   ?_start_modem 0001                  ??_md_uart_write 0005  
                     __pbssBANK1 0100                  __CFG_PLLCFG$OFF 000000  
      __size_of_init_modem_io_ok 00E8           __end_of_save_first_run 1AFA  
             __CFG_CCP2MX$PORTC1 000000               __CFG_CCP3MX$PORTB5 000000  
          __end_of_restart_modem 1908                  __CFG_WDTEN$SWON 000000  
                      ?_delay5ms 0001                   sim_card_ok@cnt 001A  
                      ?_ee_write 0001                          _SPBRGH1 000FB0  
                        _VERSION 003B                        ?_init_pic 0001  
        __end_of_wakeup_modem_ok 186A                  __CFG_PWRTEN$OFF 000000  
           __end_of_is_first_run 1ADA                          __Hparam 0000  
                        __Lparam 0000                  ?_save_first_run 0001  
           __size_of_sim_card_ok 0034                     __psmallconst 1000  
              ?_md_uart_transmit 0001                          _ee_read 1AA6  
                        __pcinit 1908                          __ramtop 1000  
                        __ptext0 1ADA                          __ptext1 19DA  
                        __ptext2 1A82                          __ptext3 17CA  
                        __ptext4 1978                          __ptext5 1080  
                        __ptext6 1944                          __ptext7 1AEA  
                        __ptext8 19AA                          __ptext9 1AC2  
             ??_md_uart_transmit 0001             __end_of_init_uart_md 1A82  
                     ??_delay5ms 0003                 sim_card_ok@F6760 1021  
               sim_card_ok@F6758 103A          _default_SERVER_ACK_TIME 107C  
       __end_of_startup_modem_ok 1AA6                       ??_ee_write 0003  
           end_of_initialization 1936                  _md_uart_send_ok 14D2  
                     ??_init_pic 0001                          postdec1 000FE5  
                        postinc0 000FEE                          postinc2 000FDE  
          init_modem_io_ok@F6751 1045            init_modem_io_ok@F6753 102E  
          init_modem_io_ok@F6749 1001                        _PORTAbits 000F80  
                      _PORTBbits 000F81                        _PORTCbits 000F82  
               __CFG_FOSC$INTIO7 000000                    ?_setup_timer3 0001  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94             __size_of_start_modem 002E  
            __end_of_default_APN 1075              __end_of_default_IP1 1073  
            __end_of_default_IP2 1071              __end_of_default_IP3 106F  
            __end_of_default_IP4 106D                 _init_modem_io_ok 16E2  
              wakeup_modem_ok@at 0023                 ?_wakeup_modem_ok 0001  
                  _default_CYCLE 1078                    _default_RETRY 1077  
                  _default_PORT1 1069                    _default_PORT2 1067  
                  _default_PORT3 1065                    _default_PORT4 1063  
                  _default_ZONE1 107B                    _default_ZONE2 107A  
                    _BAUDCONbits 000FB8                    __pidataCOMRAM 1B14  
                 ??_setup_timer3 0001              start_initialization 1908  
        __end_of_md_uart_send_ok 16E2          __size_of_write_defaults 0452  
            md_uart_send_ok@temp 00C4           md_uart_send_ok@want_ok 000C  
          __size_of_is_first_run 0018             md_uart_transmit@data 0001  
          __size_of_init_uart_md 0026              init_modem_io_ok@cnt 0039  
                    __pbssCOMRAM 0040                     _is_first_run 1AC2  
                  __pcstackBANK0 0060                _default_LINE_CARD 1060  
       md_uart_write@currentChar 0005                      _default_APN 1073  
                    _default_IP1 1071                      _default_IP2 106F  
                    _default_IP3 106D                      _default_IP4 106B  
              __size_of_delay5ms 002A                __size_of_ee_write 0030  
          __end_of_md_uart_write 1A32                 ??_save_first_run 0004  
__end_of_default_SERVER_ACK_TIME 107D      __end_of_default_ACCESS_CODE 105B  
              __size_of_init_pic 0052                     _init_uart_md 1A5C  
  __end_of_default_SMS_WAIT_TIME 1077         __end_ofsim_card_ok@F6760 102E  
       __end_ofsim_card_ok@F6758 1045              _default_PROGRAM_ACK 107E  
              _default_TEST_FREQ 107D                         ?_ee_read 0001  
               __CFG_PRICLKEN$ON 000000        __end_of_default_LINE_CARD 1063  
                    __smallconst 1000                 ?_md_uart_send_ok 0007  
              ?_startup_modem_ok 0001        __size_of_md_uart_transmit 000C  
                      delay5ms@i 0003                        delay5ms@j 0004  
             ??_startup_modem_ok 003A           __size_of_restart_modem 004C  
                       _LATAbits 000F89                         _LATBbits 000F8A  
                       _LATCbits 000F8B                    ??_sim_card_ok 0001  
    md_uart_send_ok@lengthToSend 0009                  sim_card_ok@cpin 000E  
      __end_of_default_TEST_FREQ 107E             __end_of_setup_timer3 1B08  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
   init_modem_io_ok@queryVersion 002F                        _returnStr 0100  
       __end_of_init_modem_io_ok 17CA                   _write_defaults 1080  
                      copy_data0 191C               md_uart_send_ok@buf 0060  
                       __Hrparam 0000                     ee_write@addr 0001  
                   ee_write@data 0002                     ee_write@page 0003  
                       __Lrparam 0000                     __Lsmallconst 1000  
             __CFG_BOREN$SBORDIS 000000                __CFG_P2BMX$PORTB5 000000  
            __end_of_sim_card_ok 1978                    _restart_modem 18BC  
             sim_card_ok@matches 0019                 __size_of_ee_read 001C  
                  ??_start_modem 003A           __end_of_write_defaults 14D2  
                    ee_read@addr 0001                      ee_read@data 0003  
                    ee_read@page 0002                         _delay5ms 1A32  
                       _ee_write 19AA                         __ptext10 1AA6  
                       __ptext11 16E2                         __ptext12 14D2  
                       __ptext13 1AFA                         __ptext14 1A08  
                       __ptext15 1B08                         __ptext16 1A5C  
                       __ptext17 18BC                         __ptext18 1A32  
                       __ptext19 186A                _setup_modem_io_ok 1978  
                    delay5ms@cnt 0001               ?_setup_modem_io_ok 0001  
                  __size_of_main 0010                         _init_pic 186A  
                 _saveINTCONbits 0040              ??_setup_modem_io_ok 003A  
                     _RC1STAbits 000FAB                   ?_restart_modem 0001  
       __size_of_wakeup_modem_ok 00A0       init_modem_io_ok@ledPattern 0023  
                ?_write_defaults 0001                       _INTCONbits 000FF2  
      __end_of_setup_modem_io_ok 19AA          sim_card_ok@cpinResponse 0001  
               _md_uart_transmit 1B08              __end_of_start_modem 1A08  
          __size_of_setup_timer3 000E                       _RCSTA1bits 000FAB  
     __end_of_default_ENCRYPTION 1076                      _sim_card_ok 1944  
                     _OSCCONbits 000FD3                 md_uart_send_ok@i 00C7  
               md_uart_send_ok@k 00C6               md_uart_write@index 0006  
                   _setup_timer3 1AFA                __CFG_T3CMX$PORTC0 000000  
              md_uart_write@data 0002                 md_uart_write@len 0004  
      __size_of_startup_modem_ok 0024  
