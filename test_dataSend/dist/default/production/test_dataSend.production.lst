

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 20 14:27:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 1.45
    44                           ; Generated 16/11/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F26K22 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  001A88                     __pidataCOMRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for send_md_cfg_cmds_ok@F6827
    83  001A88  41                 	db	65
    84  001A89  54                 	db	84
    85  001A8A  2B                 	db	43
    86  001A8B  43                 	db	67
    87  001A8C  50                 	db	80
    88  001A8D  49                 	db	73
    89  001A8E  4E                 	db	78
    90  001A8F  3F                 	db	63
    91  001A90  0D                 	db	13
    92  001A91  0A                 	db	10
    93  001A92  00                 	db	0
    94                           
    95                           ;initializer for send_md_cfg_cmds_ok@F6825
    96  001A93  41                 	db	65
    97  001A94  54                 	db	84
    98  001A95  23                 	db	35
    99  001A96  43                 	db	67
   100  001A97  47                 	db	71
   101  001A98  4D                 	db	77
   102  001A99  52                 	db	82
   103  001A9A  0D                 	db	13
   104  001A9B  0A                 	db	10
   105  001A9C  00                 	db	0
   106                           
   107                           	psect	idataBANK0
   108  001A9D                     __pidataBANK0:
   109                           	opt stack 0
   110                           
   111                           ;initializer for send_md_cfg_cmds_ok@F6835
   112  001A9D  41                 	db	65
   113  001A9E  54                 	db	84
   114  001A9F  2B                 	db	43
   115  001AA0  43                 	db	67
   116  001AA1  53                 	db	83
   117  001AA2  51                 	db	81
   118  001AA3  0D                 	db	13
   119  001AA4  0A                 	db	10
   120  001AA5  00                 	db	0
   121                           
   122                           ;initializer for send_md_cfg_cmds_ok@F6815
   123  001AA6  41                 	db	65
   124  001AA7  54                 	db	84
   125  001AA8  45                 	db	69
   126  001AA9  31                 	db	49
   127  001AAA  0D                 	db	13
   128  001AAB  0A                 	db	10
   129  001AAC  00                 	db	0
   130                           
   131                           ;initializer for send_md_cfg_cmds_ok@F6813
   132  001AAD  41                 	db	65
   133  001AAE  54                 	db	84
   134  001AAF  0D                 	db	13
   135  001AB0  0A                 	db	10
   136  001AB1  00                 	db	0
   137                           
   138                           	psect	idataBANK1
   139  0016AC                     __pidataBANK1:
   140                           	opt stack 0
   141                           
   142                           ;initializer for setup_data_ok@F6849
   143  0016AC  41                 	db	65
   144  0016AD  54                 	db	84
   145  0016AE  2B                 	db	43
   146  0016AF  43                 	db	67
   147  0016B0  47                 	db	71
   148  0016B1  44                 	db	68
   149  0016B2  43                 	db	67
   150  0016B3  4F                 	db	79
   151  0016B4  4E                 	db	78
   152  0016B5  54                 	db	84
   153  0016B6  3D                 	db	61
   154  0016B7  33                 	db	51
   155  0016B8  2C                 	db	44
   156  0016B9  22                 	db	34
   157  0016BA  49                 	db	73
   158  0016BB  50                 	db	80
   159  0016BC  56                 	db	86
   160  0016BD  34                 	db	52
   161  0016BE  56                 	db	86
   162  0016BF  36                 	db	54
   163  0016C0  22                 	db	34
   164  0016C1  2C                 	db	44
   165  0016C2  22                 	db	34
   166  0016C3  77                 	db	119
   167  0016C4  79                 	db	121
   168  0016C5  6C                 	db	108
   169  0016C6  65                 	db	101
   170  0016C7  73                 	db	115
   171  0016C8  6C                 	db	108
   172  0016C9  74                 	db	116
   173  0016CA  65                 	db	101
   174  0016CB  2E                 	db	46
   175  0016CC  67                 	db	103
   176  0016CD  77                 	db	119
   177  0016CE  37                 	db	55
   178  0016CF  2E                 	db	46
   179  0016D0  76                 	db	118
   180  0016D1  7A                 	db	122
   181  0016D2  77                 	db	119
   182  0016D3  65                 	db	101
   183  0016D4  6E                 	db	110
   184  0016D5  74                 	db	116
   185  0016D6  70                 	db	112
   186  0016D7  22                 	db	34
   187  0016D8  0D                 	db	13
   188  0016D9  0A                 	db	10
   189  0016DA  00                 	db	0
   190                           
   191                           ;initializer for setup_data_ok@F6851
   192  0016DB  41                 	db	65
   193  0016DC  54                 	db	84
   194  0016DD  23                 	db	35
   195  0016DE  53                 	db	83
   196  0016DF  43                 	db	67
   197  0016E0  46                 	db	70
   198  0016E1  47                 	db	71
   199  0016E2  45                 	db	69
   200  0016E3  58                 	db	88
   201  0016E4  54                 	db	84
   202  0016E5  3D                 	db	61
   203  0016E6  31                 	db	49
   204  0016E7  2C                 	db	44
   205  0016E8  31                 	db	49
   206  0016E9  2C                 	db	44
   207  0016EA  30                 	db	48
   208  0016EB  2C                 	db	44
   209  0016EC  30                 	db	48
   210  0016ED  2C                 	db	44
   211  0016EE  30                 	db	48
   212  0016EF  2C                 	db	44
   213  0016F0  30                 	db	48
   214  0016F1  0D                 	db	13
   215  0016F2  0A                 	db	10
   216  0016F3  00                 	db	0
   217                           
   218                           ;initializer for send_md_cfg_cmds_ok@F6821
   219  0016F4  41                 	db	65
   220  0016F5  54                 	db	84
   221  0016F6  23                 	db	35
   222  0016F7  47                 	db	71
   223  0016F8  50                 	db	80
   224  0016F9  49                 	db	73
   225  0016FA  4F                 	db	79
   226  0016FB  3D                 	db	61
   227  0016FC  37                 	db	55
   228  0016FD  2C                 	db	44
   229  0016FE  30                 	db	48
   230  0016FF  2C                 	db	44
   231  001700  32                 	db	50
   232  001701  0D                 	db	13
   233  001702  0A                 	db	10
   234  001703  00                 	db	0
   235                           
   236                           ;initializer for send_md_cfg_cmds_ok@F6819
   237  001704  41                 	db	65
   238  001705  54                 	db	84
   239  001706  2B                 	db	43
   240  001707  49                 	db	73
   241  001708  50                 	db	80
   242  001709  52                 	db	82
   243  00170A  3D                 	db	61
   244  00170B  31                 	db	49
   245  00170C  31                 	db	49
   246  00170D  35                 	db	53
   247  00170E  32                 	db	50
   248  00170F  30                 	db	48
   249  001710  30                 	db	48
   250  001711  0D                 	db	13
   251  001712  0A                 	db	10
   252  001713  00                 	db	0
   253                           
   254                           ;initializer for setup_data_ok@F6853
   255  001714  41                 	db	65
   256  001715  54                 	db	84
   257  001716  23                 	db	35
   258  001717  53                 	db	83
   259  001718  47                 	db	71
   260  001719  41                 	db	65
   261  00171A  43                 	db	67
   262  00171B  54                 	db	84
   263  00171C  3D                 	db	61
   264  00171D  33                 	db	51
   265  00171E  2C                 	db	44
   266  00171F  31                 	db	49
   267  001720  0D                 	db	13
   268  001721  0A                 	db	10
   269  001722  00                 	db	0
   270                           
   271                           ;initializer for send_md_cfg_cmds_ok@F6831
   272  001723  41                 	db	65
   273  001724  54                 	db	84
   274  001725  2B                 	db	43
   275  001726  43                 	db	67
   276  001727  45                 	db	69
   277  001728  52                 	db	82
   278  001729  45                 	db	69
   279  00172A  47                 	db	71
   280  00172B  3F                 	db	63
   281  00172C  0D                 	db	13
   282  00172D  0A                 	db	10
   283  00172E  00                 	db	0
   284                           
   285                           ;initializer for send_md_cfg_cmds_ok@F6823
   286  00172F  41                 	db	65
   287  001730  54                 	db	84
   288  001731  23                 	db	35
   289  001732  53                 	db	83
   290  001733  4C                 	db	76
   291  001734  45                 	db	69
   292  001735  44                 	db	68
   293  001736  3D                 	db	61
   294  001737  34                 	db	52
   295  001738  0D                 	db	13
   296  001739  0A                 	db	10
   297  00173A  00                 	db	0
   298                           
   299                           ;initializer for send_md_cfg_cmds_ok@F6817
   300  00173B  41                 	db	65
   301  00173C  54                 	db	84
   302  00173D  2B                 	db	43
   303  00173E  43                 	db	67
   304  00173F  4D                 	db	77
   305  001740  45                 	db	69
   306  001741  45                 	db	69
   307  001742  3D                 	db	61
   308  001743  32                 	db	50
   309  001744  0D                 	db	13
   310  001745  0A                 	db	10
   311  001746  00                 	db	0
   312                           
   313                           ;initializer for send_md_cfg_cmds_ok@F6833
   314  001747  41                 	db	65
   315  001748  54                 	db	84
   316  001749  23                 	db	35
   317  00174A  47                 	db	71
   318  00174B  50                 	db	80
   319  00174C  52                 	db	82
   320  00174D  53                 	db	83
   321  00174E  3F                 	db	63
   322  00174F  0D                 	db	13
   323  001750  0A                 	db	10
   324  001751  00                 	db	0
   325                           
   326                           ;initializer for send_md_cfg_cmds_ok@F6829
   327  001752  41                 	db	65
   328  001753  54                 	db	84
   329  001754  2B                 	db	43
   330  001755  43                 	db	67
   331  001756  52                 	db	82
   332  001757  45                 	db	69
   333  001758  47                 	db	71
   334  001759  3F                 	db	63
   335  00175A  0D                 	db	13
   336  00175B  0A                 	db	10
   337  00175C  00                 	db	0
   338                           
   339                           	psect	smallconst
   340  001000                     __psmallconst:
   341                           	opt stack 0
   342  001000  00                 	db	0
   343  001001                     send_over_socket_ok@F6858:
   344                           	opt stack 0
   345  001001  41                 	db	65
   346  001002  54                 	db	84
   347  001003  23                 	db	35
   348  001004  53                 	db	83
   349  001005  44                 	db	68
   350  001006  3D                 	db	61
   351  001007  31                 	db	49
   352  001008  2C                 	db	44
   353  001009  30                 	db	48
   354  00100A  2C                 	db	44
   355  00100B  31                 	db	49
   356  00100C  30                 	db	48
   357  00100D  35                 	db	53
   358  00100E  31                 	db	49
   359  00100F  30                 	db	48
   360  001010  2C                 	db	44
   361  001011  22                 	db	34
   362  001012  6D                 	db	109
   363  001013  6F                 	db	111
   364  001014  64                 	db	100
   365  001015  75                 	db	117
   366  001016  6C                 	db	108
   367  001017  65                 	db	101
   368  001018  73                 	db	115
   369  001019  2E                 	db	46
   370  00101A  74                 	db	116
   371  00101B  65                 	db	101
   372  00101C  6C                 	db	108
   373  00101D  69                 	db	105
   374  00101E  74                 	db	116
   375  00101F  2E                 	db	46
   376  001020  63                 	db	99
   377  001021  6F                 	db	111
   378  001022  6D                 	db	109
   379  001023  22                 	db	34
   380  001024  2C                 	db	44
   381  001025  30                 	db	48
   382  001026  2C                 	db	44
   383  001027  30                 	db	48
   384  001028  2C                 	db	44
   385  001029  31                 	db	49
   386  00102A  0D                 	db	13
   387  00102B  0A                 	db	10
   388  00102C  00                 	db	0
   389  00102D                     __end_ofsend_over_socket_ok@F6858:
   390                           	opt stack 0
   391  00102D                     send_over_socket_ok@F6862:
   392                           	opt stack 0
   393  00102D  41                 	db	65
   394  00102E  54                 	db	84
   395  00102F  23                 	db	35
   396  001030  53                 	db	83
   397  001031  52                 	db	82
   398  001032  45                 	db	69
   399  001033  43                 	db	67
   400  001034  56                 	db	86
   401  001035  3D                 	db	61
   402  001036  31                 	db	49
   403  001037  2C                 	db	44
   404  001038  38                 	db	56
   405  001039  39                 	db	57
   406  00103A  0D                 	db	13
   407  00103B  0A                 	db	10
   408  00103C  00                 	db	0
   409  00103D                     __end_ofsend_over_socket_ok@F6862:
   410                           	opt stack 0
   411  00103D                     close_socket_ok@F6875:
   412                           	opt stack 0
   413  00103D  41                 	db	65
   414  00103E  54                 	db	84
   415  00103F  23                 	db	35
   416  001040  53                 	db	83
   417  001041  47                 	db	71
   418  001042  41                 	db	65
   419  001043  43                 	db	67
   420  001044  54                 	db	84
   421  001045  3D                 	db	61
   422  001046  33                 	db	51
   423  001047  2C                 	db	44
   424  001048  30                 	db	48
   425  001049  0D                 	db	13
   426  00104A  0A                 	db	10
   427  00104B  00                 	db	0
   428  00104C                     __end_ofclose_socket_ok@F6875:
   429                           	opt stack 0
   430  00104C                     send_over_socket_ok@F6860:
   431                           	opt stack 0
   432  00104C  41                 	db	65
   433  00104D  54                 	db	84
   434  00104E  23                 	db	35
   435  00104F  53                 	db	83
   436  001050  53                 	db	83
   437  001051  45                 	db	69
   438  001052  4E                 	db	78
   439  001053  44                 	db	68
   440  001054  3D                 	db	61
   441  001055  31                 	db	49
   442  001056  0D                 	db	13
   443  001057  0A                 	db	10
   444  001058  00                 	db	0
   445  001059                     __end_ofsend_over_socket_ok@F6860:
   446                           	opt stack 0
   447  001059                     close_socket_ok@F6873:
   448                           	opt stack 0
   449  001059  41                 	db	65
   450  00105A  54                 	db	84
   451  00105B  23                 	db	35
   452  00105C  53                 	db	83
   453  00105D  48                 	db	72
   454  00105E  3D                 	db	61
   455  00105F  31                 	db	49
   456  001060  0D                 	db	13
   457  001061  0A                 	db	10
   458  001062  00                 	db	0
   459  001063                     __end_ofclose_socket_ok@F6873:
   460                           	opt stack 0
   461  001063                     send_over_socket_ok@F6864:
   462                           	opt stack 0
   463  001063  45                 	db	69
   464  001064  63                 	db	99
   465  001065  68                 	db	104
   466  001066  6F                 	db	111
   467  001067  2E                 	db	46
   468  001068  0D                 	db	13
   469  001069  0A                 	db	10
   470  00106A  00                 	db	0
   471  00106B                     __end_ofsend_over_socket_ok@F6864:
   472                           	opt stack 0
   473  00106B                     _VERSION:
   474                           	opt stack 0
   475  00106B  32                 	db	50
   476  00106C  30                 	db	48
   477  00106D  32                 	db	50
   478  00106E  30                 	db	48
   479  00106F  00                 	db	0
   480  001070                     __end_of_VERSION:
   481                           	opt stack 0
   482  0000                     _T5CONbits	set	3918
   483  0000                     _TMR5L	set	3919
   484  0000                     _TMR5H	set	3920
   485  0000                     _T5CON	set	3918
   486  0000                     _ANSELB	set	3897
   487  0000                     _ANSELC	set	3898
   488  0000                     _ANSELA	set	3896
   489  0000                     _TX1REG	set	4013
   490  0000                     _PIR1bits	set	3998
   491  0000                     _RCSTA1bits	set	4011
   492  0000                     _RC1STAbits	set	4011
   493  0000                     _SPBRG1	set	4015
   494  0000                     _SPBRGH1	set	4016
   495  0000                     _TXSTA1bits	set	4012
   496  0000                     _BAUDCONbits	set	4024
   497  0000                     _BAUDCON1bits	set	4024
   498  0000                     _PIR5bits	set	3966
   499  0000                     _PIE5bits	set	3965
   500  0000                     _INTCONbits	set	4082
   501  0000                     _TMR0L	set	4054
   502  0000                     _TMR0H	set	4055
   503  0000                     _T0CON	set	4053
   504  0000                     _LATBbits	set	3978
   505  0000                     _LATCbits	set	3979
   506  0000                     _TRISCbits	set	3988
   507  0000                     _PORTCbits	set	3970
   508  0000                     _TRISBbits	set	3987
   509  0000                     _PORTAbits	set	3968
   510  0000                     _TRISAbits	set	3986
   511  0000                     _OSCCONbits	set	4051
   512  0000                     _PORTBbits	set	3969
   513  0000                     _RC1REG	set	4014
   514  0000                     _PIE1bits	set	3997
   515  0000                     _TRMT1	set	32097
   516  0000                     _PEIE	set	32662
   517  0000                     _CREN1	set	32092
   518  0000                     _RC1IE	set	31981
   519  0000                     _GIE	set	32663
   520  0000                     _TMR0IF	set	32658
   521  0000                     _TMR5IF	set	31729
   522  0000                     _RC1IF	set	31989
   523                           
   524                           ; #config settings
   525  001070  00                 	db	0	; dummy byte at the end
   526  0000                     
   527                           	psect	cinit
   528  00175E                     __pcinit:
   529                           	opt stack 0
   530  00175E                     start_initialization:
   531                           	opt stack 0
   532  00175E                     __initialization:
   533                           	opt stack 0
   534                           
   535                           ; Initialize objects allocated to BANK1 (177 bytes)
   536                           ; load TBLPTR registers with __pidataBANK1
   537  00175E  0EAC               	movlw	low __pidataBANK1
   538  001760  6EF6               	movwf	tblptrl,c
   539  001762  0E16               	movlw	high __pidataBANK1
   540  001764  6EF7               	movwf	tblptrh,c
   541  001766  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   542  001768  6EF8               	movwf	tblptru,c
   543  00176A  EE01  F000         	lfsr	0,__pdataBANK1
   544  00176E  EE10 F0B1          	lfsr	1,177
   545  001772                     copy_data0:
   546  001772  0009               	tblrd		*+
   547  001774  CFF5 FFEE          	movff	tablat,postinc0
   548  001778  50E5               	movf	postdec1,w,c
   549  00177A  50E1               	movf	fsr1l,w,c
   550  00177C  E1FA               	bnz	copy_data0
   551                           
   552                           ; Initialize objects allocated to BANK0 (21 bytes)
   553                           ; load TBLPTR registers with __pidataBANK0
   554  00177E  0E9D               	movlw	low __pidataBANK0
   555  001780  6EF6               	movwf	tblptrl,c
   556  001782  0E1A               	movlw	high __pidataBANK0
   557  001784  6EF7               	movwf	tblptrh,c
   558  001786  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   559  001788  6EF8               	movwf	tblptru,c
   560  00178A  EE00  F0E4         	lfsr	0,__pdataBANK0
   561  00178E  EE10 F015          	lfsr	1,21
   562  001792                     copy_data1:
   563  001792  0009               	tblrd		*+
   564  001794  CFF5 FFEE          	movff	tablat,postinc0
   565  001798  50E5               	movf	postdec1,w,c
   566  00179A  50E1               	movf	fsr1l,w,c
   567  00179C  E1FA               	bnz	copy_data1
   568                           
   569                           ; Initialize objects allocated to COMRAM (21 bytes)
   570                           ; load TBLPTR registers with __pidataCOMRAM
   571  00179E  0E88               	movlw	low __pidataCOMRAM
   572  0017A0  6EF6               	movwf	tblptrl,c
   573  0017A2  0E1A               	movlw	high __pidataCOMRAM
   574  0017A4  6EF7               	movwf	tblptrh,c
   575  0017A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   576  0017A8  6EF8               	movwf	tblptru,c
   577  0017AA  EE00  F025         	lfsr	0,__pdataCOMRAM
   578  0017AE  EE10 F015          	lfsr	1,21
   579  0017B2                     copy_data2:
   580  0017B2  0009               	tblrd		*+
   581  0017B4  CFF5 FFEE          	movff	tablat,postinc0
   582  0017B8  50E5               	movf	postdec1,w,c
   583  0017BA  50E1               	movf	fsr1l,w,c
   584  0017BC  E1FA               	bnz	copy_data2
   585                           
   586                           ; Clear objects allocated to BANK2 (160 bytes)
   587  0017BE  EE02  F000         	lfsr	0,__pbssBANK2
   588  0017C2  0EA0               	movlw	160
   589  0017C4                     clear_0:
   590  0017C4  6AEE               	clrf	postinc0,c
   591  0017C6  06E8               	decf	wreg,f,c
   592  0017C8  E1FD               	bnz	clear_0
   593                           
   594                           ; Clear objects allocated to BANK1 (60 bytes)
   595  0017CA  EE01  F0B1         	lfsr	0,__pbssBANK1
   596  0017CE  0E3C               	movlw	60
   597  0017D0                     clear_1:
   598  0017D0  6AEE               	clrf	postinc0,c
   599  0017D2  06E8               	decf	wreg,f,c
   600  0017D4  E1FD               	bnz	clear_1
   601                           
   602                           ; Clear objects allocated to BANK0 (3 bytes)
   603  0017D6  0100               	movlb	0
   604  0017D8  6BFB               	clrf	(__pbssBANK0+2)& (0+255),b
   605  0017DA  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
   606  0017DC  6BF9               	clrf	__pbssBANK0& (0+255),b
   607                           
   608                           ; Clear objects allocated to COMRAM (10 bytes)
   609  0017DE  EE00  F03A         	lfsr	0,__pbssCOMRAM
   610  0017E2  0E0A               	movlw	10
   611  0017E4                     clear_2:
   612  0017E4  6AEE               	clrf	postinc0,c
   613  0017E6  06E8               	decf	wreg,f,c
   614  0017E8  E1FD               	bnz	clear_2
   615  0017EA                     end_of_initialization:
   616                           	opt stack 0
   617  0017EA                     __end_of__initialization:
   618                           	opt stack 0
   619  0017EA  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   620  0017EC  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   621  0017EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   622  0017F0  6EF8               	movwf	tblptru,c
   623  0017F2  0100               	movlb	0
   624  0017F4  EF19  F00D         	goto	_main	;jump to C main() function
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634                           	psect	bssCOMRAM
   635  00003A                     __pbssCOMRAM:
   636                           	opt stack 0
   637  00003A                     _lastChar:
   638                           	opt stack 0
   639  00003A                     	ds	1
   640  00003B                     _currentChar:
   641                           	opt stack 0
   642  00003B                     	ds	1
   643  00003C                     _timedOut:
   644                           	opt stack 0
   645  00003C                     	ds	1
   646  00003D                     _receivedRESP:
   647                           	opt stack 0
   648  00003D                     	ds	1
   649  00003E                     _receivedERR:
   650                           	opt stack 0
   651  00003E                     	ds	1
   652  00003F                     _receivedOK:
   653                           	opt stack 0
   654  00003F                     	ds	1
   655  000040                     _endPtr:
   656                           	opt stack 0
   657  000040                     	ds	1
   658  000041                     _tmr5_cnt:
   659                           	opt stack 0
   660  000041                     	ds	1
   661  000042                     _ledPatternCount:
   662                           	opt stack 0
   663  000042                     	ds	1
   664  000043                     _ledPattern:
   665                           	opt stack 0
   666  000043                     	ds	1
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           
   676                           	psect	dataCOMRAM
   677  000025                     __pdataCOMRAM:
   678                           	opt stack 0
   679  000025                     send_md_cfg_cmds_ok@F6827:
   680                           	opt stack 0
   681  000025                     	ds	11
   682  000030                     send_md_cfg_cmds_ok@F6825:
   683                           	opt stack 0
   684  000030                     	ds	10
   685                           tblptru	equ	0xFF8
   686                           tblptrh	equ	0xFF7
   687                           tblptrl	equ	0xFF6
   688                           tablat	equ	0xFF5
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           postdec1	equ	0xFE5
   692                           fsr1l	equ	0xFE1
   693                           
   694                           	psect	bssBANK0
   695  0000F9                     __pbssBANK0:
   696                           	opt stack 0
   697  0000F9                     _pdpIsActive:
   698                           	opt stack 0
   699  0000F9                     	ds	1
   700  0000FA                     _bootTimerIsDone:
   701                           	opt stack 0
   702  0000FA                     	ds	1
   703  0000FB                     _md_state:
   704                           	opt stack 0
   705  0000FB                     	ds	1
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           postinc0	equ	0xFEE
   711                           wreg	equ	0xFE8
   712                           postdec1	equ	0xFE5
   713                           fsr1l	equ	0xFE1
   714                           
   715                           	psect	dataBANK0
   716  0000E4                     __pdataBANK0:
   717                           	opt stack 0
   718  0000E4                     send_md_cfg_cmds_ok@F6835:
   719                           	opt stack 0
   720  0000E4                     	ds	9
   721  0000ED                     send_md_cfg_cmds_ok@F6815:
   722                           	opt stack 0
   723  0000ED                     	ds	7
   724  0000F4                     send_md_cfg_cmds_ok@F6813:
   725                           	opt stack 0
   726  0000F4                     	ds	5
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           postinc0	equ	0xFEE
   732                           wreg	equ	0xFE8
   733                           postdec1	equ	0xFE5
   734                           fsr1l	equ	0xFE1
   735                           
   736                           	psect	bssBANK1
   737  0001B1                     __pbssBANK1:
   738                           	opt stack 0
   739  0001B1                     _referenceBuf:
   740                           	opt stack 0
   741  0001B1                     	ds	60
   742                           tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           tblptrl	equ	0xFF6
   745                           tablat	equ	0xFF5
   746                           postinc0	equ	0xFEE
   747                           wreg	equ	0xFE8
   748                           postdec1	equ	0xFE5
   749                           fsr1l	equ	0xFE1
   750                           
   751                           	psect	dataBANK1
   752  000100                     __pdataBANK1:
   753                           	opt stack 0
   754  000100                     setup_data_ok@F6849:
   755                           	opt stack 0
   756  000100                     	ds	47
   757  00012F                     setup_data_ok@F6851:
   758                           	opt stack 0
   759  00012F                     	ds	25
   760  000148                     send_md_cfg_cmds_ok@F6821:
   761                           	opt stack 0
   762  000148                     	ds	16
   763  000158                     send_md_cfg_cmds_ok@F6819:
   764                           	opt stack 0
   765  000158                     	ds	16
   766  000168                     setup_data_ok@F6853:
   767                           	opt stack 0
   768  000168                     	ds	15
   769  000177                     send_md_cfg_cmds_ok@F6831:
   770                           	opt stack 0
   771  000177                     	ds	12
   772  000183                     send_md_cfg_cmds_ok@F6823:
   773                           	opt stack 0
   774  000183                     	ds	12
   775  00018F                     send_md_cfg_cmds_ok@F6817:
   776                           	opt stack 0
   777  00018F                     	ds	12
   778  00019B                     send_md_cfg_cmds_ok@F6833:
   779                           	opt stack 0
   780  00019B                     	ds	11
   781  0001A6                     send_md_cfg_cmds_ok@F6829:
   782                           	opt stack 0
   783  0001A6                     	ds	11
   784                           tblptru	equ	0xFF8
   785                           tblptrh	equ	0xFF7
   786                           tblptrl	equ	0xFF6
   787                           tablat	equ	0xFF5
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           postdec1	equ	0xFE5
   791                           fsr1l	equ	0xFE1
   792                           
   793                           	psect	bssBANK2
   794  000200                     __pbssBANK2:
   795                           	opt stack 0
   796  000200                     _mdRxBuf:
   797                           	opt stack 0
   798  000200                     	ds	160
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           postdec1	equ	0xFE5
   806                           fsr1l	equ	0xFE1
   807                           
   808                           	psect	cstackBANK0
   809  000060                     __pcstackBANK0:
   810                           	opt stack 0
   811  000060                     close_socket_ok@deactivatePDP:
   812                           	opt stack 0
   813  000060                     send_md_cfg_cmds_ok@baud:
   814                           	opt stack 0
   815  000060                     send_over_socket_ok@openConnection:
   816                           	opt stack 0
   817  000060                     setup_data_ok@setApn:
   818                           	opt stack 0
   819                           
   820                           ; 47 bytes @ 0x0
   821  000060                     	ds	15
   822  00006F                     close_socket_ok@closeSocket:
   823                           	opt stack 0
   824                           
   825                           ; 10 bytes @ 0xF
   826  00006F                     	ds	1
   827  000070                     send_md_cfg_cmds_ok@ledCfg:
   828                           	opt stack 0
   829                           
   830                           ; 16 bytes @ 0x10
   831  000070                     	ds	16
   832  000080                     send_md_cfg_cmds_ok@cmee:
   833                           	opt stack 0
   834                           
   835                           ; 12 bytes @ 0x20
   836  000080                     	ds	12
   837  00008C                     send_md_cfg_cmds_ok@ledpattern:
   838                           	opt stack 0
   839  00008C                     send_over_socket_ok@srecv:
   840                           	opt stack 0
   841                           
   842                           ; 16 bytes @ 0x2C
   843  00008C                     	ds	3
   844  00008F                     setup_data_ok@cfgSocket:
   845                           	opt stack 0
   846                           
   847                           ; 25 bytes @ 0x2F
   848  00008F                     	ds	9
   849  000098                     send_md_cfg_cmds_ok@cereg:
   850                           	opt stack 0
   851                           
   852                           ; 12 bytes @ 0x38
   853  000098                     	ds	4
   854  00009C                     send_over_socket_ok@ssend:
   855                           	opt stack 0
   856                           
   857                           ; 13 bytes @ 0x3C
   858  00009C                     	ds	8
   859  0000A4                     send_md_cfg_cmds_ok@cpin:
   860                           	opt stack 0
   861                           
   862                           ; 11 bytes @ 0x44
   863  0000A4                     	ds	4
   864  0000A8                     setup_data_ok@activatePDP:
   865                           	opt stack 0
   866                           
   867                           ; 15 bytes @ 0x48
   868  0000A8                     	ds	1
   869  0000A9                     send_over_socket_ok@msg:
   870                           	opt stack 0
   871                           
   872                           ; 8 bytes @ 0x49
   873  0000A9                     	ds	6
   874  0000AF                     send_md_cfg_cmds_ok@creg:
   875                           	opt stack 0
   876                           
   877                           ; 11 bytes @ 0x4F
   878  0000AF                     	ds	2
   879  0000B1                     send_over_socket_ok@terminateData:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x51
   883  0000B1                     	ds	9
   884  0000BA                     send_md_cfg_cmds_ok@gprs:
   885                           	opt stack 0
   886                           
   887                           ; 11 bytes @ 0x5A
   888  0000BA                     	ds	11
   889  0000C5                     send_md_cfg_cmds_ok@queryVersion:
   890                           	opt stack 0
   891                           
   892                           ; 10 bytes @ 0x65
   893  0000C5                     	ds	10
   894  0000CF                     send_md_cfg_cmds_ok@csq:
   895                           	opt stack 0
   896                           
   897                           ; 9 bytes @ 0x6F
   898  0000CF                     	ds	9
   899  0000D8                     send_md_cfg_cmds_ok@ate:
   900                           	opt stack 0
   901                           
   902                           ; 7 bytes @ 0x78
   903  0000D8                     	ds	7
   904  0000DF                     send_md_cfg_cmds_ok@at:
   905                           	opt stack 0
   906                           
   907                           ; 5 bytes @ 0x7F
   908  0000DF                     	ds	5
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1l	equ	0xFE1
   917                           
   918                           	psect	cstackCOMRAM
   919  000001                     __pcstackCOMRAM:
   920                           	opt stack 0
   921  000001                     ??_check_mdstate_tmr5:
   922  000001                     
   923                           ; 1 bytes @ 0x0
   924  000001                     	ds	1
   925  000002                     ??_isr:
   926                           
   927                           ; 1 bytes @ 0x1
   928  000002                     	ds	20
   929  000016                     ??_start_modem_send_process:
   930  000016                     md_uart_send@data:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x15
   934  000016                     	ds	1
   935  000017                     md_uart_write_str_ok@data:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x16
   939  000017                     	ds	2
   940  000019                     md_uart_write_str_ok@len1:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x18
   944  000019                     	ds	1
   945  00001A                     md_uart_write_str_ok@wantOk:
   946                           	opt stack 0
   947                           
   948                           ; 1 bytes @ 0x19
   949  00001A                     	ds	1
   950  00001B                     md_uart_write_str_ok@waitToSendMoreData:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x1A
   954  00001B                     	ds	1
   955  00001C                     ??_md_uart_write_str_ok:
   956                           
   957                           ; 1 bytes @ 0x1B
   958  00001C                     	ds	2
   959  00001E                     md_uart_write_str_ok@numRetries:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x1D
   963  00001E                     	ds	1
   964  00001F                     md_uart_write_str_ok@index:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x1E
   968  00001F                     	ds	1
   969  000020                     md_uart_write_str_ok@currentChar:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x1F
   973  000020                     	ds	1
   974  000021                     md_uart_write_str_ok@pos:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x20
   978  000021                     	ds	1
   979  000022                     ??_send_over_socket_ok:
   980  000022                     
   981                           ; 1 bytes @ 0x21
   982  000022                     	ds	2
   983  000024                     ??_main:
   984                           
   985                           ; 1 bytes @ 0x23
   986  000024                     	ds	1
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996 ;;
   997 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   998 ;;
   999 ;; *************** function _main *****************
  1000 ;; Defined at:
  1001 ;;		line 63 in file "main.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;Total ram usage:        1 bytes
  1020 ;; Hardware stack levels required when called:    7
  1021 ;; This function calls:
  1022 ;;		_check_modem_state
  1023 ;;		_init_pic
  1024 ;;		_start_modem_send_process
  1025 ;; This function is called by:
  1026 ;;		Startup code after reset
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text0
  1031  001A32                     __ptext0:
  1032                           	opt stack 0
  1033  001A32                     _main:
  1034                           	opt stack 24
  1035                           
  1036                           ;main.c: 65: init_pic();
  1037                           
  1038                           ;incstack = 0
  1039  001A32  ECBD  F00C         	call	_init_pic	;wreg free
  1040  001A36                     
  1041                           ;main.c: 70: {
  1042                           ;main.c: 71: if (PORTBbits.RB4)
  1043  001A36  A881               	btfss	3969,4,c	;volatile
  1044  001A38  D00A               	goto	l123
  1045                           
  1046                           ;main.c: 72: {
  1047                           ;main.c: 73: _delay((unsigned long)((50)*(8000000/4000.0)));
  1048  001A3A  0E82               	movlw	130
  1049  001A3C  6E24               	movwf	??_main& (0+255),c
  1050  001A3E  0EDE               	movlw	222
  1051  001A40                     u2057:
  1052  001A40  2EE8               	decfsz	wreg,f,c
  1053  001A42  D7FE               	bra	u2057
  1054  001A44  2E24               	decfsz	??_main& (0+255),f,c
  1055  001A46  D7FC               	bra	u2057
  1056                           
  1057                           ;main.c: 74: if (PORTBbits.RB4)
  1058  001A48  B881               	btfsc	3969,4,c	;volatile
  1059                           
  1060                           ;main.c: 75: {
  1061                           ;main.c: 76: start_modem_send_process();
  1062  001A4A  ECF0  F00C         	call	_start_modem_send_process	;wreg free
  1063  001A4E                     l123:
  1064                           
  1065                           ;main.c: 77: }
  1066                           ;main.c: 78: }
  1067                           ;main.c: 79: check_modem_state();
  1068  001A4E  EC45  F00C         	call	_check_modem_state	;wreg free
  1069  001A52  D7F1               	goto	l121
  1070  001A54                     __end_of_main:
  1071                           	opt stack 0
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           postdec1	equ	0xFE5
  1079                           fsr1l	equ	0xFE1
  1080                           
  1081 ;; *************** function _init_pic *****************
  1082 ;; Defined at:
  1083 ;;		line 85 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    3
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text1
  1112  00197A                     __ptext1:
  1113                           	opt stack 0
  1114  00197A                     _init_pic:
  1115                           	opt stack 27
  1116                           
  1117                           ;main.c: 88: OSCCONbits.IDLEN = 0;
  1118                           
  1119                           ;incstack = 0
  1120  00197A  9ED3               	bcf	4051,7,c	;volatile
  1121                           
  1122                           ;main.c: 89: OSCCONbits.IRCF = 0b110;
  1123  00197C  50D3               	movf	4051,w,c	;volatile
  1124  00197E  0B8F               	andlw	-113
  1125  001980  0960               	iorlw	96
  1126  001982  6ED3               	movwf	4051,c	;volatile
  1127                           
  1128                           ;main.c: 90: OSCCONbits.OSTS = 1;
  1129  001984  86D3               	bsf	4051,3,c	;volatile
  1130                           
  1131                           ;main.c: 94: ANSELA = 0x01;
  1132  001986  0E01               	movlw	1
  1133  001988  010F               	movlb	15	; () banked
  1134  00198A  6F38               	movwf	56,b	;volatile
  1135                           
  1136                           ; BSR set to: 15
  1137                           ;main.c: 96: TRISAbits.TRISA0 = 1;
  1138  00198C  8092               	bsf	3986,0,c	;volatile
  1139                           
  1140                           ; BSR set to: 15
  1141                           ;main.c: 97: TRISAbits.TRISA3 = 0;
  1142  00198E  9692               	bcf	3986,3,c	;volatile
  1143                           
  1144                           ; BSR set to: 15
  1145                           ;main.c: 98: PORTAbits.RA3 = 0;
  1146  001990  9680               	bcf	3968,3,c	;volatile
  1147                           
  1148                           ;main.c: 101: ANSELC = 0x00;
  1149  001992  0E00               	movlw	0
  1150  001994  6F3A               	movwf	58,b	;volatile
  1151                           
  1152                           ; BSR set to: 15
  1153                           ;main.c: 102: PORTBbits.RB3 = 1;
  1154  001996  8681               	bsf	3969,3,c	;volatile
  1155                           
  1156                           ; BSR set to: 15
  1157                           ;main.c: 103: TRISBbits.TRISB3 = 0;
  1158  001998  9693               	bcf	3987,3,c	;volatile
  1159                           
  1160                           ; BSR set to: 15
  1161                           ;main.c: 104: PORTCbits.RC6 = 1;
  1162  00199A  8C82               	bsf	3970,6,c	;volatile
  1163                           
  1164                           ; BSR set to: 15
  1165                           ;main.c: 105: TRISCbits.TRISC6 = 0;
  1166  00199C  9C94               	bcf	3988,6,c	;volatile
  1167                           
  1168                           ; BSR set to: 15
  1169                           ;main.c: 106: LATCbits.LATC7 = 1;
  1170  00199E  8E8B               	bsf	3979,7,c	;volatile
  1171                           
  1172                           ; BSR set to: 15
  1173                           ;main.c: 107: TRISCbits.TRISC7 = 1;
  1174  0019A0  8E94               	bsf	3988,7,c	;volatile
  1175                           
  1176                           ;main.c: 110: ANSELB = 0x00;
  1177  0019A2  0E00               	movlw	0
  1178  0019A4  6F39               	movwf	57,b	;volatile
  1179                           
  1180                           ; BSR set to: 15
  1181                           ;main.c: 112: TRISBbits.TRISB0 = 1;
  1182  0019A6  8093               	bsf	3987,0,c	;volatile
  1183                           
  1184                           ; BSR set to: 15
  1185                           ;main.c: 113: TRISCbits.TRISC1 = 1;
  1186  0019A8  8294               	bsf	3988,1,c	;volatile
  1187                           
  1188                           ; BSR set to: 15
  1189                           ;main.c: 114: PORTBbits.RB1 = 1;
  1190  0019AA  8281               	bsf	3969,1,c	;volatile
  1191                           
  1192                           ; BSR set to: 15
  1193                           ;main.c: 115: TRISBbits.TRISB1 = 1;
  1194  0019AC  8293               	bsf	3987,1,c	;volatile
  1195                           
  1196                           ; BSR set to: 15
  1197                           ;main.c: 116: PORTBbits.RB2 = 1;
  1198  0019AE  8481               	bsf	3969,2,c	;volatile
  1199                           
  1200                           ; BSR set to: 15
  1201                           ;main.c: 117: TRISBbits.TRISB2 = 1;
  1202  0019B0  8493               	bsf	3987,2,c	;volatile
  1203                           
  1204                           ; BSR set to: 15
  1205                           ;main.c: 118: PORTCbits.RC4 = 1;
  1206  0019B2  8882               	bsf	3970,4,c	;volatile
  1207                           
  1208                           ; BSR set to: 15
  1209                           ;main.c: 119: TRISCbits.TRISC4 = 0;
  1210  0019B4  9894               	bcf	3988,4,c	;volatile
  1211                           
  1212                           ; BSR set to: 15
  1213                           ;main.c: 120: PORTBbits.RB4 = 1;
  1214  0019B6  8881               	bsf	3969,4,c	;volatile
  1215                           
  1216                           ; BSR set to: 15
  1217                           ;main.c: 121: TRISBbits.TRISB4 = 1;
  1218  0019B8  8893               	bsf	3987,4,c	;volatile
  1219                           
  1220                           ; BSR set to: 15
  1221                           ;main.c: 122: PORTBbits.RB5 = 1;
  1222  0019BA  8A81               	bsf	3969,5,c	;volatile
  1223                           
  1224                           ; BSR set to: 15
  1225                           ;main.c: 123: TRISBbits.TRISB5 = 1;
  1226  0019BC  8A93               	bsf	3987,5,c	;volatile
  1227                           
  1228                           ; BSR set to: 15
  1229                           ;main.c: 124: LATBbits.LATB6 = 1;
  1230  0019BE  8C8A               	bsf	3978,6,c	;volatile
  1231                           
  1232                           ; BSR set to: 15
  1233                           ;main.c: 125: TRISBbits.TRISB6 = 0;
  1234  0019C0  9C93               	bcf	3987,6,c	;volatile
  1235                           
  1236                           ; BSR set to: 15
  1237                           ;main.c: 126: PORTBbits.RB7 = 1;
  1238  0019C2  8E81               	bsf	3969,7,c	;volatile
  1239                           
  1240                           ; BSR set to: 15
  1241                           ;main.c: 127: TRISBbits.TRISB7 = 1;
  1242  0019C4  8E93               	bsf	3987,7,c	;volatile
  1243                           
  1244                           ; BSR set to: 15
  1245                           ;main.c: 129: PORTAbits.RA1 = 0;
  1246  0019C6  9280               	bcf	3968,1,c	;volatile
  1247                           
  1248                           ; BSR set to: 15
  1249                           ;main.c: 130: TRISAbits.TRISA1 = 0;
  1250  0019C8  9292               	bcf	3986,1,c	;volatile
  1251                           
  1252                           ;main.c: 137: T0CON = 0x87;
  1253  0019CA  0E87               	movlw	135
  1254  0019CC  6ED5               	movwf	4053,c	;volatile
  1255                           
  1256                           ;main.c: 138: TMR0H = ((65535-780)/256);
  1257  0019CE  0EFC               	movlw	252
  1258  0019D0  6ED7               	movwf	4055,c	;volatile
  1259                           
  1260                           ;main.c: 139: TMR0L = ((65535-780)%256);
  1261  0019D2  0EF3               	movlw	243
  1262  0019D4  6ED6               	movwf	4054,c	;volatile
  1263                           
  1264                           ; BSR set to: 15
  1265                           ;main.c: 140: TMR0IF = 0;
  1266  0019D6  94F2               	bcf	intcon,2,c	;volatile
  1267                           
  1268                           ;main.c: 161: md_state = IDLE;
  1269  0019D8  0E00               	movlw	0
  1270  0019DA  0100               	movlb	0	; () banked
  1271  0019DC  6FFB               	movwf	_md_state& (0+255),b
  1272                           
  1273                           ; BSR set to: 0
  1274  0019DE  0012               	return		;funcret
  1275  0019E0                     __end_of_init_pic:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           intcon	equ	0xFF2
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1l	equ	0xFE1
  1286                           
  1287 ;; *************** function _check_modem_state *****************
  1288 ;; Defined at:
  1289 ;;		line 25 in file "modem.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    6
  1310 ;; This function calls:
  1311 ;;		_close_socket_ok
  1312 ;;		_send_md_cfg_cmds_ok
  1313 ;;		_send_over_socket_ok
  1314 ;;		_setup_data_ok
  1315 ;;		_start_modem_send_process
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text2
  1322  00188A                     __ptext2:
  1323                           	opt stack 0
  1324  00188A                     _check_modem_state:
  1325                           	opt stack 24
  1326                           
  1327                           ;modem.c: 27: switch (md_state)
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;incstack = 0
  1331  00188A  D02C               	goto	l345
  1332  00188C                     
  1333                           ;modem.c: 32: if (bootTimerIsDone)
  1334  00188C  0100               	movlb	0	; () banked
  1335  00188E  51FA               	movf	_bootTimerIsDone& (0+255),w,b
  1336  001890  B4D8               	btfsc	status,2,c
  1337  001892  0012               	return	
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;modem.c: 33: md_state = CONFIG;
  1341  001894  0E02               	movlw	2
  1342  001896  6FFB               	movwf	_md_state& (0+255),b
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;modem.c: 34: break;
  1346  001898  0012               	return	
  1347  00189A                     
  1348                           ; BSR set to: 0
  1349                           ;modem.c: 36: if (!send_md_cfg_cmds_ok())
  1350                           
  1351                           ; BSR set to: 0
  1352  00189A  EC5E  F009         	call	_send_md_cfg_cmds_ok	;wreg free
  1353  00189E  0900               	iorlw	0
  1354  0018A0  A4D8               	btfss	status,2,c
  1355  0018A2  0012               	return	
  1356                           
  1357                           ;modem.c: 37: {
  1358                           ;modem.c: 38: start_modem_send_process();
  1359  0018A4  ECF0  F00C         	call	_start_modem_send_process	;wreg free
  1360                           
  1361                           ;modem.c: 39: md_state = WAITING_FOR_BOOT;
  1362  0018A8  0E01               	movlw	1
  1363  0018AA  0100               	movlb	0	; () banked
  1364  0018AC  6FFB               	movwf	_md_state& (0+255),b
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;modem.c: 40: }
  1368                           ;modem.c: 41: break;
  1369  0018AE  0012               	return	
  1370  0018B0                     
  1371                           ; BSR set to: 0
  1372                           ;modem.c: 43: setup_data_ok();
  1373                           
  1374                           ; BSR set to: 0
  1375  0018B0  ECFC  F00B         	call	_setup_data_ok	;wreg free
  1376                           
  1377                           ;modem.c: 44: md_state = SENDING_DATA;
  1378  0018B4  0E05               	movlw	5
  1379  0018B6  0100               	movlb	0	; () banked
  1380  0018B8  6FFB               	movwf	_md_state& (0+255),b
  1381                           
  1382                           ;modem.c: 45: break;
  1383  0018BA  0012               	return	
  1384  0018BC                     
  1385                           ; BSR set to: 0
  1386                           ;modem.c: 47: if (pdpIsActive)
  1387                           
  1388                           ; BSR set to: 0
  1389  0018BC  51F9               	movf	_pdpIsActive& (0+255),w,b
  1390  0018BE  B4D8               	btfsc	status,2,c
  1391  0018C0  0012               	return	
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;modem.c: 48: md_state = SENDING_DATA;
  1395  0018C2  0E05               	movlw	5
  1396  0018C4  6FFB               	movwf	_md_state& (0+255),b
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;modem.c: 49: break;
  1400  0018C6  0012               	return	
  1401  0018C8                     
  1402                           ; BSR set to: 0
  1403                           ;modem.c: 58: send_over_socket_ok();
  1404                           
  1405                           ; BSR set to: 0
  1406  0018C8  EC63  F00A         	call	_send_over_socket_ok	;wreg free
  1407  0018CC  EC87  F00C         	call	_close_socket_ok	;wreg free
  1408  0018D0  0900               	iorlw	0
  1409  0018D2  B4D8               	btfsc	status,2,c
  1410  0018D4  D7FB               	goto	l357
  1411                           
  1412                           ;modem.c: 60: pdpIsActive = 0;
  1413  0018D6  0E00               	movlw	0
  1414  0018D8  0100               	movlb	0	; () banked
  1415  0018DA  6FF9               	movwf	_pdpIsActive& (0+255),b
  1416                           
  1417                           ;modem.c: 61: md_state = IDLE;
  1418  0018DC  0E00               	movlw	0
  1419  0018DE  6FFB               	movwf	_md_state& (0+255),b
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;modem.c: 62: PORTAbits.RA3 = 0;
  1423  0018E0  9680               	bcf	3968,3,c	;volatile
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;modem.c: 69: }
  1427                           
  1428                           ;modem.c: 63: break;
  1429  0018E2  0012               	return	
  1430  0018E4                     l345:
  1431                           
  1432                           ; BSR set to: 0
  1433  0018E4  0100               	movlb	0	; () banked
  1434  0018E6  51FB               	movf	_md_state& (0+255),w,b
  1435                           
  1436                           ; Switch size 1, requested type "space"
  1437                           ; Number of cases is 6, Range of values is 0 to 5
  1438                           ; switch strategies available:
  1439                           ; Name         Instructions Cycles
  1440                           ; simple_byte           19    10 (average)
  1441                           ;	Chosen strategy is simple_byte
  1442  0018E8  0A00               	xorlw	0	; case 0
  1443  0018EA  B4D8               	btfsc	status,2,c
  1444  0018EC  0012               	return	
  1445  0018EE  0A01               	xorlw	1	; case 1
  1446  0018F0  B4D8               	btfsc	status,2,c
  1447  0018F2  D7CC               	goto	l348
  1448  0018F4  0A03               	xorlw	3	; case 2
  1449  0018F6  B4D8               	btfsc	status,2,c
  1450  0018F8  D7D0               	goto	l350
  1451  0018FA  0A01               	xorlw	1	; case 3
  1452  0018FC  B4D8               	btfsc	status,2,c
  1453  0018FE  D7D8               	goto	l352
  1454  001900  0A07               	xorlw	7	; case 4
  1455  001902  B4D8               	btfsc	status,2,c
  1456  001904  D7DB               	goto	l353
  1457  001906  0A01               	xorlw	1	; case 5
  1458  001908  A4D8               	btfss	status,2,c
  1459  00190A  0012               	return	
  1460  00190C  D7DD               	goto	l355
  1461  00190E                     __end_of_check_modem_state:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           intcon	equ	0xFF2
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           postdec1	equ	0xFE5
  1471                           fsr1l	equ	0xFE1
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function _start_modem_send_process *****************
  1475 ;; Defined at:
  1476 ;;		line 8 in file "modem.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    5
  1497 ;; This function calls:
  1498 ;;		_start_md_boot_timer
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;;		_check_modem_state
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text3
  1506  0019E0                     __ptext3:
  1507                           	opt stack 0
  1508  0019E0                     _start_modem_send_process:
  1509                           	opt stack 25
  1510                           
  1511                           ;modem.c: 10: if (md_state != IDLE)
  1512                           
  1513                           ;incstack = 0
  1514  0019E0  0100               	movlb	0	; () banked
  1515  0019E2  51FB               	movf	_md_state& (0+255),w,b
  1516  0019E4  B4D8               	btfsc	status,2,c
  1517  0019E6  D00C               	goto	l338
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;modem.c: 11: {
  1521                           ;modem.c: 12: PORTAbits.RA3 = 0;
  1522  0019E8  9680               	bcf	3968,3,c	;volatile
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;modem.c: 13: _delay((unsigned long)((5000)*(8000000/4000.0)));
  1526  0019EA  0E33               	movlw	51
  1527  0019EC  6E17               	movwf	(??_start_modem_send_process+1)& (0+255),c
  1528  0019EE  0EBB               	movlw	187
  1529  0019F0  6E16               	movwf	??_start_modem_send_process& (0+255),c
  1530  0019F2  0EE0               	movlw	224
  1531  0019F4                     u2067:
  1532  0019F4  2EE8               	decfsz	wreg,f,c
  1533  0019F6  D7FE               	bra	u2067
  1534  0019F8  2E16               	decfsz	??_start_modem_send_process& (0+255),f,c
  1535  0019FA  D7FC               	bra	u2067
  1536  0019FC  2E17               	decfsz	(??_start_modem_send_process+1)& (0+255),f,c
  1537  0019FE  D7FA               	bra	u2067
  1538  001A00                     l338:
  1539                           
  1540                           ;modem.c: 14: }
  1541                           ;modem.c: 15: PORTAbits.RA3 = 1;
  1542  001A00  8680               	bsf	3968,3,c	;volatile
  1543                           
  1544                           ;modem.c: 16: start_md_boot_timer();
  1545  001A02  EC74  F00D         	call	_start_md_boot_timer	;wreg free
  1546                           
  1547                           ;modem.c: 17: md_state = WAITING_FOR_BOOT;
  1548  001A06  0E01               	movlw	1
  1549  001A08  0100               	movlb	0	; () banked
  1550  001A0A  6FFB               	movwf	_md_state& (0+255),b
  1551                           
  1552                           ; BSR set to: 0
  1553  001A0C  0012               	return		;funcret
  1554  001A0E                     __end_of_start_modem_send_process:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           intcon	equ	0xFF2
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           postdec1	equ	0xFE5
  1564                           fsr1l	equ	0xFE1
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _start_md_boot_timer *****************
  1568 ;; Defined at:
  1569 ;;		line 20 in file "modem.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    4
  1590 ;; This function calls:
  1591 ;;		_reload_tmr5_pt25s
  1592 ;; This function is called by:
  1593 ;;		_start_modem_send_process
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text4
  1598  001AE8                     __ptext4:
  1599                           	opt stack 0
  1600  001AE8                     _start_md_boot_timer:
  1601                           	opt stack 25
  1602                           
  1603                           ;modem.c: 22: reload_tmr5_pt25s();
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;incstack = 0
  1607  001AE8  EC2A  F00D         	call	_reload_tmr5_pt25s	;wreg free
  1608  001AEC  0012               	return		;funcret
  1609  001AEE                     __end_of_start_md_boot_timer:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           intcon	equ	0xFF2
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           fsr1l	equ	0xFE1
  1620                           status	equ	0xFD8
  1621                           
  1622 ;; *************** function _setup_data_ok *****************
  1623 ;; Defined at:
  1624 ;;		line 114 in file "modem.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  setApn         47    0[BANK0 ] unsigned char [47]
  1629 ;;  cfgSocket      25   47[BANK0 ] unsigned char [25]
  1630 ;;  activatePDP    15   72[BANK0 ] unsigned char [15]
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      unsigned char 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:       87 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    5
  1647 ;; This function calls:
  1648 ;;		_init_md_uart
  1649 ;;		_md_uart_write_str_ok
  1650 ;;		_terminate_md_uart
  1651 ;; This function is called by:
  1652 ;;		_check_modem_state
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text5
  1657  0017F8                     __ptext5:
  1658                           	opt stack 0
  1659  0017F8                     _setup_data_ok:
  1660                           	opt stack 24
  1661                           
  1662                           ;modem.c: 116: uint8_t setApn[] = "AT+CGDCONT=3,\"IPV4V6\",\"wyleslte.gw7.vzwentp\"\r\n"
      +                          ;
  1663                           
  1664                           ;incstack = 0
  1665  0017F8  EE21  F000         	lfsr	2,setup_data_ok@F6849
  1666  0017FC  EE10  F060         	lfsr	1,setup_data_ok@setApn
  1667  001800  0E2E               	movlw	46
  1668  001802                     u1901:
  1669  001802  CFDB FFE3          	movff	plusw2,plusw1
  1670  001806  06E8               	decf	wreg,f,c
  1671  001808  E2FC               	bc	u1901
  1672                           
  1673                           ;modem.c: 117: uint8_t cfgSocket[] = "AT#SCFGEXT=1,1,0,0,0,0\r\n";
  1674  00180A  EE21  F02F         	lfsr	2,setup_data_ok@F6851
  1675  00180E  EE10  F08F         	lfsr	1,setup_data_ok@cfgSocket
  1676  001812  0E18               	movlw	24
  1677  001814                     u1911:
  1678  001814  CFDB FFE3          	movff	plusw2,plusw1
  1679  001818  06E8               	decf	wreg,f,c
  1680  00181A  E2FC               	bc	u1911
  1681                           
  1682                           ;modem.c: 118: uint8_t activatePDP[] = "AT#SGACT=3,1\r\n";
  1683  00181C  EE21  F068         	lfsr	2,setup_data_ok@F6853
  1684  001820  EE10  F0A8         	lfsr	1,setup_data_ok@activatePDP
  1685  001824  0E0E               	movlw	14
  1686  001826                     u1921:
  1687  001826  CFDB FFE3          	movff	plusw2,plusw1
  1688  00182A  06E8               	decf	wreg,f,c
  1689  00182C  E2FC               	bc	u1921
  1690                           
  1691                           ;modem.c: 120: init_md_uart();
  1692  00182E  EC07  F00D         	call	_init_md_uart	;wreg free
  1693                           
  1694                           ;modem.c: 123: md_uart_write_str_ok((uint8_t *)&setApn[0], sizeof(setApn), 1, 0);
  1695  001832  0E60               	movlw	low setup_data_ok@setApn
  1696  001834  6E17               	movwf	md_uart_write_str_ok@data,c
  1697  001836  0E00               	movlw	high setup_data_ok@setApn
  1698  001838  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1699  00183A  0E2F               	movlw	47
  1700  00183C  6E19               	movwf	md_uart_write_str_ok@len1,c
  1701  00183E  0E01               	movlw	1
  1702  001840  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1703  001842  0E00               	movlw	0
  1704  001844  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1705  001846  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1706                           
  1707                           ;modem.c: 124: md_uart_write_str_ok((uint8_t *)&cfgSocket[0], sizeof(cfgSocket), 1, 0);
  1708  00184A  0E8F               	movlw	low setup_data_ok@cfgSocket
  1709  00184C  6E17               	movwf	md_uart_write_str_ok@data,c
  1710  00184E  0E00               	movlw	high setup_data_ok@cfgSocket
  1711  001850  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1712  001852  0E19               	movlw	25
  1713  001854  6E19               	movwf	md_uart_write_str_ok@len1,c
  1714  001856  0E01               	movlw	1
  1715  001858  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1716  00185A  0E00               	movlw	0
  1717  00185C  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1718  00185E  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1719                           
  1720                           ;modem.c: 125: pdpIsActive = md_uart_write_str_ok((uint8_t *)&activatePDP[0], sizeof(act
      +                          ivatePDP), 1, 0);
  1721  001862  0EA8               	movlw	low setup_data_ok@activatePDP
  1722  001864  6E17               	movwf	md_uart_write_str_ok@data,c
  1723  001866  0E00               	movlw	high setup_data_ok@activatePDP
  1724  001868  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1725  00186A  0E0F               	movlw	15
  1726  00186C  6E19               	movwf	md_uart_write_str_ok@len1,c
  1727  00186E  0E01               	movlw	1
  1728  001870  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1729  001872  0E00               	movlw	0
  1730  001874  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1731  001876  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1732  00187A  0100               	movlb	0	; () banked
  1733  00187C  6FF9               	movwf	_pdpIsActive& (0+255),b
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;modem.c: 126: terminate_md_uart();
  1737  00187E  EC6B  F00D         	call	_terminate_md_uart	;wreg free
  1738                           
  1739                           ;modem.c: 127: pdpIsActive = 1;
  1740  001882  0E01               	movlw	1
  1741  001884  0100               	movlb	0	; () banked
  1742  001886  6FF9               	movwf	_pdpIsActive& (0+255),b
  1743  001888  0012               	return	
  1744  00188A                     __end_of_setup_data_ok:
  1745                           	opt stack 0
  1746                           tblptru	equ	0xFF8
  1747                           tblptrh	equ	0xFF7
  1748                           tblptrl	equ	0xFF6
  1749                           tablat	equ	0xFF5
  1750                           intcon	equ	0xFF2
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           postdec1	equ	0xFE5
  1754                           plusw1	equ	0xFE3
  1755                           fsr1l	equ	0xFE1
  1756                           plusw2	equ	0xFDB
  1757                           status	equ	0xFD8
  1758                           
  1759 ;; *************** function _send_over_socket_ok *****************
  1760 ;; Defined at:
  1761 ;;		line 133 in file "modem.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  openConnecti   44    0[BANK0 ] const unsigned char [44]
  1766 ;;  srecv          16   44[BANK0 ] const unsigned char [16]
  1767 ;;  ssend          13   60[BANK0 ] const unsigned char [13]
  1768 ;;  msg             8   73[BANK0 ] const unsigned char [8]
  1769 ;;  terminateDat    1   81[BANK0 ] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      unsigned char 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Totals:         2      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;Total ram usage:       84 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    5
  1786 ;; This function calls:
  1787 ;;		_init_md_uart
  1788 ;;		_md_uart_write_str_ok
  1789 ;;		_terminate_md_uart
  1790 ;; This function is called by:
  1791 ;;		_check_modem_state
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text6
  1796  0014C6                     __ptext6:
  1797                           	opt stack 0
  1798  0014C6                     _send_over_socket_ok:
  1799                           	opt stack 24
  1800                           
  1801                           ;modem.c: 135: const uint8_t openConnection[] = "AT#SD=1,0,10510,\"modules.telit.com\",0
      +                          ,0,1\r\n";
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;incstack = 0
  1805  0014C6  0E01               	movlw	low send_over_socket_ok@F6858
  1806  0014C8  6EF6               	movwf	tblptrl,c
  1807  0014CA                     	if	1	;There is more than 1 active tblptr byte
  1808  0014CA  0E10               	movlw	high send_over_socket_ok@F6858
  1809  0014CC  6EF7               	movwf	tblptrh,c
  1810  0014CE                     	endif
  1811  0014CE                     	if	0	;There are less than 3 active tblptr bytes
  1812  0014CE                     	endif
  1813  0014CE  EE20  F060         	lfsr	2,send_over_socket_ok@openConnection
  1814  0014D2  0E2B               	movlw	43
  1815  0014D4                     u1930:
  1816  0014D4  0009               	tblrd		*+
  1817  0014D6  CFF5 FFDE          	movff	tablat,postinc2
  1818  0014DA  06E8               	decf	wreg,f,c
  1819  0014DC  E2FB               	bc	u1930
  1820                           
  1821                           ;modem.c: 136: const uint8_t ssend[] = "AT#SSEND=1\r\n";
  1822  0014DE  0E4C               	movlw	low send_over_socket_ok@F6860
  1823  0014E0  6EF6               	movwf	tblptrl,c
  1824  0014E2                     	if	1	;There is more than 1 active tblptr byte
  1825  0014E2  0E10               	movlw	high send_over_socket_ok@F6860
  1826  0014E4  6EF7               	movwf	tblptrh,c
  1827  0014E6                     	endif
  1828  0014E6                     	if	0	;There are less than 3 active tblptr bytes
  1829  0014E6                     	endif
  1830  0014E6  EE20  F09C         	lfsr	2,send_over_socket_ok@ssend
  1831  0014EA  0E0C               	movlw	12
  1832  0014EC                     u1940:
  1833  0014EC  0009               	tblrd		*+
  1834  0014EE  CFF5 FFDE          	movff	tablat,postinc2
  1835  0014F2  06E8               	decf	wreg,f,c
  1836  0014F4  E2FB               	bc	u1940
  1837                           
  1838                           ;modem.c: 137: const uint8_t srecv[]="AT#SRECV=1,89\r\n";
  1839  0014F6  0E2D               	movlw	low send_over_socket_ok@F6862
  1840  0014F8  6EF6               	movwf	tblptrl,c
  1841  0014FA                     	if	1	;There is more than 1 active tblptr byte
  1842  0014FA  0E10               	movlw	high send_over_socket_ok@F6862
  1843  0014FC  6EF7               	movwf	tblptrh,c
  1844  0014FE                     	endif
  1845  0014FE                     	if	0	;There are less than 3 active tblptr bytes
  1846  0014FE                     	endif
  1847  0014FE  EE20  F08C         	lfsr	2,send_over_socket_ok@srecv
  1848  001502  0E0F               	movlw	15
  1849  001504                     u1950:
  1850  001504  0009               	tblrd		*+
  1851  001506  CFF5 FFDE          	movff	tablat,postinc2
  1852  00150A  06E8               	decf	wreg,f,c
  1853  00150C  E2FB               	bc	u1950
  1854                           
  1855                           ;modem.c: 138: const uint8_t msg[] = "Echo.\r\n";
  1856  00150E  0E63               	movlw	low send_over_socket_ok@F6864
  1857  001510  6EF6               	movwf	tblptrl,c
  1858  001512                     	if	1	;There is more than 1 active tblptr byte
  1859  001512  0E10               	movlw	high send_over_socket_ok@F6864
  1860  001514  6EF7               	movwf	tblptrh,c
  1861  001516                     	endif
  1862  001516                     	if	0	;There are less than 3 active tblptr bytes
  1863  001516                     	endif
  1864  001516  EE20  F0A9         	lfsr	2,send_over_socket_ok@msg
  1865  00151A  0E07               	movlw	7
  1866  00151C                     u1960:
  1867  00151C  0009               	tblrd		*+
  1868  00151E  CFF5 FFDE          	movff	tablat,postinc2
  1869  001522  06E8               	decf	wreg,f,c
  1870  001524  E2FB               	bc	u1960
  1871                           
  1872                           ;modem.c: 140: uint8_t terminateData = 26;
  1873  001526  0E1A               	movlw	26
  1874  001528  0100               	movlb	0	; () banked
  1875  00152A  6FB1               	movwf	send_over_socket_ok@terminateData& (0+255),b
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;modem.c: 141: init_md_uart();
  1879  00152C  EC07  F00D         	call	_init_md_uart	;wreg free
  1880                           
  1881                           ;modem.c: 143: md_uart_write_str_ok((uint8_t *)&openConnection[0], sizeof(openConnection
      +                          ), 1, 0);
  1882  001530  0E60               	movlw	low send_over_socket_ok@openConnection
  1883  001532  6E17               	movwf	md_uart_write_str_ok@data,c
  1884  001534  0E00               	movlw	high send_over_socket_ok@openConnection
  1885  001536  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1886  001538  0E2C               	movlw	44
  1887  00153A  6E19               	movwf	md_uart_write_str_ok@len1,c
  1888  00153C  0E01               	movlw	1
  1889  00153E  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1890  001540  0E00               	movlw	0
  1891  001542  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1892  001544  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1893                           
  1894                           ;modem.c: 146: md_uart_write_str_ok((uint8_t *)&ssend[0], sizeof(ssend), 0, 1);
  1895  001548  0E9C               	movlw	low send_over_socket_ok@ssend
  1896  00154A  6E17               	movwf	md_uart_write_str_ok@data,c
  1897  00154C  0E00               	movlw	high send_over_socket_ok@ssend
  1898  00154E  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1899  001550  0E0D               	movlw	13
  1900  001552  6E19               	movwf	md_uart_write_str_ok@len1,c
  1901  001554  0E00               	movlw	0
  1902  001556  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1903  001558  0E01               	movlw	1
  1904  00155A  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1905  00155C  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1906                           
  1907                           ;modem.c: 148: md_uart_write_str_ok((uint8_t *)&msg[0], sizeof(msg), 0, 0);
  1908  001560  0EA9               	movlw	low send_over_socket_ok@msg
  1909  001562  6E17               	movwf	md_uart_write_str_ok@data,c
  1910  001564  0E00               	movlw	high send_over_socket_ok@msg
  1911  001566  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1912  001568  0E08               	movlw	8
  1913  00156A  6E19               	movwf	md_uart_write_str_ok@len1,c
  1914  00156C  0E00               	movlw	0
  1915  00156E  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1916  001570  0E00               	movlw	0
  1917  001572  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1918  001574  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1919                           
  1920                           ;modem.c: 150: md_uart_write_str_ok((uint8_t *)&terminateData, 1, 1, 0);
  1921  001578  0EB1               	movlw	low send_over_socket_ok@terminateData
  1922  00157A  6E17               	movwf	md_uart_write_str_ok@data,c
  1923  00157C  0E00               	movlw	high send_over_socket_ok@terminateData
  1924  00157E  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1925  001580  0E01               	movlw	1
  1926  001582  6E19               	movwf	md_uart_write_str_ok@len1,c
  1927  001584  0E01               	movlw	1
  1928  001586  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1929  001588  0E00               	movlw	0
  1930  00158A  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1931  00158C  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1932                           
  1933                           ;modem.c: 151: CREN1 = 1;
  1934  001590  88AB               	bsf	4011,4,c	;volatile
  1935                           
  1936                           ;modem.c: 152: _delay((unsigned long)((2000)*(8000000/4000.0)));
  1937  001592  0E15               	movlw	21
  1938  001594  6E23               	movwf	(??_send_over_socket_ok+1)& (0+255),c
  1939  001596  0E4B               	movlw	75
  1940  001598  6E22               	movwf	??_send_over_socket_ok& (0+255),c
  1941  00159A  0EBE               	movlw	190
  1942  00159C                     u2077:
  1943  00159C  2EE8               	decfsz	wreg,f,c
  1944  00159E  D7FE               	bra	u2077
  1945  0015A0  2E22               	decfsz	??_send_over_socket_ok& (0+255),f,c
  1946  0015A2  D7FC               	bra	u2077
  1947  0015A4  2E23               	decfsz	(??_send_over_socket_ok+1)& (0+255),f,c
  1948  0015A6  D7FA               	bra	u2077
  1949  0015A8  D000               	nop2	
  1950                           
  1951                           ;modem.c: 153: CREN1 = 0;
  1952  0015AA  98AB               	bcf	4011,4,c	;volatile
  1953                           
  1954                           ;modem.c: 154: md_uart_write_str_ok((uint8_t *)&srecv[0], sizeof(srecv), 1, 0);
  1955  0015AC  0E8C               	movlw	low send_over_socket_ok@srecv
  1956  0015AE  6E17               	movwf	md_uart_write_str_ok@data,c
  1957  0015B0  0E00               	movlw	high send_over_socket_ok@srecv
  1958  0015B2  6E18               	movwf	md_uart_write_str_ok@data+1,c
  1959  0015B4  0E10               	movlw	16
  1960  0015B6  6E19               	movwf	md_uart_write_str_ok@len1,c
  1961  0015B8  0E01               	movlw	1
  1962  0015BA  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  1963  0015BC  0E00               	movlw	0
  1964  0015BE  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  1965  0015C0  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  1966                           
  1967                           ;modem.c: 155: terminate_md_uart();
  1968  0015C4  EC6B  F00D         	call	_terminate_md_uart	;wreg free
  1969  0015C8  0012               	return	
  1970  0015CA                     __end_of_send_over_socket_ok:
  1971                           	opt stack 0
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           intcon	equ	0xFF2
  1977                           postinc0	equ	0xFEE
  1978                           wreg	equ	0xFE8
  1979                           postdec1	equ	0xFE5
  1980                           plusw1	equ	0xFE3
  1981                           fsr1l	equ	0xFE1
  1982                           postinc2	equ	0xFDE
  1983                           plusw2	equ	0xFDB
  1984                           status	equ	0xFD8
  1985                           
  1986 ;; *************** function _send_md_cfg_cmds_ok *****************
  1987 ;; Defined at:
  1988 ;;		line 73 in file "modem.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  ledCfg         16   16[BANK0 ] unsigned char [16]
  1993 ;;  baud           16    0[BANK0 ] unsigned char [16]
  1994 ;;  cereg          12   56[BANK0 ] unsigned char [12]
  1995 ;;  ledpattern     12   44[BANK0 ] unsigned char [12]
  1996 ;;  cmee           12   32[BANK0 ] unsigned char [12]
  1997 ;;  gprs           11   90[BANK0 ] unsigned char [11]
  1998 ;;  creg           11   79[BANK0 ] unsigned char [11]
  1999 ;;  cpin           11   68[BANK0 ] unsigned char [11]
  2000 ;;  queryVersion   10  101[BANK0 ] unsigned char [10]
  2001 ;;  csq             9  111[BANK0 ] unsigned char [9]
  2002 ;;  ate             7  120[BANK0 ] unsigned char [7]
  2003 ;;  at              5  127[BANK0 ] unsigned char [5]
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      unsigned char 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Locals:         0     132       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Totals:         0     132       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;Total ram usage:      132 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    5
  2020 ;; This function calls:
  2021 ;;		_init_md_uart
  2022 ;;		_md_uart_write_str_ok
  2023 ;;		_terminate_md_uart
  2024 ;; This function is called by:
  2025 ;;		_check_modem_state
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text7
  2030  0012BC                     __ptext7:
  2031                           	opt stack 0
  2032  0012BC                     _send_md_cfg_cmds_ok:
  2033                           	opt stack 24
  2034                           
  2035                           ;modem.c: 75: uint8_t at[] = "AT\r\n";
  2036                           
  2037                           ;incstack = 0
  2038  0012BC  EE20  F0F4         	lfsr	2,send_md_cfg_cmds_ok@F6813
  2039  0012C0  EE10  F0DF         	lfsr	1,send_md_cfg_cmds_ok@at
  2040  0012C4  0E04               	movlw	4
  2041  0012C6                     u1781:
  2042  0012C6  CFDB FFE3          	movff	plusw2,plusw1
  2043  0012CA  06E8               	decf	wreg,f,c
  2044  0012CC  E2FC               	bc	u1781
  2045                           
  2046                           ;modem.c: 76: uint8_t ate[] = "ATE1\r\n";
  2047  0012CE  EE20  F0ED         	lfsr	2,send_md_cfg_cmds_ok@F6815
  2048  0012D2  EE10  F0D8         	lfsr	1,send_md_cfg_cmds_ok@ate
  2049  0012D6  0E06               	movlw	6
  2050  0012D8                     u1791:
  2051  0012D8  CFDB FFE3          	movff	plusw2,plusw1
  2052  0012DC  06E8               	decf	wreg,f,c
  2053  0012DE  E2FC               	bc	u1791
  2054                           
  2055                           ;modem.c: 77: uint8_t cmee[] = "AT+CMEE=2\r\n";
  2056  0012E0  EE21  F08F         	lfsr	2,send_md_cfg_cmds_ok@F6817
  2057  0012E4  EE10  F080         	lfsr	1,send_md_cfg_cmds_ok@cmee
  2058  0012E8  0E0B               	movlw	11
  2059  0012EA                     u1801:
  2060  0012EA  CFDB FFE3          	movff	plusw2,plusw1
  2061  0012EE  06E8               	decf	wreg,f,c
  2062  0012F0  E2FC               	bc	u1801
  2063                           
  2064                           ;modem.c: 78: uint8_t baud[] = "AT+IPR=115200\r\n";
  2065  0012F2  EE21  F058         	lfsr	2,send_md_cfg_cmds_ok@F6819
  2066  0012F6  EE10  F060         	lfsr	1,send_md_cfg_cmds_ok@baud
  2067  0012FA  0E0F               	movlw	15
  2068  0012FC                     u1811:
  2069  0012FC  CFDB FFE3          	movff	plusw2,plusw1
  2070  001300  06E8               	decf	wreg,f,c
  2071  001302  E2FC               	bc	u1811
  2072                           
  2073                           ;modem.c: 79: uint8_t ledCfg[] = "AT#GPIO=7,0,2\r\n";
  2074  001304  EE21  F048         	lfsr	2,send_md_cfg_cmds_ok@F6821
  2075  001308  EE10  F070         	lfsr	1,send_md_cfg_cmds_ok@ledCfg
  2076  00130C  0E0F               	movlw	15
  2077  00130E                     u1821:
  2078  00130E  CFDB FFE3          	movff	plusw2,plusw1
  2079  001312  06E8               	decf	wreg,f,c
  2080  001314  E2FC               	bc	u1821
  2081                           
  2082                           ;modem.c: 80: uint8_t ledpattern[] = "AT#SLED=4\r\n";
  2083  001316  EE21  F083         	lfsr	2,send_md_cfg_cmds_ok@F6823
  2084  00131A  EE10  F08C         	lfsr	1,send_md_cfg_cmds_ok@ledpattern
  2085  00131E  0E0B               	movlw	11
  2086  001320                     u1831:
  2087  001320  CFDB FFE3          	movff	plusw2,plusw1
  2088  001324  06E8               	decf	wreg,f,c
  2089  001326  E2FC               	bc	u1831
  2090                           
  2091                           ;modem.c: 81: uint8_t queryVersion[] = "AT#CGMR\r\n";
  2092  001328  EE20  F030         	lfsr	2,send_md_cfg_cmds_ok@F6825
  2093  00132C  EE10  F0C5         	lfsr	1,send_md_cfg_cmds_ok@queryVersion
  2094  001330  0E09               	movlw	9
  2095  001332                     u1841:
  2096  001332  CFDB FFE3          	movff	plusw2,plusw1
  2097  001336  06E8               	decf	wreg,f,c
  2098  001338  E2FC               	bc	u1841
  2099                           
  2100                           ;modem.c: 82: uint8_t cpin[] = "AT+CPIN?\r\n";
  2101  00133A  EE20  F025         	lfsr	2,send_md_cfg_cmds_ok@F6827
  2102  00133E  EE10  F0A4         	lfsr	1,send_md_cfg_cmds_ok@cpin
  2103  001342  0E0A               	movlw	10
  2104  001344                     u1851:
  2105  001344  CFDB FFE3          	movff	plusw2,plusw1
  2106  001348  06E8               	decf	wreg,f,c
  2107  00134A  E2FC               	bc	u1851
  2108                           
  2109                           ;modem.c: 83: uint8_t creg[] = "AT+CREG?\r\n";
  2110  00134C  EE21  F0A6         	lfsr	2,send_md_cfg_cmds_ok@F6829
  2111  001350  EE10  F0AF         	lfsr	1,send_md_cfg_cmds_ok@creg
  2112  001354  0E0A               	movlw	10
  2113  001356                     u1861:
  2114  001356  CFDB FFE3          	movff	plusw2,plusw1
  2115  00135A  06E8               	decf	wreg,f,c
  2116  00135C  E2FC               	bc	u1861
  2117                           
  2118                           ;modem.c: 84: uint8_t cereg[] = "AT+CEREG?\r\n";
  2119  00135E  EE21  F077         	lfsr	2,send_md_cfg_cmds_ok@F6831
  2120  001362  EE10  F098         	lfsr	1,send_md_cfg_cmds_ok@cereg
  2121  001366  0E0B               	movlw	11
  2122  001368                     u1871:
  2123  001368  CFDB FFE3          	movff	plusw2,plusw1
  2124  00136C  06E8               	decf	wreg,f,c
  2125  00136E  E2FC               	bc	u1871
  2126                           
  2127                           ;modem.c: 85: uint8_t gprs[] = "AT#GPRS?\r\n";
  2128  001370  EE21  F09B         	lfsr	2,send_md_cfg_cmds_ok@F6833
  2129  001374  EE10  F0BA         	lfsr	1,send_md_cfg_cmds_ok@gprs
  2130  001378  0E0A               	movlw	10
  2131  00137A                     u1881:
  2132  00137A  CFDB FFE3          	movff	plusw2,plusw1
  2133  00137E  06E8               	decf	wreg,f,c
  2134  001380  E2FC               	bc	u1881
  2135                           
  2136                           ;modem.c: 86: uint8_t csq[] = "AT+CSQ\r\n";
  2137  001382  EE20  F0E4         	lfsr	2,send_md_cfg_cmds_ok@F6835
  2138  001386  EE10  F0CF         	lfsr	1,send_md_cfg_cmds_ok@csq
  2139  00138A  0E08               	movlw	8
  2140  00138C                     u1891:
  2141  00138C  CFDB FFE3          	movff	plusw2,plusw1
  2142  001390  06E8               	decf	wreg,f,c
  2143  001392  E2FC               	bc	u1891
  2144                           
  2145                           ;modem.c: 89: init_md_uart();
  2146  001394  EC07  F00D         	call	_init_md_uart	;wreg free
  2147                           
  2148                           ;modem.c: 92: md_uart_write_str_ok((uint8_t *)&at[0], sizeof(at), 1, 0);
  2149  001398  0EDF               	movlw	low send_md_cfg_cmds_ok@at
  2150  00139A  6E17               	movwf	md_uart_write_str_ok@data,c
  2151  00139C  0E00               	movlw	high send_md_cfg_cmds_ok@at
  2152  00139E  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2153  0013A0  0E05               	movlw	5
  2154  0013A2  6E19               	movwf	md_uart_write_str_ok@len1,c
  2155  0013A4  0E01               	movlw	1
  2156  0013A6  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2157  0013A8  0E00               	movlw	0
  2158  0013AA  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2159  0013AC  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2160                           
  2161                           ;modem.c: 93: md_uart_write_str_ok((uint8_t *)&ate[0], sizeof(ate), 1, 0);
  2162  0013B0  0ED8               	movlw	low send_md_cfg_cmds_ok@ate
  2163  0013B2  6E17               	movwf	md_uart_write_str_ok@data,c
  2164  0013B4  0E00               	movlw	high send_md_cfg_cmds_ok@ate
  2165  0013B6  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2166  0013B8  0E07               	movlw	7
  2167  0013BA  6E19               	movwf	md_uart_write_str_ok@len1,c
  2168  0013BC  0E01               	movlw	1
  2169  0013BE  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2170  0013C0  0E00               	movlw	0
  2171  0013C2  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2172  0013C4  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2173                           
  2174                           ;modem.c: 94: md_uart_write_str_ok((uint8_t *)&cmee[0], sizeof(cmee), 1, 0);
  2175  0013C8  0E80               	movlw	low send_md_cfg_cmds_ok@cmee
  2176  0013CA  6E17               	movwf	md_uart_write_str_ok@data,c
  2177  0013CC  0E00               	movlw	high send_md_cfg_cmds_ok@cmee
  2178  0013CE  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2179  0013D0  0E0C               	movlw	12
  2180  0013D2  6E19               	movwf	md_uart_write_str_ok@len1,c
  2181  0013D4  0E01               	movlw	1
  2182  0013D6  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2183  0013D8  0E00               	movlw	0
  2184  0013DA  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2185  0013DC  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2186                           
  2187                           ;modem.c: 95: md_uart_write_str_ok((uint8_t *)&baud[0], sizeof(baud), 1, 0);
  2188  0013E0  0E60               	movlw	low send_md_cfg_cmds_ok@baud
  2189  0013E2  6E17               	movwf	md_uart_write_str_ok@data,c
  2190  0013E4  0E00               	movlw	high send_md_cfg_cmds_ok@baud
  2191  0013E6  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2192  0013E8  0E10               	movlw	16
  2193  0013EA  6E19               	movwf	md_uart_write_str_ok@len1,c
  2194  0013EC  0E01               	movlw	1
  2195  0013EE  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2196  0013F0  0E00               	movlw	0
  2197  0013F2  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2198  0013F4  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2199                           
  2200                           ;modem.c: 96: md_uart_write_str_ok((uint8_t *)&ledCfg[0], sizeof(ledCfg), 1, 0);
  2201  0013F8  0E70               	movlw	low send_md_cfg_cmds_ok@ledCfg
  2202  0013FA  6E17               	movwf	md_uart_write_str_ok@data,c
  2203  0013FC  0E00               	movlw	high send_md_cfg_cmds_ok@ledCfg
  2204  0013FE  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2205  001400  0E10               	movlw	16
  2206  001402  6E19               	movwf	md_uart_write_str_ok@len1,c
  2207  001404  0E01               	movlw	1
  2208  001406  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2209  001408  0E00               	movlw	0
  2210  00140A  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2211  00140C  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2212                           
  2213                           ;modem.c: 97: md_uart_write_str_ok((uint8_t *)&ledpattern[0], sizeof(ledpattern), 1, 0);
  2214  001410  0E8C               	movlw	low send_md_cfg_cmds_ok@ledpattern
  2215  001412  6E17               	movwf	md_uart_write_str_ok@data,c
  2216  001414  0E00               	movlw	high send_md_cfg_cmds_ok@ledpattern
  2217  001416  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2218  001418  0E0C               	movlw	12
  2219  00141A  6E19               	movwf	md_uart_write_str_ok@len1,c
  2220  00141C  0E01               	movlw	1
  2221  00141E  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2222  001420  0E00               	movlw	0
  2223  001422  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2224  001424  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2225                           
  2226                           ;modem.c: 98: md_uart_write_str_ok((uint8_t *)&queryVersion[0], sizeof(queryVersion), 1,
      +                           0);
  2227  001428  0EC5               	movlw	low send_md_cfg_cmds_ok@queryVersion
  2228  00142A  6E17               	movwf	md_uart_write_str_ok@data,c
  2229  00142C  0E00               	movlw	high send_md_cfg_cmds_ok@queryVersion
  2230  00142E  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2231  001430  0E0A               	movlw	10
  2232  001432  6E19               	movwf	md_uart_write_str_ok@len1,c
  2233  001434  0E01               	movlw	1
  2234  001436  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2235  001438  0E00               	movlw	0
  2236  00143A  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2237  00143C  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2238                           
  2239                           ;modem.c: 99: md_uart_write_str_ok((uint8_t *)&cpin[0], sizeof(cpin), 1, 0);
  2240  001440  0EA4               	movlw	low send_md_cfg_cmds_ok@cpin
  2241  001442  6E17               	movwf	md_uart_write_str_ok@data,c
  2242  001444  0E00               	movlw	high send_md_cfg_cmds_ok@cpin
  2243  001446  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2244  001448  0E0B               	movlw	11
  2245  00144A  6E19               	movwf	md_uart_write_str_ok@len1,c
  2246  00144C  0E01               	movlw	1
  2247  00144E  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2248  001450  0E00               	movlw	0
  2249  001452  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2250  001454  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2251                           
  2252                           ;modem.c: 100: md_uart_write_str_ok((uint8_t *)&creg[0], sizeof(creg), 1, 0);
  2253  001458  0EAF               	movlw	low send_md_cfg_cmds_ok@creg
  2254  00145A  6E17               	movwf	md_uart_write_str_ok@data,c
  2255  00145C  0E00               	movlw	high send_md_cfg_cmds_ok@creg
  2256  00145E  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2257  001460  0E0B               	movlw	11
  2258  001462  6E19               	movwf	md_uart_write_str_ok@len1,c
  2259  001464  0E01               	movlw	1
  2260  001466  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2261  001468  0E00               	movlw	0
  2262  00146A  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2263  00146C  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2264                           
  2265                           ;modem.c: 101: md_uart_write_str_ok((uint8_t *)&cereg[0], sizeof(cereg), 1, 0);
  2266  001470  0E98               	movlw	low send_md_cfg_cmds_ok@cereg
  2267  001472  6E17               	movwf	md_uart_write_str_ok@data,c
  2268  001474  0E00               	movlw	high send_md_cfg_cmds_ok@cereg
  2269  001476  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2270  001478  0E0C               	movlw	12
  2271  00147A  6E19               	movwf	md_uart_write_str_ok@len1,c
  2272  00147C  0E01               	movlw	1
  2273  00147E  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2274  001480  0E00               	movlw	0
  2275  001482  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2276  001484  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2277                           
  2278                           ;modem.c: 102: md_uart_write_str_ok((uint8_t *)&gprs[0], sizeof(gprs), 1, 0);
  2279  001488  0EBA               	movlw	low send_md_cfg_cmds_ok@gprs
  2280  00148A  6E17               	movwf	md_uart_write_str_ok@data,c
  2281  00148C  0E00               	movlw	high send_md_cfg_cmds_ok@gprs
  2282  00148E  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2283  001490  0E0B               	movlw	11
  2284  001492  6E19               	movwf	md_uart_write_str_ok@len1,c
  2285  001494  0E01               	movlw	1
  2286  001496  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2287  001498  0E00               	movlw	0
  2288  00149A  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2289  00149C  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2290                           
  2291                           ;modem.c: 103: md_uart_write_str_ok((uint8_t *)&csq[0], sizeof(csq), 1, 0);
  2292  0014A0  0ECF               	movlw	low send_md_cfg_cmds_ok@csq
  2293  0014A2  6E17               	movwf	md_uart_write_str_ok@data,c
  2294  0014A4  0E00               	movlw	high send_md_cfg_cmds_ok@csq
  2295  0014A6  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2296  0014A8  0E09               	movlw	9
  2297  0014AA  6E19               	movwf	md_uart_write_str_ok@len1,c
  2298  0014AC  0E01               	movlw	1
  2299  0014AE  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2300  0014B0  0E00               	movlw	0
  2301  0014B2  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2302  0014B4  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2303                           
  2304                           ;modem.c: 104: terminate_md_uart();
  2305  0014B8  EC6B  F00D         	call	_terminate_md_uart	;wreg free
  2306                           
  2307                           ;modem.c: 107: md_state = SET_UP_DATA;
  2308  0014BC  0E03               	movlw	3
  2309  0014BE  0100               	movlb	0	; () banked
  2310  0014C0  6FFB               	movwf	_md_state& (0+255),b
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;modem.c: 110: return 1;
  2314  0014C2  0E01               	movlw	1
  2315  0014C4  0012               	return	
  2316  0014C6                     __end_of_send_md_cfg_cmds_ok:
  2317                           	opt stack 0
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           intcon	equ	0xFF2
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           postdec1	equ	0xFE5
  2326                           plusw1	equ	0xFE3
  2327                           fsr1l	equ	0xFE1
  2328                           postinc2	equ	0xFDE
  2329                           plusw2	equ	0xFDB
  2330                           status	equ	0xFD8
  2331                           
  2332 ;; *************** function _close_socket_ok *****************
  2333 ;; Defined at:
  2334 ;;		line 162 in file "modem.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  deactivatePD   15    0[BANK0 ] const unsigned char [15]
  2339 ;;  closeSocket    10   15[BANK0 ] const unsigned char [10]
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      unsigned char 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;Total ram usage:       25 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    5
  2356 ;; This function calls:
  2357 ;;		_init_md_uart
  2358 ;;		_md_uart_write_str_ok
  2359 ;;		_terminate_md_uart
  2360 ;; This function is called by:
  2361 ;;		_check_modem_state
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text8
  2366  00190E                     __ptext8:
  2367                           	opt stack 0
  2368  00190E                     _close_socket_ok:
  2369                           	opt stack 24
  2370                           
  2371                           ;modem.c: 164: const uint8_t closeSocket[] = "AT#SH=1\r\n";
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;incstack = 0
  2375  00190E  0E59               	movlw	low close_socket_ok@F6873
  2376  001910  6EF6               	movwf	tblptrl,c
  2377  001912                     	if	1	;There is more than 1 active tblptr byte
  2378  001912  0E10               	movlw	high close_socket_ok@F6873
  2379  001914  6EF7               	movwf	tblptrh,c
  2380  001916                     	endif
  2381  001916                     	if	0	;There are less than 3 active tblptr bytes
  2382  001916                     	endif
  2383  001916  EE20  F06F         	lfsr	2,close_socket_ok@closeSocket
  2384  00191A  0E09               	movlw	9
  2385  00191C                     u1970:
  2386  00191C  0009               	tblrd		*+
  2387  00191E  CFF5 FFDE          	movff	tablat,postinc2
  2388  001922  06E8               	decf	wreg,f,c
  2389  001924  E2FB               	bc	u1970
  2390                           
  2391                           ;modem.c: 165: const uint8_t deactivatePDP[] = "AT#SGACT=3,0\r\n";
  2392  001926  0E3D               	movlw	low close_socket_ok@F6875
  2393  001928  6EF6               	movwf	tblptrl,c
  2394  00192A                     	if	1	;There is more than 1 active tblptr byte
  2395  00192A  0E10               	movlw	high close_socket_ok@F6875
  2396  00192C  6EF7               	movwf	tblptrh,c
  2397  00192E                     	endif
  2398  00192E                     	if	0	;There are less than 3 active tblptr bytes
  2399  00192E                     	endif
  2400  00192E  EE20  F060         	lfsr	2,close_socket_ok@deactivatePDP
  2401  001932  0E0E               	movlw	14
  2402  001934                     u1980:
  2403  001934  0009               	tblrd		*+
  2404  001936  CFF5 FFDE          	movff	tablat,postinc2
  2405  00193A  06E8               	decf	wreg,f,c
  2406  00193C  E2FB               	bc	u1980
  2407                           
  2408                           ;modem.c: 167: init_md_uart();
  2409  00193E  EC07  F00D         	call	_init_md_uart	;wreg free
  2410                           
  2411                           ;modem.c: 169: md_uart_write_str_ok((uint8_t *)&closeSocket[0], sizeof(closeSocket), 1, 
      +                          0);
  2412  001942  0E6F               	movlw	low close_socket_ok@closeSocket
  2413  001944  6E17               	movwf	md_uart_write_str_ok@data,c
  2414  001946  0E00               	movlw	high close_socket_ok@closeSocket
  2415  001948  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2416  00194A  0E0A               	movlw	10
  2417  00194C  6E19               	movwf	md_uart_write_str_ok@len1,c
  2418  00194E  0E01               	movlw	1
  2419  001950  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2420  001952  0E00               	movlw	0
  2421  001954  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2422  001956  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2423                           
  2424                           ;modem.c: 170: md_uart_write_str_ok((uint8_t *)&deactivatePDP[0], sizeof(deactivatePDP),
      +                           1, 0);
  2425  00195A  0E60               	movlw	low close_socket_ok@deactivatePDP
  2426  00195C  6E17               	movwf	md_uart_write_str_ok@data,c
  2427  00195E  0E00               	movlw	high close_socket_ok@deactivatePDP
  2428  001960  6E18               	movwf	md_uart_write_str_ok@data+1,c
  2429  001962  0E0F               	movlw	15
  2430  001964  6E19               	movwf	md_uart_write_str_ok@len1,c
  2431  001966  0E01               	movlw	1
  2432  001968  6E1A               	movwf	md_uart_write_str_ok@wantOk,c
  2433  00196A  0E00               	movlw	0
  2434  00196C  6E1B               	movwf	md_uart_write_str_ok@waitToSendMoreData,c
  2435  00196E  EC39  F008         	call	_md_uart_write_str_ok	;wreg free
  2436                           
  2437                           ;modem.c: 171: terminate_md_uart();
  2438  001972  EC6B  F00D         	call	_terminate_md_uart	;wreg free
  2439                           
  2440                           ;modem.c: 172: return 1;
  2441  001976  0E01               	movlw	1
  2442  001978  0012               	return	
  2443  00197A                     __end_of_close_socket_ok:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           intcon	equ	0xFF2
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           postdec1	equ	0xFE5
  2453                           plusw1	equ	0xFE3
  2454                           fsr1l	equ	0xFE1
  2455                           postinc2	equ	0xFDE
  2456                           plusw2	equ	0xFDB
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _terminate_md_uart *****************
  2460 ;; Defined at:
  2461 ;;		line 56 in file "uart.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		None
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    3
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_send_md_cfg_cmds_ok
  2486 ;;		_setup_data_ok
  2487 ;;		_send_over_socket_ok
  2488 ;;		_close_socket_ok
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text9
  2493  001AD6                     __ptext9:
  2494                           	opt stack 0
  2495  001AD6                     _terminate_md_uart:
  2496                           	opt stack 25
  2497                           
  2498                           ;uart.c: 58: RCSTA1bits.SPEN = 0;
  2499                           
  2500                           ;incstack = 0
  2501  001AD6  9EAB               	bcf	4011,7,c	;volatile
  2502                           
  2503                           ;uart.c: 61: TRISCbits.TRISC6 = 0;
  2504  001AD8  9C94               	bcf	3988,6,c	;volatile
  2505                           
  2506                           ;uart.c: 62: PORTCbits.RC6 = 0;
  2507  001ADA  9C82               	bcf	3970,6,c	;volatile
  2508                           
  2509                           ;uart.c: 63: RC1IE = 0;
  2510  001ADC  9A9D               	bcf	3997,5,c	;volatile
  2511  001ADE  0012               	return		;funcret
  2512  001AE0                     __end_of_terminate_md_uart:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           intcon	equ	0xFF2
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           postdec1	equ	0xFE5
  2522                           plusw1	equ	0xFE3
  2523                           fsr1l	equ	0xFE1
  2524                           postinc2	equ	0xFDE
  2525                           plusw2	equ	0xFDB
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _md_uart_write_str_ok *****************
  2529 ;; Defined at:
  2530 ;;		line 68 in file "uart.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  data            2   22[COMRAM] PTR unsigned char 
  2533 ;;		 -> close_socket_ok@deactivatePDP(15), close_socket_ok@closeSocket(10), send_over_socket_ok@terminateData(1), send_o
      +ver_socket_ok@msg(8), 
  2534 ;;		 -> send_over_socket_ok@srecv(16), send_over_socket_ok@ssend(13), send_over_socket_ok@openConnection(44), setup_data
      +_ok@activatePDP(15), 
  2535 ;;		 -> setup_data_ok@cfgSocket(25), setup_data_ok@setApn(47), send_md_cfg_cmds_ok@csq(9), send_md_cfg_cmds_ok@gprs(11),
      + 
  2536 ;;		 -> send_md_cfg_cmds_ok@cereg(12), send_md_cfg_cmds_ok@creg(11), send_md_cfg_cmds_ok@cpin(11), send_md_cfg_cmds_ok@q
      +ueryVersion(10), 
  2537 ;;		 -> send_md_cfg_cmds_ok@ledpattern(12), send_md_cfg_cmds_ok@ledCfg(16), send_md_cfg_cmds_ok@baud(16), send_md_cfg_cm
      +ds_ok@cmee(12), 
  2538 ;;		 -> send_md_cfg_cmds_ok@ate(7), send_md_cfg_cmds_ok@at(5), 
  2539 ;;  len1            1   24[COMRAM] unsigned char 
  2540 ;;  wantOk          1   25[COMRAM] unsigned char 
  2541 ;;  waitToSendMo    1   26[COMRAM] unsigned char 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  pos             1   32[COMRAM] unsigned char 
  2544 ;;  currentChar     1   31[COMRAM] unsigned char 
  2545 ;;  index           1   30[COMRAM] unsigned char 
  2546 ;;  numRetries      1   29[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      unsigned char 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2556 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;Total ram usage:       11 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    4
  2563 ;; This function calls:
  2564 ;;		_disable_tmr5
  2565 ;;		_md_uart_send
  2566 ;;		_reload_tmr5_pt25s
  2567 ;; This function is called by:
  2568 ;;		_send_md_cfg_cmds_ok
  2569 ;;		_setup_data_ok
  2570 ;;		_send_over_socket_ok
  2571 ;;		_close_socket_ok
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text10
  2576  001072                     __ptext10:
  2577                           	opt stack 0
  2578  001072                     _md_uart_write_str_ok:
  2579                           	opt stack 24
  2580                           
  2581                           ;uart.c: 71: uint8_t index = 0, pos = 0, currentChar, numRetries = 15;
  2582                           
  2583                           ;incstack = 0
  2584  001072  0E00               	movlw	0
  2585  001074  6E1F               	movwf	md_uart_write_str_ok@index,c
  2586  001076  0E00               	movlw	0
  2587  001078  6E21               	movwf	md_uart_write_str_ok@pos,c
  2588  00107A  0E0F               	movlw	15
  2589  00107C  6E1E               	movwf	md_uart_write_str_ok@numRetries,c
  2590                           
  2591                           ;uart.c: 72: CREN1 = 0;
  2592  00107E  98AB               	bcf	4011,4,c	;volatile
  2593                           
  2594                           ;uart.c: 73: if (!wantOk && !waitToSendMoreData)
  2595  001080  501A               	movf	md_uart_write_str_ok@wantOk,w,c
  2596  001082  A4D8               	btfss	status,2,c
  2597  001084  D009               	goto	l243
  2598  001086  501B               	movf	md_uart_write_str_ok@waitToSendMoreData,w,c
  2599  001088  A4D8               	btfss	status,2,c
  2600  00108A  D006               	goto	l243
  2601                           
  2602                           ;uart.c: 74: {
  2603                           ;uart.c: 75: GIE = 0;
  2604  00108C  9EF2               	bcf	intcon,7,c	;volatile
  2605                           
  2606                           ;uart.c: 76: CREN1 = 1;
  2607  00108E  88AB               	bsf	4011,4,c	;volatile
  2608                           
  2609                           ;uart.c: 77: RC1IE = 1;
  2610  001090  8A9D               	bsf	3997,5,c	;volatile
  2611                           
  2612                           ;uart.c: 78: PEIE = 1;
  2613  001092  8CF2               	bsf	intcon,6,c	;volatile
  2614                           
  2615                           ;uart.c: 79: RC1IF = 0;
  2616  001094  9A9E               	bcf	3998,5,c	;volatile
  2617                           
  2618                           ;uart.c: 80: GIE = 1;
  2619  001096  8EF2               	bsf	intcon,7,c	;volatile
  2620  001098                     l243:
  2621                           
  2622                           ;uart.c: 81: }
  2623                           ;uart.c: 82: tmr5_cnt = 0;
  2624  001098  0E00               	movlw	0
  2625  00109A  6E41               	movwf	_tmr5_cnt,c
  2626                           
  2627                           ;uart.c: 83: receivedOK = 0;
  2628  00109C  0E00               	movlw	0
  2629  00109E  6E3F               	movwf	_receivedOK,c
  2630                           
  2631                           ;uart.c: 84: receivedERR = 0;
  2632  0010A0  0E00               	movlw	0
  2633  0010A2  6E3E               	movwf	_receivedERR,c
  2634                           
  2635                           ;uart.c: 85: timedOut = 0;
  2636  0010A4  0E00               	movlw	0
  2637  0010A6  6E3C               	movwf	_timedOut,c
  2638                           
  2639                           ;uart.c: 86: while (numRetries-- > 0 && !receivedOK)
  2640  0010A8  D100               	goto	l244
  2641  0010AA                     
  2642                           ;uart.c: 87: {
  2643                           ;uart.c: 88: timedOut = 0;
  2644  0010AA  0E00               	movlw	0
  2645  0010AC  6E3C               	movwf	_timedOut,c
  2646                           
  2647                           ;uart.c: 89: for (index = 0; index < len1; index++)
  2648  0010AE  0E00               	movlw	0
  2649  0010B0  6E1F               	movwf	md_uart_write_str_ok@index,c
  2650  0010B2  D01A               	goto	l246
  2651  0010B4                     
  2652                           ;uart.c: 90: {
  2653                           ;uart.c: 91: referenceBuf[index] = *data;
  2654  0010B4  C017  FFD9         	movff	md_uart_write_str_ok@data,fsr2l
  2655  0010B8  C018  FFDA         	movff	md_uart_write_str_ok@data+1,fsr2h
  2656  0010BC  501F               	movf	md_uart_write_str_ok@index,w,c
  2657  0010BE  0D01               	mullw	1
  2658  0010C0  0EB1               	movlw	low _referenceBuf
  2659  0010C2  24F3               	addwf	prodl,w,c
  2660  0010C4  6EE1               	movwf	fsr1l,c
  2661  0010C6  0E01               	movlw	high _referenceBuf
  2662  0010C8  20F4               	addwfc	prodh,w,c
  2663  0010CA  6EE2               	movwf	fsr1h,c
  2664  0010CC  CFDF FFE7          	movff	indf2,indf1
  2665                           
  2666                           ;uart.c: 92: currentChar = *data;
  2667  0010D0  C017  FFD9         	movff	md_uart_write_str_ok@data,fsr2l
  2668  0010D4  C018  FFDA         	movff	md_uart_write_str_ok@data+1,fsr2h
  2669  0010D8  50DF               	movf	indf2,w,c
  2670  0010DA  6E20               	movwf	md_uart_write_str_ok@currentChar,c
  2671                           
  2672                           ;uart.c: 93: md_uart_send(currentChar);
  2673  0010DC  5020               	movf	md_uart_write_str_ok@currentChar,w,c
  2674  0010DE  EC59  F00D         	call	_md_uart_send
  2675                           
  2676                           ;uart.c: 94: data++;
  2677  0010E2  4A17               	infsnz	md_uart_write_str_ok@data,f,c
  2678  0010E4  2A18               	incf	md_uart_write_str_ok@data+1,f,c
  2679  0010E6  2A1F               	incf	md_uart_write_str_ok@index,f,c
  2680  0010E8                     l246:
  2681  0010E8  5019               	movf	md_uart_write_str_ok@len1,w,c
  2682  0010EA  5C1F               	subwf	md_uart_write_str_ok@index,w,c
  2683  0010EC  A0D8               	btfss	status,0,c
  2684  0010EE  D7E2               	goto	l247
  2685                           
  2686                           ;uart.c: 95: }
  2687                           ;uart.c: 98: if (waitToSendMoreData)
  2688  0010F0  501B               	movf	md_uart_write_str_ok@waitToSendMoreData,w,c
  2689  0010F2  B4D8               	btfsc	status,2,c
  2690  0010F4  D00D               	goto	l255
  2691                           
  2692                           ;uart.c: 99: {
  2693                           ;uart.c: 100: CREN1 = 1;
  2694  0010F6  88AB               	bsf	4011,4,c	;volatile
  2695  0010F8  AA9E               	btfss	3998,5,c	;volatile
  2696  0010FA  D7FE               	goto	l251
  2697                           
  2698                           ;uart.c: 102: currentChar = RC1REG;
  2699  0010FC  CFAE F020          	movff	4014,md_uart_write_str_ok@currentChar	;volatile
  2700                           
  2701                           ;uart.c: 103: if (currentChar == '<')
  2702  001100  0E3C               	movlw	60
  2703  001102  1820               	xorwf	md_uart_write_str_ok@currentChar,w,c
  2704  001104  A4D8               	btfss	status,2,c
  2705  001106  D002               	goto	l253
  2706                           
  2707                           ;uart.c: 104: {
  2708                           ;uart.c: 105: return 1;
  2709  001108  0E01               	movlw	1
  2710  00110A  0012               	return	
  2711  00110C                     l253:
  2712                           
  2713                           ;uart.c: 107: else
  2714                           ;uart.c: 108: return 0;
  2715  00110C  0E00               	movlw	0
  2716  00110E  0012               	return	
  2717  001110                     l255:
  2718                           
  2719                           ;uart.c: 109: }
  2720                           ;uart.c: 110: if (wantOk)
  2721  001110  501A               	movf	md_uart_write_str_ok@wantOk,w,c
  2722  001112  B4D8               	btfsc	status,2,c
  2723  001114  D0BA               	goto	l256
  2724                           
  2725                           ;uart.c: 111: {
  2726                           ;uart.c: 112: CREN1 = 1;
  2727  001116  88AB               	bsf	4011,4,c	;volatile
  2728                           
  2729                           ;uart.c: 113: reload_tmr5_pt25s();
  2730  001118  EC2A  F00D         	call	_reload_tmr5_pt25s	;wreg free
  2731                           
  2732                           ;uart.c: 114: while ((!receivedOK || !receivedERR) && !timedOut)
  2733  00111C  D0A9               	goto	l257
  2734  00111E                     
  2735                           ;uart.c: 115: {
  2736                           ;uart.c: 116: while (!RC1IF);
  2737  00111E  AA9E               	btfss	3998,5,c	;volatile
  2738  001120  D7FE               	goto	l258
  2739                           
  2740                           ;uart.c: 117: currentChar = RC1REG;
  2741  001122  CFAE F020          	movff	4014,md_uart_write_str_ok@currentChar	;volatile
  2742                           
  2743                           ;uart.c: 118: mdRxBuf[pos] = currentChar;
  2744  001126  5021               	movf	md_uart_write_str_ok@pos,w,c
  2745  001128  0D01               	mullw	1
  2746  00112A  0E00               	movlw	low _mdRxBuf
  2747  00112C  24F3               	addwf	prodl,w,c
  2748  00112E  6ED9               	movwf	fsr2l,c
  2749  001130  0E02               	movlw	high _mdRxBuf
  2750  001132  20F4               	addwfc	prodh,w,c
  2751  001134  6EDA               	movwf	fsr2h,c
  2752  001136  C020  FFDF         	movff	md_uart_write_str_ok@currentChar,indf2
  2753                           
  2754                           ;uart.c: 119: if (pos >= 2)
  2755  00113A  0E01               	movlw	1
  2756  00113C  6421               	cpfsgt	md_uart_write_str_ok@pos,c
  2757  00113E  D097               	goto	l267
  2758                           
  2759                           ;uart.c: 120: {
  2760                           ;uart.c: 121: if (mdRxBuf[(uint8_t)(pos - 2)] == 'O' && mdRxBuf[(uint8_t)(pos - 1)] == '
      +                          K' && (mdRxBuf[pos] == '\r' || mdRxBuf[pos] == '\n'))
  2761  001140  C021  F01C         	movff	md_uart_write_str_ok@pos,??_md_uart_write_str_ok
  2762  001144  0EFE               	movlw	254
  2763  001146  261C               	addwf	??_md_uart_write_str_ok,f,c
  2764  001148  501C               	movf	??_md_uart_write_str_ok,w,c
  2765  00114A  0D01               	mullw	1
  2766  00114C  0E00               	movlw	low _mdRxBuf
  2767  00114E  24F3               	addwf	prodl,w,c
  2768  001150  6ED9               	movwf	fsr2l,c
  2769  001152  0E02               	movlw	high _mdRxBuf
  2770  001154  20F4               	addwfc	prodh,w,c
  2771  001156  6EDA               	movwf	fsr2h,c
  2772  001158  0E4F               	movlw	79
  2773  00115A  18DE               	xorwf	postinc2,w,c
  2774  00115C  A4D8               	btfss	status,2,c
  2775  00115E  D02F               	goto	l263
  2776  001160  C021  F01C         	movff	md_uart_write_str_ok@pos,??_md_uart_write_str_ok
  2777  001164  0EFF               	movlw	255
  2778  001166  261C               	addwf	??_md_uart_write_str_ok,f,c
  2779  001168  501C               	movf	??_md_uart_write_str_ok,w,c
  2780  00116A  0D01               	mullw	1
  2781  00116C  0E00               	movlw	low _mdRxBuf
  2782  00116E  24F3               	addwf	prodl,w,c
  2783  001170  6ED9               	movwf	fsr2l,c
  2784  001172  0E02               	movlw	high _mdRxBuf
  2785  001174  20F4               	addwfc	prodh,w,c
  2786  001176  6EDA               	movwf	fsr2h,c
  2787  001178  0E4B               	movlw	75
  2788  00117A  18DE               	xorwf	postinc2,w,c
  2789  00117C  A4D8               	btfss	status,2,c
  2790  00117E  D01F               	goto	l263
  2791  001180  5021               	movf	md_uart_write_str_ok@pos,w,c
  2792  001182  0D01               	mullw	1
  2793  001184  0E00               	movlw	low _mdRxBuf
  2794  001186  24F3               	addwf	prodl,w,c
  2795  001188  6ED9               	movwf	fsr2l,c
  2796  00118A  0E02               	movlw	high _mdRxBuf
  2797  00118C  20F4               	addwfc	prodh,w,c
  2798  00118E  6EDA               	movwf	fsr2h,c
  2799  001190  0E0D               	movlw	13
  2800  001192  18DE               	xorwf	postinc2,w,c
  2801  001194  B4D8               	btfsc	status,2,c
  2802  001196  D00C               	goto	u1640
  2803  001198  5021               	movf	md_uart_write_str_ok@pos,w,c
  2804  00119A  0D01               	mullw	1
  2805  00119C  0E00               	movlw	low _mdRxBuf
  2806  00119E  24F3               	addwf	prodl,w,c
  2807  0011A0  6ED9               	movwf	fsr2l,c
  2808  0011A2  0E02               	movlw	high _mdRxBuf
  2809  0011A4  20F4               	addwfc	prodh,w,c
  2810  0011A6  6EDA               	movwf	fsr2h,c
  2811  0011A8  0E0A               	movlw	10
  2812  0011AA  18DE               	xorwf	postinc2,w,c
  2813  0011AC  A4D8               	btfss	status,2,c
  2814  0011AE  D007               	goto	l263
  2815  0011B0                     u1640:
  2816                           
  2817                           ;uart.c: 123: {
  2818                           ;uart.c: 124: CREN1 = 0;
  2819  0011B0  98AB               	bcf	4011,4,c	;volatile
  2820                           
  2821                           ;uart.c: 125: receivedOK = 1;
  2822  0011B2  0E01               	movlw	1
  2823  0011B4  6E3F               	movwf	_receivedOK,c
  2824                           
  2825                           ;uart.c: 126: receivedERR = 0;
  2826  0011B6  0E00               	movlw	0
  2827  0011B8  6E3E               	movwf	_receivedERR,c
  2828                           
  2829                           ;uart.c: 127: return receivedOK;
  2830  0011BA  503F               	movf	_receivedOK,w,c
  2831  0011BC  0012               	return	
  2832  0011BE                     l263:
  2833                           
  2834                           ;uart.c: 128: }
  2835                           ;uart.c: 129: if (pos >= 5)
  2836  0011BE  0E04               	movlw	4
  2837  0011C0  6421               	cpfsgt	md_uart_write_str_ok@pos,c
  2838  0011C2  D055               	goto	l267
  2839                           
  2840                           ;uart.c: 130: {
  2841                           ;uart.c: 131: if (mdRxBuf[(uint8_t)(pos - 5)] == 'E' && mdRxBuf[(uint8_t)(pos - 4)] == '
      +                          R' && mdRxBuf[(uint8_t)(pos - 3)] == 'R' && mdRxBuf[(uint8_t)(pos - 2)] == 'O' && mdRxBu
      +                          f[(uint8_t)(pos - 1)] == 'R')
  2842  0011C4  C021  F01C         	movff	md_uart_write_str_ok@pos,??_md_uart_write_str_ok
  2843  0011C8  0EFB               	movlw	251
  2844  0011CA  261C               	addwf	??_md_uart_write_str_ok,f,c
  2845  0011CC  501C               	movf	??_md_uart_write_str_ok,w,c
  2846  0011CE  0D01               	mullw	1
  2847  0011D0  0E00               	movlw	low _mdRxBuf
  2848  0011D2  24F3               	addwf	prodl,w,c
  2849  0011D4  6ED9               	movwf	fsr2l,c
  2850  0011D6  0E02               	movlw	high _mdRxBuf
  2851  0011D8  20F4               	addwfc	prodh,w,c
  2852  0011DA  6EDA               	movwf	fsr2h,c
  2853  0011DC  0E45               	movlw	69
  2854  0011DE  18DE               	xorwf	postinc2,w,c
  2855  0011E0  A4D8               	btfss	status,2,c
  2856  0011E2  D045               	goto	l267
  2857  0011E4  C021  F01C         	movff	md_uart_write_str_ok@pos,??_md_uart_write_str_ok
  2858  0011E8  0EFC               	movlw	252
  2859  0011EA  261C               	addwf	??_md_uart_write_str_ok,f,c
  2860  0011EC  501C               	movf	??_md_uart_write_str_ok,w,c
  2861  0011EE  0D01               	mullw	1
  2862  0011F0  0E00               	movlw	low _mdRxBuf
  2863  0011F2  24F3               	addwf	prodl,w,c
  2864  0011F4  6ED9               	movwf	fsr2l,c
  2865  0011F6  0E02               	movlw	high _mdRxBuf
  2866  0011F8  20F4               	addwfc	prodh,w,c
  2867  0011FA  6EDA               	movwf	fsr2h,c
  2868  0011FC  0E52               	movlw	82
  2869  0011FE  18DE               	xorwf	postinc2,w,c
  2870  001200  A4D8               	btfss	status,2,c
  2871  001202  D035               	goto	l267
  2872  001204  C021  F01C         	movff	md_uart_write_str_ok@pos,??_md_uart_write_str_ok
  2873  001208  0EFD               	movlw	253
  2874  00120A  261C               	addwf	??_md_uart_write_str_ok,f,c
  2875  00120C  501C               	movf	??_md_uart_write_str_ok,w,c
  2876  00120E  0D01               	mullw	1
  2877  001210  0E00               	movlw	low _mdRxBuf
  2878  001212  24F3               	addwf	prodl,w,c
  2879  001214  6ED9               	movwf	fsr2l,c
  2880  001216  0E02               	movlw	high _mdRxBuf
  2881  001218  20F4               	addwfc	prodh,w,c
  2882  00121A  6EDA               	movwf	fsr2h,c
  2883  00121C  0E52               	movlw	82
  2884  00121E  18DE               	xorwf	postinc2,w,c
  2885  001220  A4D8               	btfss	status,2,c
  2886  001222  D025               	goto	l267
  2887  001224  C021  F01C         	movff	md_uart_write_str_ok@pos,??_md_uart_write_str_ok
  2888  001228  0EFE               	movlw	254
  2889  00122A  261C               	addwf	??_md_uart_write_str_ok,f,c
  2890  00122C  501C               	movf	??_md_uart_write_str_ok,w,c
  2891  00122E  0D01               	mullw	1
  2892  001230  0E00               	movlw	low _mdRxBuf
  2893  001232  24F3               	addwf	prodl,w,c
  2894  001234  6ED9               	movwf	fsr2l,c
  2895  001236  0E02               	movlw	high _mdRxBuf
  2896  001238  20F4               	addwfc	prodh,w,c
  2897  00123A  6EDA               	movwf	fsr2h,c
  2898  00123C  0E4F               	movlw	79
  2899  00123E  18DE               	xorwf	postinc2,w,c
  2900  001240  A4D8               	btfss	status,2,c
  2901  001242  D015               	goto	l267
  2902  001244  C021  F01C         	movff	md_uart_write_str_ok@pos,??_md_uart_write_str_ok
  2903  001248  0EFF               	movlw	255
  2904  00124A  261C               	addwf	??_md_uart_write_str_ok,f,c
  2905  00124C  501C               	movf	??_md_uart_write_str_ok,w,c
  2906  00124E  0D01               	mullw	1
  2907  001250  0E00               	movlw	low _mdRxBuf
  2908  001252  24F3               	addwf	prodl,w,c
  2909  001254  6ED9               	movwf	fsr2l,c
  2910  001256  0E02               	movlw	high _mdRxBuf
  2911  001258  20F4               	addwfc	prodh,w,c
  2912  00125A  6EDA               	movwf	fsr2h,c
  2913  00125C  0E52               	movlw	82
  2914  00125E  18DE               	xorwf	postinc2,w,c
  2915  001260  A4D8               	btfss	status,2,c
  2916  001262  D005               	goto	l267
  2917                           
  2918                           ;uart.c: 134: {
  2919                           ;uart.c: 135: receivedOK = 0;
  2920  001264  0E00               	movlw	0
  2921  001266  6E3F               	movwf	_receivedOK,c
  2922                           
  2923                           ;uart.c: 136: receivedERR = 1;
  2924  001268  0E01               	movlw	1
  2925  00126A  6E3E               	movwf	_receivedERR,c
  2926                           
  2927                           ;uart.c: 137: CREN1 = 0;
  2928  00126C  98AB               	bcf	4011,4,c	;volatile
  2929  00126E                     l267:
  2930                           
  2931                           ;uart.c: 138: }
  2932                           ;uart.c: 139: }
  2933                           ;uart.c: 140: }
  2934                           ;uart.c: 141: pos++;
  2935  00126E  2A21               	incf	md_uart_write_str_ok@pos,f,c
  2936  001270                     l257:
  2937  001270  503F               	movf	_receivedOK,w,c
  2938  001272  B4D8               	btfsc	status,2,c
  2939  001274  D003               	goto	u1720
  2940  001276  503E               	movf	_receivedERR,w,c
  2941  001278  A4D8               	btfss	status,2,c
  2942  00127A  D003               	goto	u1730
  2943  00127C                     u1720:
  2944  00127C  503C               	movf	_timedOut,w,c
  2945  00127E  B4D8               	btfsc	status,2,c
  2946  001280  D74E               	goto	l258
  2947  001282                     u1730:
  2948                           
  2949                           ;uart.c: 142: }
  2950                           ;uart.c: 143: disable_tmr5();
  2951  001282  EC5F  F00D         	call	_disable_tmr5	;wreg free
  2952                           
  2953                           ;uart.c: 144: CREN1 = 0;
  2954  001286  98AB               	bcf	4011,4,c	;volatile
  2955                           
  2956                           ;uart.c: 151: }
  2957  001288  D005               	goto	l274
  2958  00128A                     l256:
  2959                           
  2960                           ;uart.c: 152: else if (!wantOk)
  2961  00128A  501A               	movf	md_uart_write_str_ok@wantOk,w,c
  2962  00128C  A4D8               	btfss	status,2,c
  2963  00128E  D002               	goto	l274
  2964                           
  2965                           ;uart.c: 153: receivedOK = 1;
  2966  001290  0E01               	movlw	1
  2967  001292  6E3F               	movwf	_receivedOK,c
  2968  001294                     l274:
  2969                           
  2970                           ;uart.c: 154: _delay((unsigned long)((500)*(8000000/4000.0)));
  2971  001294  0E06               	movlw	6
  2972  001296  6E1D               	movwf	(??_md_uart_write_str_ok+1)& (0+255),c
  2973  001298  0E13               	movlw	19
  2974  00129A  6E1C               	movwf	??_md_uart_write_str_ok& (0+255),c
  2975  00129C  0EAE               	movlw	174
  2976  00129E                     u2087:
  2977  00129E  2EE8               	decfsz	wreg,f,c
  2978  0012A0  D7FE               	bra	u2087
  2979  0012A2  2E1C               	decfsz	??_md_uart_write_str_ok& (0+255),f,c
  2980  0012A4  D7FC               	bra	u2087
  2981  0012A6  2E1D               	decfsz	(??_md_uart_write_str_ok+1)& (0+255),f,c
  2982  0012A8  D7FA               	bra	u2087
  2983  0012AA                     l244:
  2984  0012AA  061E               	decf	md_uart_write_str_ok@numRetries,f,c
  2985  0012AC  281E               	incf	md_uart_write_str_ok@numRetries,w,c
  2986  0012AE  B4D8               	btfsc	status,2,c
  2987  0012B0  D003               	goto	u1760
  2988  0012B2  503F               	movf	_receivedOK,w,c
  2989  0012B4  B4D8               	btfsc	status,2,c
  2990  0012B6  D6F9               	goto	l245
  2991  0012B8                     u1760:
  2992                           
  2993                           ;uart.c: 155: }
  2994                           ;uart.c: 156: return receivedOK;
  2995  0012B8  503F               	movf	_receivedOK,w,c
  2996  0012BA  0012               	return	
  2997  0012BC                     __end_of_md_uart_write_str_ok:
  2998                           	opt stack 0
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           indf1	equ	0xFE7
  3009                           postdec1	equ	0xFE5
  3010                           plusw1	equ	0xFE3
  3011                           fsr1h	equ	0xFE2
  3012                           fsr1l	equ	0xFE1
  3013                           indf2	equ	0xFDF
  3014                           postinc2	equ	0xFDE
  3015                           plusw2	equ	0xFDB
  3016                           fsr2h	equ	0xFDA
  3017                           fsr2l	equ	0xFD9
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _reload_tmr5_pt25s *****************
  3021 ;; Defined at:
  3022 ;;		line 167 in file "main.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    3
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_md_uart_write_str_ok
  3047 ;;		_start_md_boot_timer
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text11
  3052  001A54                     __ptext11:
  3053                           	opt stack 0
  3054  001A54                     _reload_tmr5_pt25s:
  3055                           	opt stack 25
  3056                           
  3057                           ;main.c: 169: INTCONbits.GIE = 0;
  3058                           
  3059                           ;incstack = 0
  3060  001A54  9EF2               	bcf	intcon,7,c	;volatile
  3061                           
  3062                           ;main.c: 170: T5CON = 0b00110101;
  3063  001A56  0E35               	movlw	53
  3064  001A58  010F               	movlb	15	; () banked
  3065  001A5A  6F4E               	movwf	78,b	;volatile
  3066                           
  3067                           ; BSR set to: 15
  3068                           ;main.c: 172: PIE5bits.TMR5IE = 1;
  3069  001A5C  827D               	bsf	3965,1,c	;volatile
  3070                           
  3071                           ; BSR set to: 15
  3072                           ;main.c: 173: INTCONbits.PEIE = 1;
  3073  001A5E  8CF2               	bsf	intcon,6,c	;volatile
  3074                           
  3075                           ; BSR set to: 15
  3076                           ;main.c: 174: PIR5bits.TMR5IF = 0;
  3077  001A60  927E               	bcf	3966,1,c	;volatile
  3078                           
  3079                           ;main.c: 175: TMR5H = 0x0B;
  3080  001A62  0E0B               	movlw	11
  3081  001A64  6F50               	movwf	80,b	;volatile
  3082                           
  3083                           ;main.c: 176: TMR5L = 0x45;
  3084  001A66  0E45               	movlw	69
  3085  001A68  6F4F               	movwf	79,b	;volatile
  3086                           
  3087                           ; BSR set to: 15
  3088                           ;main.c: 177: INTCONbits.GIE = 1;
  3089  001A6A  8EF2               	bsf	intcon,7,c	;volatile
  3090                           
  3091                           ; BSR set to: 15
  3092  001A6C  0012               	return		;funcret
  3093  001A6E                     __end_of_reload_tmr5_pt25s:
  3094                           	opt stack 0
  3095                           tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           prodh	equ	0xFF4
  3100                           prodl	equ	0xFF3
  3101                           intcon	equ	0xFF2
  3102                           postinc0	equ	0xFEE
  3103                           wreg	equ	0xFE8
  3104                           indf1	equ	0xFE7
  3105                           postdec1	equ	0xFE5
  3106                           plusw1	equ	0xFE3
  3107                           fsr1h	equ	0xFE2
  3108                           fsr1l	equ	0xFE1
  3109                           indf2	equ	0xFDF
  3110                           postinc2	equ	0xFDE
  3111                           plusw2	equ	0xFDB
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function _md_uart_send *****************
  3117 ;; Defined at:
  3118 ;;		line 159 in file "uart.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  data            1    wreg     unsigned char 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  data            1   21[COMRAM] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;Total ram usage:        1 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    3
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_md_uart_write_str_ok
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text12
  3147  001AB2                     __ptext12:
  3148                           	opt stack 0
  3149  001AB2                     _md_uart_send:
  3150                           	opt stack 24
  3151                           
  3152                           ; BSR set to: 15
  3153                           ;incstack = 0
  3154                           ;md_uart_send@data stored from wreg
  3155  001AB2  6E16               	movwf	md_uart_send@data,c
  3156  001AB4                     
  3157                           ;uart.c: 161: while (!TRMT1);
  3158  001AB4  A2AC               	btfss	4012,1,c	;volatile
  3159  001AB6  D7FE               	goto	l2103
  3160                           
  3161                           ;uart.c: 162: TX1REG = data;
  3162  001AB8  C016  FFAD         	movff	md_uart_send@data,4013	;volatile
  3163  001ABC  0012               	return		;funcret
  3164  001ABE                     __end_of_md_uart_send:
  3165                           	opt stack 0
  3166                           tblptru	equ	0xFF8
  3167                           tblptrh	equ	0xFF7
  3168                           tblptrl	equ	0xFF6
  3169                           tablat	equ	0xFF5
  3170                           prodh	equ	0xFF4
  3171                           prodl	equ	0xFF3
  3172                           intcon	equ	0xFF2
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           indf1	equ	0xFE7
  3176                           postdec1	equ	0xFE5
  3177                           plusw1	equ	0xFE3
  3178                           fsr1h	equ	0xFE2
  3179                           fsr1l	equ	0xFE1
  3180                           indf2	equ	0xFDF
  3181                           postinc2	equ	0xFDE
  3182                           plusw2	equ	0xFDB
  3183                           fsr2h	equ	0xFDA
  3184                           fsr2l	equ	0xFD9
  3185                           status	equ	0xFD8
  3186                           
  3187 ;; *************** function _disable_tmr5 *****************
  3188 ;; Defined at:
  3189 ;;		line 180 in file "main.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    3
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_md_uart_write_str_ok
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text13
  3218  001ABE                     __ptext13:
  3219                           	opt stack 0
  3220  001ABE                     _disable_tmr5:
  3221                           	opt stack 24
  3222                           
  3223                           ;main.c: 182: tmr5_cnt = 0;
  3224                           
  3225                           ;incstack = 0
  3226  001ABE  0E00               	movlw	0
  3227  001AC0  6E41               	movwf	_tmr5_cnt,c
  3228                           
  3229                           ;main.c: 183: T5CONbits.TMR5ON = 0;
  3230  001AC2  010F               	movlb	15	; () banked
  3231  001AC4  914E               	bcf	78,0,b	;volatile
  3232                           
  3233                           ; BSR set to: 15
  3234                           ;main.c: 184: PIE5bits.TMR5IE = 0;
  3235  001AC6  927D               	bcf	3965,1,c	;volatile
  3236                           
  3237                           ; BSR set to: 15
  3238  001AC8  0012               	return		;funcret
  3239  001ACA                     __end_of_disable_tmr5:
  3240                           	opt stack 0
  3241                           tblptru	equ	0xFF8
  3242                           tblptrh	equ	0xFF7
  3243                           tblptrl	equ	0xFF6
  3244                           tablat	equ	0xFF5
  3245                           prodh	equ	0xFF4
  3246                           prodl	equ	0xFF3
  3247                           intcon	equ	0xFF2
  3248                           postinc0	equ	0xFEE
  3249                           wreg	equ	0xFE8
  3250                           indf1	equ	0xFE7
  3251                           postdec1	equ	0xFE5
  3252                           plusw1	equ	0xFE3
  3253                           fsr1h	equ	0xFE2
  3254                           fsr1l	equ	0xFE1
  3255                           indf2	equ	0xFDF
  3256                           postinc2	equ	0xFDE
  3257                           plusw2	equ	0xFDB
  3258                           fsr2h	equ	0xFDA
  3259                           fsr2l	equ	0xFD9
  3260                           status	equ	0xFD8
  3261                           
  3262 ;; *************** function _init_md_uart *****************
  3263 ;; Defined at:
  3264 ;;		line 7 in file "uart.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_send_md_cfg_cmds_ok
  3289 ;;		_setup_data_ok
  3290 ;;		_send_over_socket_ok
  3291 ;;		_close_socket_ok
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text14
  3296  001A0E                     __ptext14:
  3297                           	opt stack 0
  3298  001A0E                     _init_md_uart:
  3299                           	opt stack 25
  3300                           
  3301                           ;uart.c: 9: BAUDCON1bits.BRG16 = 1;
  3302                           
  3303                           ; BSR set to: 15
  3304                           ;incstack = 0
  3305  001A0E  86B8               	bsf	4024,3,c	;volatile
  3306                           
  3307                           ;uart.c: 10: BAUDCON1bits.RCIDL = 1;
  3308  001A10  8CB8               	bsf	4024,6,c	;volatile
  3309                           
  3310                           ;uart.c: 11: BAUDCONbits.CKTXP = 0;
  3311  001A12  98B8               	bcf	4024,4,c	;volatile
  3312                           
  3313                           ;uart.c: 12: BAUDCONbits.WUE = 0;
  3314  001A14  92B8               	bcf	4024,1,c	;volatile
  3315                           
  3316                           ;uart.c: 13: BAUDCONbits.ABDEN = 0;
  3317  001A16  90B8               	bcf	4024,0,c	;volatile
  3318                           
  3319                           ;uart.c: 14: TXSTA1bits.BRGH = 1;
  3320  001A18  84AC               	bsf	4012,2,c	;volatile
  3321                           
  3322                           ;uart.c: 15: TXSTA1bits.SYNC = 0;
  3323  001A1A  98AC               	bcf	4012,4,c	;volatile
  3324                           
  3325                           ;uart.c: 16: SPBRGH1 = 0;
  3326  001A1C  0E00               	movlw	0
  3327  001A1E  6EB0               	movwf	4016,c	;volatile
  3328                           
  3329                           ;uart.c: 17: SPBRG1 = 16;
  3330  001A20  0E10               	movlw	16
  3331  001A22  6EAF               	movwf	4015,c	;volatile
  3332                           
  3333                           ;uart.c: 19: RC1STAbits.SPEN = 1;
  3334  001A24  8EAB               	bsf	4011,7,c	;volatile
  3335                           
  3336                           ;uart.c: 20: TRISCbits.TRISC7 = 1;
  3337  001A26  8E94               	bsf	3988,7,c	;volatile
  3338                           
  3339                           ;uart.c: 21: TRISCbits.TRISC6 = 0;
  3340  001A28  9C94               	bcf	3988,6,c	;volatile
  3341                           
  3342                           ;uart.c: 24: RCSTA1bits.CREN = 1;
  3343  001A2A  88AB               	bsf	4011,4,c	;volatile
  3344                           
  3345                           ;uart.c: 25: TXSTA1bits.TXEN = 1;
  3346  001A2C  8AAC               	bsf	4012,5,c	;volatile
  3347                           
  3348                           ;uart.c: 33: PIR1bits.RC1IF = 0;
  3349  001A2E  9A9E               	bcf	3998,5,c	;volatile
  3350  001A30  0012               	return		;funcret
  3351  001A32                     __end_of_init_md_uart:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           indf1	equ	0xFE7
  3363                           postdec1	equ	0xFE5
  3364                           plusw1	equ	0xFE3
  3365                           fsr1h	equ	0xFE2
  3366                           fsr1l	equ	0xFE1
  3367                           indf2	equ	0xFDF
  3368                           postinc2	equ	0xFDE
  3369                           plusw2	equ	0xFDB
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _isr *****************
  3375 ;; Defined at:
  3376 ;;		line 14 in file "main.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:       20 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    2
  3397 ;; This function calls:
  3398 ;;		_check_mdstate_tmr5
  3399 ;;		_disable_md_rxint
  3400 ;;		i2_disable_tmr5
  3401 ;;		i2_reload_tmr5_pt25s
  3402 ;; This function is called by:
  3403 ;;		Interrupt level 2
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	intcode
  3408  000008                     __pintcode:
  3409                           	opt stack 0
  3410  000008                     _isr:
  3411                           	opt stack 24
  3412                           
  3413                           ;incstack = 0
  3414  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3415  00000A  CFFA F004          	movff	pclath,??_isr+2
  3416  00000E  CFFB F005          	movff	pclatu,??_isr+3
  3417  000012  CFE9 F006          	movff	fsr0l,??_isr+4
  3418  000016  CFEA F007          	movff	fsr0h,??_isr+5
  3419  00001A  CFE1 F008          	movff	fsr1l,??_isr+6
  3420  00001E  CFE2 F009          	movff	fsr1h,??_isr+7
  3421  000022  CFD9 F00A          	movff	fsr2l,??_isr+8
  3422  000026  CFDA F00B          	movff	fsr2h,??_isr+9
  3423  00002A  CFF3 F00C          	movff	prodl,??_isr+10
  3424  00002E  CFF4 F00D          	movff	prodh,??_isr+11
  3425  000032  CFF6 F00E          	movff	tblptrl,??_isr+12
  3426  000036  CFF7 F00F          	movff	tblptrh,??_isr+13
  3427  00003A  CFF8 F010          	movff	tblptru,??_isr+14
  3428  00003E  CFF5 F011          	movff	tablat,??_isr+15
  3429  000042  C044  F012         	movff	btemp,??_isr+16
  3430  000046  C045  F013         	movff	btemp+1,??_isr+17
  3431  00004A  C046  F014         	movff	btemp+2,??_isr+18
  3432  00004E  C047  F015         	movff	btemp+3,??_isr+19
  3433                           
  3434                           ;main.c: 16: if (RC1IF && PIE1bits.RCIE)
  3435  000052  BA9E               	btfsc	3998,5,c	;volatile
  3436  000054  AA9D               	btfss	3997,5,c	;volatile
  3437  000056  D0B7               	goto	i2l114
  3438                           
  3439                           ;main.c: 17: {
  3440                           ;main.c: 18: RC1IF = 0;
  3441  000058  9A9E               	bcf	3998,5,c	;volatile
  3442                           
  3443                           ;main.c: 19: currentChar = RC1REG;
  3444  00005A  CFAE F03B          	movff	4014,_currentChar	;volatile
  3445                           
  3446                           ;main.c: 20: mdRxBuf[endPtr++] = currentChar;
  3447  00005E  5040               	movf	_endPtr,w,c
  3448  000060  0D01               	mullw	1
  3449  000062  0E00               	movlw	low _mdRxBuf
  3450  000064  24F3               	addwf	prodl,w,c
  3451  000066  6ED9               	movwf	fsr2l,c
  3452  000068  0E02               	movlw	high _mdRxBuf
  3453  00006A  20F4               	addwfc	prodh,w,c
  3454  00006C  6EDA               	movwf	fsr2h,c
  3455  00006E  C03B  FFDF         	movff	_currentChar,indf2
  3456  000072  2A40               	incf	_endPtr,f,c
  3457                           
  3458                           ;main.c: 21: if (endPtr >= sizeof(mdRxBuf))
  3459  000074  0E9F               	movlw	159
  3460  000076  6440               	cpfsgt	_endPtr,c
  3461  000078  D001               	goto	i2l108
  3462                           
  3463                           ;main.c: 22: endPtr--;
  3464  00007A  0640               	decf	_endPtr,f,c
  3465  00007C                     i2l108:
  3466                           
  3467                           ;main.c: 23: if (endPtr > 2)
  3468  00007C  0E02               	movlw	2
  3469  00007E  6440               	cpfsgt	_endPtr,c
  3470  000080  D0A2               	goto	i2l114
  3471                           
  3472                           ;main.c: 24: {
  3473                           ;main.c: 26: if (mdRxBuf[(uint8_t)(endPtr - 2)] == 'O' && mdRxBuf[(uint8_t)(endPtr - 1)]
      +                           == 'K' && (mdRxBuf[endPtr] == '\r' || mdRxBuf[endPtr] == '\n'))
  3474  000082  C040  F002         	movff	_endPtr,??_isr
  3475  000086  0EFE               	movlw	254
  3476  000088  2602               	addwf	??_isr,f,c
  3477  00008A  5002               	movf	??_isr,w,c
  3478  00008C  0D01               	mullw	1
  3479  00008E  0E00               	movlw	low _mdRxBuf
  3480  000090  24F3               	addwf	prodl,w,c
  3481  000092  6ED9               	movwf	fsr2l,c
  3482  000094  0E02               	movlw	high _mdRxBuf
  3483  000096  20F4               	addwfc	prodh,w,c
  3484  000098  6EDA               	movwf	fsr2h,c
  3485  00009A  0E4F               	movlw	79
  3486  00009C  18DE               	xorwf	postinc2,w,c
  3487  00009E  A4D8               	btfss	status,2,c
  3488  0000A0  D036               	goto	i2l110
  3489  0000A2  C040  F002         	movff	_endPtr,??_isr
  3490  0000A6  0EFF               	movlw	255
  3491  0000A8  2602               	addwf	??_isr,f,c
  3492  0000AA  5002               	movf	??_isr,w,c
  3493  0000AC  0D01               	mullw	1
  3494  0000AE  0E00               	movlw	low _mdRxBuf
  3495  0000B0  24F3               	addwf	prodl,w,c
  3496  0000B2  6ED9               	movwf	fsr2l,c
  3497  0000B4  0E02               	movlw	high _mdRxBuf
  3498  0000B6  20F4               	addwfc	prodh,w,c
  3499  0000B8  6EDA               	movwf	fsr2h,c
  3500  0000BA  0E4B               	movlw	75
  3501  0000BC  18DE               	xorwf	postinc2,w,c
  3502  0000BE  A4D8               	btfss	status,2,c
  3503  0000C0  D026               	goto	i2l110
  3504  0000C2  5040               	movf	_endPtr,w,c
  3505  0000C4  0D01               	mullw	1
  3506  0000C6  0E00               	movlw	low _mdRxBuf
  3507  0000C8  24F3               	addwf	prodl,w,c
  3508  0000CA  6ED9               	movwf	fsr2l,c
  3509  0000CC  0E02               	movlw	high _mdRxBuf
  3510  0000CE  20F4               	addwfc	prodh,w,c
  3511  0000D0  6EDA               	movwf	fsr2h,c
  3512  0000D2  0E0D               	movlw	13
  3513  0000D4  18DE               	xorwf	postinc2,w,c
  3514  0000D6  B4D8               	btfsc	status,2,c
  3515  0000D8  D00C               	goto	i2u141_40
  3516  0000DA  5040               	movf	_endPtr,w,c
  3517  0000DC  0D01               	mullw	1
  3518  0000DE  0E00               	movlw	low _mdRxBuf
  3519  0000E0  24F3               	addwf	prodl,w,c
  3520  0000E2  6ED9               	movwf	fsr2l,c
  3521  0000E4  0E02               	movlw	high _mdRxBuf
  3522  0000E6  20F4               	addwfc	prodh,w,c
  3523  0000E8  6EDA               	movwf	fsr2h,c
  3524  0000EA  0E0A               	movlw	10
  3525  0000EC  18DE               	xorwf	postinc2,w,c
  3526  0000EE  A4D8               	btfss	status,2,c
  3527  0000F0  D00E               	goto	i2l110
  3528  0000F2                     i2u141_40:
  3529                           
  3530                           ;main.c: 28: {
  3531                           ;main.c: 29: tmr5_cnt = 0;
  3532  0000F2  0E00               	movlw	0
  3533  0000F4  6E41               	movwf	_tmr5_cnt,c
  3534                           
  3535                           ;main.c: 30: disable_tmr5();
  3536  0000F6  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  3537                           
  3538                           ;main.c: 31: TMR5IF = 0;
  3539  0000FA  927E               	bcf	3966,1,c	;volatile
  3540                           
  3541                           ;main.c: 32: receivedOK = 1;
  3542  0000FC  0E01               	movlw	1
  3543  0000FE  6E3F               	movwf	_receivedOK,c
  3544                           
  3545                           ;main.c: 33: receivedERR = 0;
  3546  000100  0E00               	movlw	0
  3547  000102  6E3E               	movwf	_receivedERR,c
  3548                           
  3549                           ;main.c: 34: timedOut = 0;
  3550  000104  0E00               	movlw	0
  3551  000106  6E3C               	movwf	_timedOut,c
  3552                           
  3553                           ;main.c: 35: disable_md_rxint();
  3554  000108  EC70  F00D         	call	_disable_md_rxint	;wreg free
  3555                           
  3556                           ;main.c: 36: }
  3557  00010C  D05C               	goto	i2l114
  3558  00010E                     i2l110:
  3559                           
  3560                           ;main.c: 37: else if (endPtr >= 5 && mdRxBuf[(uint8_t)(endPtr - 4)] == 'E' && mdRxBuf[(u
      +                          int8_t)(endPtr - 3)] == 'R' && mdRxBuf[(uint8_t)(endPtr - 2)] == 'R' && mdRxBuf[(uint8_t
      +                          )(endPtr - 1)] == 'O' && mdRxBuf[endPtr] == 'R')
  3561  00010E  0E04               	movlw	4
  3562  000110  6440               	cpfsgt	_endPtr,c
  3563  000112  D059               	goto	i2l114
  3564  000114  C040  F002         	movff	_endPtr,??_isr
  3565  000118  0EFC               	movlw	252
  3566  00011A  2602               	addwf	??_isr,f,c
  3567  00011C  5002               	movf	??_isr,w,c
  3568  00011E  0D01               	mullw	1
  3569  000120  0E00               	movlw	low _mdRxBuf
  3570  000122  24F3               	addwf	prodl,w,c
  3571  000124  6ED9               	movwf	fsr2l,c
  3572  000126  0E02               	movlw	high _mdRxBuf
  3573  000128  20F4               	addwfc	prodh,w,c
  3574  00012A  6EDA               	movwf	fsr2h,c
  3575  00012C  0E45               	movlw	69
  3576  00012E  18DE               	xorwf	postinc2,w,c
  3577  000130  A4D8               	btfss	status,2,c
  3578  000132  D049               	goto	i2l114
  3579  000134  C040  F002         	movff	_endPtr,??_isr
  3580  000138  0EFD               	movlw	253
  3581  00013A  2602               	addwf	??_isr,f,c
  3582  00013C  5002               	movf	??_isr,w,c
  3583  00013E  0D01               	mullw	1
  3584  000140  0E00               	movlw	low _mdRxBuf
  3585  000142  24F3               	addwf	prodl,w,c
  3586  000144  6ED9               	movwf	fsr2l,c
  3587  000146  0E02               	movlw	high _mdRxBuf
  3588  000148  20F4               	addwfc	prodh,w,c
  3589  00014A  6EDA               	movwf	fsr2h,c
  3590  00014C  0E52               	movlw	82
  3591  00014E  18DE               	xorwf	postinc2,w,c
  3592  000150  A4D8               	btfss	status,2,c
  3593  000152  D039               	goto	i2l114
  3594  000154  C040  F002         	movff	_endPtr,??_isr
  3595  000158  0EFE               	movlw	254
  3596  00015A  2602               	addwf	??_isr,f,c
  3597  00015C  5002               	movf	??_isr,w,c
  3598  00015E  0D01               	mullw	1
  3599  000160  0E00               	movlw	low _mdRxBuf
  3600  000162  24F3               	addwf	prodl,w,c
  3601  000164  6ED9               	movwf	fsr2l,c
  3602  000166  0E02               	movlw	high _mdRxBuf
  3603  000168  20F4               	addwfc	prodh,w,c
  3604  00016A  6EDA               	movwf	fsr2h,c
  3605  00016C  0E52               	movlw	82
  3606  00016E  18DE               	xorwf	postinc2,w,c
  3607  000170  A4D8               	btfss	status,2,c
  3608  000172  D029               	goto	i2l114
  3609  000174  C040  F002         	movff	_endPtr,??_isr
  3610  000178  0EFF               	movlw	255
  3611  00017A  2602               	addwf	??_isr,f,c
  3612  00017C  5002               	movf	??_isr,w,c
  3613  00017E  0D01               	mullw	1
  3614  000180  0E00               	movlw	low _mdRxBuf
  3615  000182  24F3               	addwf	prodl,w,c
  3616  000184  6ED9               	movwf	fsr2l,c
  3617  000186  0E02               	movlw	high _mdRxBuf
  3618  000188  20F4               	addwfc	prodh,w,c
  3619  00018A  6EDA               	movwf	fsr2h,c
  3620  00018C  0E4F               	movlw	79
  3621  00018E  18DE               	xorwf	postinc2,w,c
  3622  000190  A4D8               	btfss	status,2,c
  3623  000192  D019               	goto	i2l114
  3624  000194  5040               	movf	_endPtr,w,c
  3625  000196  0D01               	mullw	1
  3626  000198  0E00               	movlw	low _mdRxBuf
  3627  00019A  24F3               	addwf	prodl,w,c
  3628  00019C  6ED9               	movwf	fsr2l,c
  3629  00019E  0E02               	movlw	high _mdRxBuf
  3630  0001A0  20F4               	addwfc	prodh,w,c
  3631  0001A2  6EDA               	movwf	fsr2h,c
  3632  0001A4  0E52               	movlw	82
  3633  0001A6  18DE               	xorwf	postinc2,w,c
  3634  0001A8  A4D8               	btfss	status,2,c
  3635  0001AA  D00D               	goto	i2l114
  3636                           
  3637                           ;main.c: 40: {
  3638                           ;main.c: 41: tmr5_cnt = 0;
  3639  0001AC  0E00               	movlw	0
  3640  0001AE  6E41               	movwf	_tmr5_cnt,c
  3641                           
  3642                           ;main.c: 42: disable_tmr5();
  3643  0001B0  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  3644                           
  3645                           ;main.c: 43: TMR5IF = 0;
  3646  0001B4  927E               	bcf	3966,1,c	;volatile
  3647                           
  3648                           ;main.c: 44: receivedOK = 0;
  3649  0001B6  0E00               	movlw	0
  3650  0001B8  6E3F               	movwf	_receivedOK,c
  3651                           
  3652                           ;main.c: 45: receivedERR = 1;
  3653  0001BA  0E01               	movlw	1
  3654  0001BC  6E3E               	movwf	_receivedERR,c
  3655                           
  3656                           ;main.c: 46: timedOut = 0;
  3657  0001BE  0E00               	movlw	0
  3658  0001C0  6E3C               	movwf	_timedOut,c
  3659                           
  3660                           ;main.c: 47: disable_md_rxint();
  3661  0001C2  EC70  F00D         	call	_disable_md_rxint	;wreg free
  3662  0001C6                     i2l114:
  3663                           
  3664                           ;main.c: 48: }
  3665                           ;main.c: 49: }
  3666                           ;main.c: 50: }
  3667                           ;main.c: 52: if (TMR5IF)
  3668  0001C6  A27E               	btfss	3966,1,c	;volatile
  3669  0001C8  D006               	goto	i2l115
  3670                           
  3671                           ;main.c: 53: {
  3672                           ;main.c: 55: tmr5_cnt++;
  3673  0001CA  2A41               	incf	_tmr5_cnt,f,c
  3674                           
  3675                           ;main.c: 56: TMR5IF = 0;
  3676  0001CC  927E               	bcf	3966,1,c	;volatile
  3677                           
  3678                           ;main.c: 57: reload_tmr5_pt25s();
  3679  0001CE  EC37  F00D         	call	i2_reload_tmr5_pt25s	;wreg free
  3680                           
  3681                           ;main.c: 59: check_mdstate_tmr5();
  3682  0001D2  ECE5  F00A         	call	_check_mdstate_tmr5	;wreg free
  3683  0001D6                     i2l115:
  3684  0001D6  C015  F047         	movff	??_isr+19,btemp+3
  3685  0001DA  C014  F046         	movff	??_isr+18,btemp+2
  3686  0001DE  C013  F045         	movff	??_isr+17,btemp+1
  3687  0001E2  C012  F044         	movff	??_isr+16,btemp
  3688  0001E6  C011  FFF5         	movff	??_isr+15,tablat
  3689  0001EA  C010  FFF8         	movff	??_isr+14,tblptru
  3690  0001EE  C00F  FFF7         	movff	??_isr+13,tblptrh
  3691  0001F2  C00E  FFF6         	movff	??_isr+12,tblptrl
  3692  0001F6  C00D  FFF4         	movff	??_isr+11,prodh
  3693  0001FA  C00C  FFF3         	movff	??_isr+10,prodl
  3694  0001FE  C00B  FFDA         	movff	??_isr+9,fsr2h
  3695  000202  C00A  FFD9         	movff	??_isr+8,fsr2l
  3696  000206  C009  FFE2         	movff	??_isr+7,fsr1h
  3697  00020A  C008  FFE1         	movff	??_isr+6,fsr1l
  3698  00020E  C007  FFEA         	movff	??_isr+5,fsr0h
  3699  000212  C006  FFE9         	movff	??_isr+4,fsr0l
  3700  000216  C005  FFFB         	movff	??_isr+3,pclatu
  3701  00021A  C004  FFFA         	movff	??_isr+2,pclath
  3702  00021E  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3703  000220  0011               	retfie		f
  3704  000222                     __end_of_isr:
  3705                           	opt stack 0
  3706                           pclatu	equ	0xFFB
  3707                           pclath	equ	0xFFA
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           prodh	equ	0xFF4
  3713                           prodl	equ	0xFF3
  3714                           intcon	equ	0xFF2
  3715                           postinc0	equ	0xFEE
  3716                           fsr0h	equ	0xFEA
  3717                           fsr0l	equ	0xFE9
  3718                           wreg	equ	0xFE8
  3719                           indf1	equ	0xFE7
  3720                           postdec1	equ	0xFE5
  3721                           plusw1	equ	0xFE3
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           indf2	equ	0xFDF
  3725                           postinc2	equ	0xFDE
  3726                           plusw2	equ	0xFDB
  3727                           fsr2h	equ	0xFDA
  3728                           fsr2l	equ	0xFD9
  3729                           status	equ	0xFD8
  3730                           
  3731 ;; *************** function i2_reload_tmr5_pt25s *****************
  3732 ;; Defined at:
  3733 ;;		line 167 in file "main.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_isr
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text16
  3761  001A6E                     __ptext16:
  3762                           	opt stack 0
  3763  001A6E                     i2_reload_tmr5_pt25s:
  3764                           	opt stack 25
  3765                           
  3766                           ;main.c: 169: INTCONbits.GIE = 0;
  3767                           
  3768                           ;incstack = 0
  3769  001A6E  9EF2               	bcf	intcon,7,c	;volatile
  3770                           
  3771                           ;main.c: 170: T5CON = 0b00110101;
  3772  001A70  0E35               	movlw	53
  3773  001A72  010F               	movlb	15	; () banked
  3774  001A74  6F4E               	movwf	78,b	;volatile
  3775                           
  3776                           ; BSR set to: 15
  3777                           ;main.c: 172: PIE5bits.TMR5IE = 1;
  3778  001A76  827D               	bsf	3965,1,c	;volatile
  3779                           
  3780                           ; BSR set to: 15
  3781                           ;main.c: 173: INTCONbits.PEIE = 1;
  3782  001A78  8CF2               	bsf	intcon,6,c	;volatile
  3783                           
  3784                           ; BSR set to: 15
  3785                           ;main.c: 174: PIR5bits.TMR5IF = 0;
  3786  001A7A  927E               	bcf	3966,1,c	;volatile
  3787                           
  3788                           ;main.c: 175: TMR5H = 0x0B;
  3789  001A7C  0E0B               	movlw	11
  3790  001A7E  6F50               	movwf	80,b	;volatile
  3791                           
  3792                           ;main.c: 176: TMR5L = 0x45;
  3793  001A80  0E45               	movlw	69
  3794  001A82  6F4F               	movwf	79,b	;volatile
  3795                           
  3796                           ; BSR set to: 15
  3797                           ;main.c: 177: INTCONbits.GIE = 1;
  3798  001A84  8EF2               	bsf	intcon,7,c	;volatile
  3799                           
  3800                           ; BSR set to: 15
  3801  001A86  0012               	return		;funcret
  3802  001A88                     __end_ofi2_reload_tmr5_pt25s:
  3803                           	opt stack 0
  3804                           pclatu	equ	0xFFB
  3805                           pclath	equ	0xFFA
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           prodh	equ	0xFF4
  3811                           prodl	equ	0xFF3
  3812                           intcon	equ	0xFF2
  3813                           postinc0	equ	0xFEE
  3814                           fsr0h	equ	0xFEA
  3815                           fsr0l	equ	0xFE9
  3816                           wreg	equ	0xFE8
  3817                           indf1	equ	0xFE7
  3818                           postdec1	equ	0xFE5
  3819                           plusw1	equ	0xFE3
  3820                           fsr1h	equ	0xFE2
  3821                           fsr1l	equ	0xFE1
  3822                           indf2	equ	0xFDF
  3823                           postinc2	equ	0xFDE
  3824                           plusw2	equ	0xFDB
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function _disable_md_rxint *****************
  3830 ;; Defined at:
  3831 ;;		line 48 in file "uart.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		None
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;Total ram usage:        0 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_isr
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text17
  3859  001AE0                     __ptext17:
  3860                           	opt stack 0
  3861  001AE0                     _disable_md_rxint:
  3862                           	opt stack 25
  3863                           
  3864                           ;uart.c: 50: GIE = 0;
  3865                           
  3866                           ; BSR set to: 15
  3867                           ;incstack = 0
  3868  001AE0  9EF2               	bcf	intcon,7,c	;volatile
  3869                           
  3870                           ;uart.c: 51: PIE1bits.RC1IE = 0;
  3871  001AE2  9A9D               	bcf	3997,5,c	;volatile
  3872                           
  3873                           ;uart.c: 52: GIE = 1;
  3874  001AE4  8EF2               	bsf	intcon,7,c	;volatile
  3875  001AE6  0012               	return		;funcret
  3876  001AE8                     __end_of_disable_md_rxint:
  3877                           	opt stack 0
  3878                           pclatu	equ	0xFFB
  3879                           pclath	equ	0xFFA
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           prodh	equ	0xFF4
  3885                           prodl	equ	0xFF3
  3886                           intcon	equ	0xFF2
  3887                           postinc0	equ	0xFEE
  3888                           fsr0h	equ	0xFEA
  3889                           fsr0l	equ	0xFE9
  3890                           wreg	equ	0xFE8
  3891                           indf1	equ	0xFE7
  3892                           postdec1	equ	0xFE5
  3893                           plusw1	equ	0xFE3
  3894                           fsr1h	equ	0xFE2
  3895                           fsr1l	equ	0xFE1
  3896                           indf2	equ	0xFDF
  3897                           postinc2	equ	0xFDE
  3898                           plusw2	equ	0xFDB
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _check_mdstate_tmr5 *****************
  3904 ;; Defined at:
  3905 ;;		line 188 in file "main.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    1
  3926 ;; This function calls:
  3927 ;;		i2_disable_tmr5
  3928 ;; This function is called by:
  3929 ;;		_isr
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text18
  3934  0015CA                     __ptext18:
  3935                           	opt stack 0
  3936  0015CA                     _check_mdstate_tmr5:
  3937                           	opt stack 24
  3938                           
  3939                           ;main.c: 190: switch (md_state)
  3940                           
  3941                           ;incstack = 0
  3942  0015CA  D05B               	goto	i2l138
  3943  0015CC                     
  3944                           ;main.c: 193: PORTCbits.RC4 = (bool)(tmr5_cnt % 2);
  3945  0015CC  C041  F001         	movff	_tmr5_cnt,??_check_mdstate_tmr5
  3946  0015D0  0E01               	movlw	1
  3947  0015D2  1601               	andwf	??_check_mdstate_tmr5,f,c
  3948  0015D4  3A01               	swapf	??_check_mdstate_tmr5,f,c
  3949  0015D6  5082               	movf	3970,w,c	;volatile
  3950  0015D8  1801               	xorwf	??_check_mdstate_tmr5,w,c
  3951  0015DA  0BEF               	andlw	-17
  3952  0015DC  1801               	xorwf	??_check_mdstate_tmr5,w,c
  3953  0015DE  6E82               	movwf	3970,c	;volatile
  3954                           
  3955                           ;main.c: 194: if (tmr5_cnt >= (4*45))
  3956  0015E0  0EB3               	movlw	179
  3957  0015E2  6441               	cpfsgt	_tmr5_cnt,c
  3958  0015E4  0012               	return	
  3959                           
  3960                           ;main.c: 195: {
  3961                           ;main.c: 196: disable_tmr5();
  3962  0015E6  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  3963                           
  3964                           ;main.c: 197: tmr5_cnt = 0;
  3965  0015EA  0E00               	movlw	0
  3966  0015EC  6E41               	movwf	_tmr5_cnt,c
  3967                           
  3968                           ;main.c: 198: bootTimerIsDone = 1;
  3969  0015EE  0E01               	movlw	1
  3970  0015F0  0100               	movlb	0	; () banked
  3971  0015F2  6FFA               	movwf	_bootTimerIsDone& (0+255),b
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;main.c: 199: }
  3975                           ;main.c: 200: break;
  3976  0015F4  0012               	return	
  3977  0015F6                     
  3978                           ; BSR set to: 0
  3979                           ;main.c: 202: if (tmr5_cnt >= (4*2))
  3980                           
  3981                           ; BSR set to: 0
  3982  0015F6  0E07               	movlw	7
  3983  0015F8  6441               	cpfsgt	_tmr5_cnt,c
  3984  0015FA  0012               	return	
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;main.c: 203: {
  3988                           ;main.c: 204: disable_tmr5();
  3989  0015FC  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  3990                           
  3991                           ;main.c: 205: tmr5_cnt = 0;
  3992  001600  0E00               	movlw	0
  3993  001602  6E41               	movwf	_tmr5_cnt,c
  3994                           
  3995                           ;main.c: 206: receivedOK = 0;
  3996  001604  0E00               	movlw	0
  3997  001606  6E3F               	movwf	_receivedOK,c
  3998                           
  3999                           ;main.c: 207: receivedERR = 0;
  4000  001608  0E00               	movlw	0
  4001  00160A  6E3E               	movwf	_receivedERR,c
  4002                           
  4003                           ;main.c: 208: timedOut = 1;
  4004  00160C  0E01               	movlw	1
  4005  00160E  6E3C               	movwf	_timedOut,c
  4006                           
  4007                           ;main.c: 209: }
  4008                           ;main.c: 210: break;
  4009  001610  0012               	return	
  4010  001612                     
  4011                           ;main.c: 212: if (tmr5_cnt >= (4*10))
  4012  001612  0E27               	movlw	39
  4013  001614  6441               	cpfsgt	_tmr5_cnt,c
  4014  001616  0012               	return	
  4015                           
  4016                           ;main.c: 213: {
  4017                           ;main.c: 214: disable_tmr5();
  4018  001618  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  4019                           
  4020                           ;main.c: 215: tmr5_cnt = 0;
  4021  00161C  0E00               	movlw	0
  4022  00161E  6E41               	movwf	_tmr5_cnt,c
  4023                           
  4024                           ;main.c: 216: receivedOK = 0;
  4025  001620  0E00               	movlw	0
  4026  001622  6E3F               	movwf	_receivedOK,c
  4027                           
  4028                           ;main.c: 217: receivedERR = 0;
  4029  001624  0E00               	movlw	0
  4030  001626  6E3E               	movwf	_receivedERR,c
  4031                           
  4032                           ;main.c: 218: timedOut = 1;
  4033  001628  0E01               	movlw	1
  4034  00162A  6E3C               	movwf	_timedOut,c
  4035                           
  4036                           ;main.c: 219: }
  4037                           ;main.c: 220: break;
  4038  00162C  0012               	return	
  4039  00162E                     
  4040                           ;main.c: 222: if (tmr5_cnt >= (4*10))
  4041  00162E  0E27               	movlw	39
  4042  001630  6441               	cpfsgt	_tmr5_cnt,c
  4043  001632  0012               	return	
  4044                           
  4045                           ;main.c: 223: {
  4046                           ;main.c: 224: disable_tmr5();
  4047  001634  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  4048                           
  4049                           ;main.c: 225: tmr5_cnt = 0;
  4050  001638  0E00               	movlw	0
  4051  00163A  6E41               	movwf	_tmr5_cnt,c
  4052                           
  4053                           ;main.c: 226: receivedOK = 0;
  4054  00163C  0E00               	movlw	0
  4055  00163E  6E3F               	movwf	_receivedOK,c
  4056                           
  4057                           ;main.c: 227: receivedERR = 0;
  4058  001640  0E00               	movlw	0
  4059  001642  6E3E               	movwf	_receivedERR,c
  4060                           
  4061                           ;main.c: 228: timedOut = 1;
  4062  001644  0E01               	movlw	1
  4063  001646  6E3C               	movwf	_timedOut,c
  4064                           
  4065                           ;main.c: 229: }
  4066                           ;main.c: 230: break;
  4067  001648  0012               	return	
  4068  00164A                     
  4069                           ;main.c: 232: if (tmr5_cnt >= (4*10))
  4070  00164A  0E27               	movlw	39
  4071  00164C  6441               	cpfsgt	_tmr5_cnt,c
  4072  00164E  0012               	return	
  4073                           
  4074                           ;main.c: 233: {
  4075                           ;main.c: 234: disable_tmr5();
  4076  001650  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  4077                           
  4078                           ;main.c: 235: tmr5_cnt = 0;
  4079  001654  0E00               	movlw	0
  4080  001656  6E41               	movwf	_tmr5_cnt,c
  4081                           
  4082                           ;main.c: 236: receivedOK = 0;
  4083  001658  0E00               	movlw	0
  4084  00165A  6E3F               	movwf	_receivedOK,c
  4085                           
  4086                           ;main.c: 237: receivedERR = 0;
  4087  00165C  0E00               	movlw	0
  4088  00165E  6E3E               	movwf	_receivedERR,c
  4089                           
  4090                           ;main.c: 238: timedOut = 1;
  4091  001660  0E01               	movlw	1
  4092  001662  6E3C               	movwf	_timedOut,c
  4093                           
  4094                           ;main.c: 239: }
  4095                           ;main.c: 240: break;
  4096  001664  0012               	return	
  4097  001666                     
  4098                           ;main.c: 242: if (tmr5_cnt >= (4*10))
  4099  001666  0E27               	movlw	39
  4100  001668  6441               	cpfsgt	_tmr5_cnt,c
  4101  00166A  0012               	return	
  4102                           
  4103                           ;main.c: 243: {
  4104                           ;main.c: 244: disable_tmr5();
  4105  00166C  EC65  F00D         	call	i2_disable_tmr5	;wreg free
  4106                           
  4107                           ;main.c: 245: tmr5_cnt = 0;
  4108  001670  0E00               	movlw	0
  4109  001672  6E41               	movwf	_tmr5_cnt,c
  4110                           
  4111                           ;main.c: 246: receivedOK = 0;
  4112  001674  0E00               	movlw	0
  4113  001676  6E3F               	movwf	_receivedOK,c
  4114                           
  4115                           ;main.c: 247: receivedERR = 0;
  4116  001678  0E00               	movlw	0
  4117  00167A  6E3E               	movwf	_receivedERR,c
  4118                           
  4119                           ;main.c: 248: timedOut = 1;
  4120  00167C  0E01               	movlw	1
  4121  00167E  6E3C               	movwf	_timedOut,c
  4122                           
  4123                           ;main.c: 251: }
  4124                           
  4125                           ;main.c: 249: }
  4126                           ;main.c: 250: break;
  4127  001680  0012               	return	
  4128  001682                     i2l138:
  4129  001682  0100               	movlb	0	; () banked
  4130  001684  51FB               	movf	_md_state& (0+255),w,b
  4131                           
  4132                           ; Switch size 1, requested type "space"
  4133                           ; Number of cases is 6, Range of values is 1 to 6
  4134                           ; switch strategies available:
  4135                           ; Name         Instructions Cycles
  4136                           ; simple_byte           19    10 (average)
  4137                           ;	Chosen strategy is simple_byte
  4138  001686  0A01               	xorlw	1	; case 1
  4139  001688  B4D8               	btfsc	status,2,c
  4140  00168A  D7A0               	goto	i2l139
  4141  00168C  0A03               	xorlw	3	; case 2
  4142  00168E  B4D8               	btfsc	status,2,c
  4143  001690  D7B2               	goto	i2l142
  4144  001692  0A01               	xorlw	1	; case 3
  4145  001694  B4D8               	btfsc	status,2,c
  4146  001696  D7BD               	goto	i2l144
  4147  001698  0A07               	xorlw	7	; case 4
  4148  00169A  B4D8               	btfsc	status,2,c
  4149  00169C  D7C8               	goto	i2l146
  4150  00169E  0A01               	xorlw	1	; case 5
  4151  0016A0  B4D8               	btfsc	status,2,c
  4152  0016A2  D7D3               	goto	i2l148
  4153  0016A4  0A03               	xorlw	3	; case 6
  4154  0016A6  A4D8               	btfss	status,2,c
  4155  0016A8  0012               	return	
  4156  0016AA  D7DD               	goto	i2l150
  4157  0016AC                     __end_of_check_mdstate_tmr5:
  4158                           	opt stack 0
  4159                           pclatu	equ	0xFFB
  4160                           pclath	equ	0xFFA
  4161                           tblptru	equ	0xFF8
  4162                           tblptrh	equ	0xFF7
  4163                           tblptrl	equ	0xFF6
  4164                           tablat	equ	0xFF5
  4165                           prodh	equ	0xFF4
  4166                           prodl	equ	0xFF3
  4167                           intcon	equ	0xFF2
  4168                           postinc0	equ	0xFEE
  4169                           fsr0h	equ	0xFEA
  4170                           fsr0l	equ	0xFE9
  4171                           wreg	equ	0xFE8
  4172                           indf1	equ	0xFE7
  4173                           postdec1	equ	0xFE5
  4174                           plusw1	equ	0xFE3
  4175                           fsr1h	equ	0xFE2
  4176                           fsr1l	equ	0xFE1
  4177                           indf2	equ	0xFDF
  4178                           postinc2	equ	0xFDE
  4179                           plusw2	equ	0xFDB
  4180                           fsr2h	equ	0xFDA
  4181                           fsr2l	equ	0xFD9
  4182                           status	equ	0xFD8
  4183                           
  4184 ;; *************** function i2_disable_tmr5 *****************
  4185 ;; Defined at:
  4186 ;;		line 180 in file "main.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_isr
  4210 ;;		_check_mdstate_tmr5
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text19
  4215  001ACA                     __ptext19:
  4216                           	opt stack 0
  4217  001ACA                     i2_disable_tmr5:
  4218                           	opt stack 25
  4219                           
  4220                           ;main.c: 182: tmr5_cnt = 0;
  4221                           
  4222                           ;incstack = 0
  4223  001ACA  0E00               	movlw	0
  4224  001ACC  6E41               	movwf	_tmr5_cnt,c
  4225                           
  4226                           ;main.c: 183: T5CONbits.TMR5ON = 0;
  4227  001ACE  010F               	movlb	15	; () banked
  4228  001AD0  914E               	bcf	78,0,b	;volatile
  4229                           
  4230                           ; BSR set to: 15
  4231                           ;main.c: 184: PIE5bits.TMR5IE = 0;
  4232  001AD2  927D               	bcf	3965,1,c	;volatile
  4233                           
  4234                           ; BSR set to: 15
  4235  001AD4  0012               	return		;funcret
  4236  001AD6                     __end_ofi2_disable_tmr5:
  4237                           	opt stack 0
  4238                           pclatu	equ	0xFFB
  4239                           pclath	equ	0xFFA
  4240                           tblptru	equ	0xFF8
  4241                           tblptrh	equ	0xFF7
  4242                           tblptrl	equ	0xFF6
  4243                           tablat	equ	0xFF5
  4244                           prodh	equ	0xFF4
  4245                           prodl	equ	0xFF3
  4246                           intcon	equ	0xFF2
  4247                           postinc0	equ	0xFEE
  4248                           fsr0h	equ	0xFEA
  4249                           fsr0l	equ	0xFE9
  4250                           wreg	equ	0xFE8
  4251                           indf1	equ	0xFE7
  4252                           postdec1	equ	0xFE5
  4253                           plusw1	equ	0xFE3
  4254                           fsr1h	equ	0xFE2
  4255                           fsr1l	equ	0xFE1
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           plusw2	equ	0xFDB
  4259                           fsr2h	equ	0xFDA
  4260                           fsr2l	equ	0xFD9
  4261                           status	equ	0xFD8
  4262                           pclatu	equ	0xFFB
  4263                           pclath	equ	0xFFA
  4264                           tblptru	equ	0xFF8
  4265                           tblptrh	equ	0xFF7
  4266                           tblptrl	equ	0xFF6
  4267                           tablat	equ	0xFF5
  4268                           prodh	equ	0xFF4
  4269                           prodl	equ	0xFF3
  4270                           intcon	equ	0xFF2
  4271                           postinc0	equ	0xFEE
  4272                           fsr0h	equ	0xFEA
  4273                           fsr0l	equ	0xFE9
  4274                           wreg	equ	0xFE8
  4275                           indf1	equ	0xFE7
  4276                           postdec1	equ	0xFE5
  4277                           plusw1	equ	0xFE3
  4278                           fsr1h	equ	0xFE2
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           postinc2	equ	0xFDE
  4282                           plusw2	equ	0xFDB
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287                           	psect	rparam
  4288  0000                     pclatu	equ	0xFFB
  4289                           pclath	equ	0xFFA
  4290                           tblptru	equ	0xFF8
  4291                           tblptrh	equ	0xFF7
  4292                           tblptrl	equ	0xFF6
  4293                           tablat	equ	0xFF5
  4294                           prodh	equ	0xFF4
  4295                           prodl	equ	0xFF3
  4296                           intcon	equ	0xFF2
  4297                           postinc0	equ	0xFEE
  4298                           fsr0h	equ	0xFEA
  4299                           fsr0l	equ	0xFE9
  4300                           wreg	equ	0xFE8
  4301                           indf1	equ	0xFE7
  4302                           postdec1	equ	0xFE5
  4303                           plusw1	equ	0xFE3
  4304                           fsr1h	equ	0xFE2
  4305                           fsr1l	equ	0xFE1
  4306                           indf2	equ	0xFDF
  4307                           postinc2	equ	0xFDE
  4308                           plusw2	equ	0xFDB
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           status	equ	0xFD8
  4312                           
  4313                           	psect	temp
  4314  000044                     btemp:
  4315                           	opt stack 0
  4316  000044                     	ds	1
  4317  0000                     int$flags	set	btemp
  4318  0000                     wtemp6	set	btemp+1
  4319                           pclatu	equ	0xFFB
  4320                           pclath	equ	0xFFA
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           postinc0	equ	0xFEE
  4329                           fsr0h	equ	0xFEA
  4330                           fsr0l	equ	0xFE9
  4331                           wreg	equ	0xFE8
  4332                           indf1	equ	0xFE7
  4333                           postdec1	equ	0xFE5
  4334                           plusw1	equ	0xFE3
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           indf2	equ	0xFDF
  4338                           postinc2	equ	0xFDE
  4339                           plusw2	equ	0xFDB
  4340                           fsr2h	equ	0xFDA
  4341                           fsr2l	equ	0xFD9
  4342                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    111
    Data        219
    BSS         233
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      67
    BANK0           160    132     156
    BANK1           256      0     237
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    md_uart_write_str_ok@data	PTR unsigned char  size(2) Largest target is 47
		 -> close_socket_ok@deactivatePDP(BANK0[15]), close_socket_ok@closeSocket(BANK0[10]), send_over_socket_ok@terminateData(BANK0[1]), send_over_socket_ok@msg(BANK0[8]), 
		 -> send_over_socket_ok@srecv(BANK0[16]), send_over_socket_ok@ssend(BANK0[13]), send_over_socket_ok@openConnection(BANK0[44]), setup_data_ok@activatePDP(BANK0[15]), 
		 -> setup_data_ok@cfgSocket(BANK0[25]), setup_data_ok@setApn(BANK0[47]), send_md_cfg_cmds_ok@csq(BANK0[9]), send_md_cfg_cmds_ok@gprs(BANK0[11]), 
		 -> send_md_cfg_cmds_ok@cereg(BANK0[12]), send_md_cfg_cmds_ok@creg(BANK0[11]), send_md_cfg_cmds_ok@cpin(BANK0[11]), send_md_cfg_cmds_ok@queryVersion(BANK0[10]), 
		 -> send_md_cfg_cmds_ok@ledpattern(BANK0[12]), send_md_cfg_cmds_ok@ledCfg(BANK0[16]), send_md_cfg_cmds_ok@baud(BANK0[16]), send_md_cfg_cmds_ok@cmee(BANK0[12]), 
		 -> send_md_cfg_cmds_ok@ate(BANK0[7]), send_md_cfg_cmds_ok@at(BANK0[5]), 


Critical Paths under _main in COMRAM

    _check_modem_state->_send_over_socket_ok
    _setup_data_ok->_md_uart_write_str_ok
    _send_over_socket_ok->_md_uart_write_str_ok
    _send_md_cfg_cmds_ok->_md_uart_write_str_ok
    _close_socket_ok->_md_uart_write_str_ok
    _md_uart_write_str_ok->_md_uart_send

Critical Paths under _isr in COMRAM

    _isr->_check_mdstate_tmr5

Critical Paths under _main in BANK0

    _check_modem_state->_send_md_cfg_cmds_ok

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   36028
                                             35 COMRAM     1     1      0
                  _check_modem_state
                           _init_pic
           _start_modem_send_process
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_modem_state                                    0     0      0   36028
                    _close_socket_ok
                _send_md_cfg_cmds_ok
                _send_over_socket_ok
                      _setup_data_ok
           _start_modem_send_process
 ---------------------------------------------------------------------------------
 (1) _start_modem_send_process                             2     2      0       0
                                             21 COMRAM     2     2      0
                _start_md_boot_timer
 ---------------------------------------------------------------------------------
 (2) _start_md_boot_timer                                  0     0      0       0
                  _reload_tmr5_pt25s
 ---------------------------------------------------------------------------------
 (2) _setup_data_ok                                       87    87      0    8907
                                              0 BANK0     87    87      0
                       _init_md_uart
               _md_uart_write_str_ok
                  _terminate_md_uart
 ---------------------------------------------------------------------------------
 (2) _send_over_socket_ok                                 84    84      0    8987
                                             33 COMRAM     2     2      0
                                              0 BANK0     82    82      0
                       _init_md_uart
               _md_uart_write_str_ok
                  _terminate_md_uart
 ---------------------------------------------------------------------------------
 (2) _send_md_cfg_cmds_ok                                132   132      0    9267
                                              0 BANK0    132   132      0
                       _init_md_uart
               _md_uart_write_str_ok
                  _terminate_md_uart
 ---------------------------------------------------------------------------------
 (2) _close_socket_ok                                     25    25      0    8867
                                              0 BANK0     25    25      0
                       _init_md_uart
               _md_uart_write_str_ok
                  _terminate_md_uart
 ---------------------------------------------------------------------------------
 (3) _terminate_md_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _md_uart_write_str_ok                                11     6      5    8787
                                             22 COMRAM    11     6      5
                       _disable_tmr5
                       _md_uart_send
                  _reload_tmr5_pt25s
 ---------------------------------------------------------------------------------
 (3) _reload_tmr5_pt25s                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _md_uart_send                                         1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _disable_tmr5                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_md_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 20    20      0       0
                                              1 COMRAM    20    20      0
                 _check_mdstate_tmr5
                   _disable_md_rxint
                     i2_disable_tmr5
                i2_reload_tmr5_pt25s
 ---------------------------------------------------------------------------------
 (6) i2_reload_tmr5_pt25s                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _disable_md_rxint                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _check_mdstate_tmr5                                   1     1      0       0
                                              0 COMRAM     1     1      0
                     i2_disable_tmr5
 ---------------------------------------------------------------------------------
 (6) i2_disable_tmr5                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_modem_state
     _close_socket_ok
       _init_md_uart
       _md_uart_write_str_ok
         _disable_tmr5
         _md_uart_send
         _reload_tmr5_pt25s
       _terminate_md_uart
     _send_md_cfg_cmds_ok
       _init_md_uart
       _md_uart_write_str_ok
         _disable_tmr5
         _md_uart_send
         _reload_tmr5_pt25s
       _terminate_md_uart
     _send_over_socket_ok
       _init_md_uart
       _md_uart_write_str_ok
         _disable_tmr5
         _md_uart_send
         _reload_tmr5_pt25s
       _terminate_md_uart
     _setup_data_ok
       _init_md_uart
       _md_uart_write_str_ok
         _disable_tmr5
         _md_uart_send
         _reload_tmr5_pt25s
       _terminate_md_uart
     _start_modem_send_process
       _start_md_boot_timer
         _reload_tmr5_pt25s
   _init_pic
   _start_modem_send_process
     _start_md_boot_timer
       _reload_tmr5_pt25s

 _isr (ROOT)
   _check_mdstate_tmr5
     i2_disable_tmr5
   _disable_md_rxint
   i2_disable_tmr5
   i2_reload_tmr5_pt25s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      43       1       71.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26C      12        0.0%
DATA                 0      0     26C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 20 14:27:32 2018

                        ??_disable_tmr5 0016                             __CFG_CP0$ON 000000  
                           __CFG_CP1$ON 000000                             __CFG_CP2$ON 000000  
                           __CFG_CP3$ON 000000                             __CFG_CPB$ON 000000  
                      ?_close_socket_ok 0001                             __CFG_CPD$ON 000000  
      __end_ofsend_over_socket_ok@F6860 1059        __end_ofsend_over_socket_ok@F6862 103D  
      __end_ofsend_over_socket_ok@F6864 106B        __end_ofsend_over_socket_ok@F6858 102D  
                     ?_disable_md_rxint 0001                                     l121 1A36  
                                   l123 1A4E                                     l251 10F8  
                                   l243 1098                                     l244 12AA  
                                   l253 110C                                     l245 10AA  
                                   l246 10E8                                     l350 189A  
                                   l263 11BE                                     l255 1110  
                                   l247 10B4                                     l256 128A  
                                   l352 18B0                                     l257 1270  
                                   l345 18E4                                     l353 18BC  
                                   l274 1294                                     l258 111E  
                                   l338 1A00                                     l267 126E  
                                   l355 18C8                                     l348 188C  
                                   l357 18CC                                     _GIE 007F97  
                                   _isr 0008                      ??_disable_md_rxint 0001  
                                   prod 000FF3                                     wreg 000FE8  
                            _TXSTA1bits 000FAC                            __CFG_LVP$OFF 000000  
                                  l2103 1AB4                                    ?_isr 0001  
                                  u2057 1A40                                    u2067 19F4  
                                  u2077 159C                                    u2087 129E  
                                  u1720 127C                                    u1640 11B0  
                                  u1801 12EA                                    u1730 1282  
                                  u1811 12FC                                    u1821 130E  
                                  u1901 1802                                    u1831 1320  
                                  u1911 1814                                    u1760 12B8  
                                  u1841 1332                                    u1921 1826  
                                  u1930 14D4                                    u1851 1344  
                                  u1940 14EC                                    u1861 1356  
                                  u1781 12C6                                    u1950 1504  
                                  u1871 1368                                    u1791 12D8  
                                  u1960 151C                                    u1881 137A  
                                  u1970 191C                                    u1891 138C  
                                  _PEIE 007F96                                    u1980 1934  
                       __end_of_VERSION 1070                                    _main 1A32  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  btemp 0044                           __CFG_BORV$190 000000  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0222                           __CFG_IESO$OFF 000000  
                          ___param_bank 000000            __size_of_start_md_boot_timer 0006  
                                 ??_isr 0002                            _BAUDCON1bits 000FB8  
                                 ?_main 0001                           ?_md_uart_send 0001  
                                 _CREN1 007D5C                                   _T0CON 000FD5  
                                 _RC1IE 007CED                                   _RC1IF 007CF5  
                                 _T5CON 000F4E                                   i2l110 010E  
                                 i2l114 01C6                                   i2l115 01D6  
                                 i2l108 007C                                   i2l150 1666  
                                 i2l142 15F6                                   i2l144 1612  
                                 i2l138 1682                                   i2l146 162E  
                                 i2l139 15CC                                   i2l148 164A  
                    setup_data_ok@F6851 012F                      setup_data_ok@F6853 0168  
                    setup_data_ok@F6849 0100                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _TMR5H 000F50  
                                 _TMR5L 000F4F                                   _TRMT1 007D61  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                       ??_setup_data_ok 0022                          __CFG_EBTRB$OFF 000000  
              setup_data_ok@activatePDP 00A8                      __CFG_MCLRE$INTMCLR 000000  
                                 pclath 000FFA                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8              ??_start_modem_send_process 0016  
                                 wtemp6 0045                          __CFG_HFOFST$ON 000000  
                       __initialization 175E                            __end_of_main 1A54  
           __end_of_send_over_socket_ok 15CA                          ??_md_uart_send 0016  
                                ??_main 0024                           __activetblptr 000002  
                  close_socket_ok@F6873 1059                    close_socket_ok@F6875 103D  
                     _terminate_md_uart 1AD6             __end_of_send_md_cfg_cmds_ok 14C6  
      send_over_socket_ok@terminateData 00B1                      ?_terminate_md_uart 0001  
                  __end_of_disable_tmr5 1ACA                                  _ANSELA 000F38  
                                _ANSELB 000F39                                  _ANSELC 000F3A  
                 send_md_cfg_cmds_ok@at 00DF                                  _RC1REG 000FAE  
                        __CFG_WDTEN$OFF 000000                           ?_init_md_uart 0001  
                                _SPBRG1 000FAF                                  _TMR0IF 007F92  
                                _TMR5IF 007BF1                                  _TX1REG 000FAD  
                   ??_terminate_md_uart 0016                          __CFG_XINST$OFF 000000  
                        __CFG_STVREN$ON 000000            __size_ofi2_reload_tmr5_pt25s 001A  
                                _endPtr 0040                        __end_of_init_pic 19E0  
         __size_of_md_uart_write_str_ok 024A                                  clear_0 17C4  
                                clear_1 17D0                                  clear_2 17E4  
             __end_of_terminate_md_uart 1AE0                            __pdataCOMRAM 0025  
                   setup_data_ok@setApn 0060                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                          ??_init_md_uart 0016  
                            __accesstop 0060                 __end_of__initialization 17EA  
                       __CFG_PBADEN$OFF 000000                           ___rparam_used 000001  
                        __pcstackCOMRAM 0001                            __pidataBANK0 1A9D  
                          __pidataBANK1 16AC              close_socket_ok@closeSocket 006F  
            __end_of_check_mdstate_tmr5 16AC                       _check_modem_state 188A  
                    ?_check_modem_state 0001                     _start_md_boot_timer 1AE8  
                            __pbssBANK0 00F9                              __pbssBANK1 01B1  
                            __pbssBANK2 0200                         __CFG_PLLCFG$OFF 000000  
      __end_of_start_modem_send_process 1A0E               __size_of_disable_md_rxint 0008  
                  __end_of_md_uart_send 1ABE                     ??_check_modem_state 0024  
                    __CFG_CCP2MX$PORTC1 000000                    ?_start_md_boot_timer 0001  
                    __CFG_CCP3MX$PORTB5 000000               __end_of_check_modem_state 190E  
                send_md_cfg_cmds_ok@ate 00D8              __size_of_terminate_md_uart 000A  
                send_md_cfg_cmds_ok@csq 00CF                              _ledPattern 0043  
                 __size_of_disable_tmr5 000C                __size_of_close_socket_ok 006C  
                               _SPBRGH1 000FB0                                 _VERSION 106B  
                             ?_init_pic 0001                         __CFG_PWRTEN$OFF 000000  
            md_uart_write_str_ok@wantOk 001A                                 __Hparam 0000  
                               __Lparam 0000               md_uart_write_str_ok@index 001F  
                 ??_start_md_boot_timer 0016                send_md_cfg_cmds_ok@F6821 0148  
              send_md_cfg_cmds_ok@F6813 00F4                send_md_cfg_cmds_ok@F6823 0183  
              send_md_cfg_cmds_ok@F6831 0177                send_md_cfg_cmds_ok@F6815 00ED  
              send_md_cfg_cmds_ok@F6833 019B                send_md_cfg_cmds_ok@F6817 018F  
              send_md_cfg_cmds_ok@F6825 0030                send_md_cfg_cmds_ok@F6819 0158  
              send_md_cfg_cmds_ok@F6835 00E4                send_md_cfg_cmds_ok@F6827 0025  
              send_md_cfg_cmds_ok@F6829 01A6                            _disable_tmr5 1ABE  
                          __psmallconst 1000                                 __pcinit 175E  
                               __ramtop 1000                    __end_of_init_md_uart 1A32  
                               _mdRxBuf 0200                                 __ptext0 1A32  
                               __ptext1 197A                                 __ptext2 188A  
                               __ptext3 19E0                                 __ptext4 1AE8  
                               __ptext5 17F8                                 __ptext6 14C6  
                               __ptext7 12BC                                 __ptext8 190E  
                               __ptext9 1AD6                 __size_ofi2_disable_tmr5 000C  
                       _ledPatternCount 0042                send_md_cfg_cmds_ok@cereg 0098  
                          __size_of_isr 021A                              _receivedOK 003F  
                             _T5CONbits 000F4E                     i2_reload_tmr5_pt25s 1A6E  
             send_md_cfg_cmds_ok@ledCfg 0070                   __end_of_setup_data_ok 188A  
                  end_of_initialization 17EA                           __Lmediumconst 0000  
               md_uart_write_str_ok@pos 0021                              ??_init_pic 0016  
                               postdec1 000FE5                    ?i2_reload_tmr5_pt25s 0001  
                               postinc0 000FEE                                 postinc2 000FDE  
     __size_of_start_modem_send_process 002E                               _PORTAbits 000F80  
                             _PORTBbits 000F81               ?_start_modem_send_process 0001  
                             _PORTCbits 000F82              __size_of_check_modem_state 0084  
          __size_of_send_over_socket_ok 0104                               _TRISAbits 000F92  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                 __size_of_md_uart_send 000C            __end_of_md_uart_write_str_ok 12BC  
                     ??_close_socket_ok 0022                        _disable_md_rxint 1AE0  
          __size_of_send_md_cfg_cmds_ok 020A                   ??i2_reload_tmr5_pt25s 0001  
                           _BAUDCONbits 000FB8  md_uart_write_str_ok@waitToSendMoreData 001B  
                         __pidataCOMRAM 1A88                            _md_uart_send 1AB2  
                   start_initialization 175E                             __end_of_isr 0222  
              send_over_socket_ok@F6860 104C                send_over_socket_ok@F6862 102D  
              send_over_socket_ok@F6864 1063                send_over_socket_ok@F6858 1001  
                    _check_mdstate_tmr5 15CA                     ?_check_mdstate_tmr5 0001  
         send_md_cfg_cmds_ok@ledpattern 008C                send_over_socket_ok@srecv 008C  
              send_over_socket_ok@ssend 009C                   __size_of_init_md_uart 0024  
                           __pdataBANK0 00E4                             __pdataBANK1 0100  
                        i2_disable_tmr5 1ACA                             __pbssCOMRAM 003A  
                  ??_check_mdstate_tmr5 0001                           __pcstackBANK0 0060  
                          _init_md_uart 1A0E                       __size_of_init_pic 0066  
                             __pintcode 0008          md_uart_write_str_ok@numRetries 001E  
                       _bootTimerIsDone 00FA                  __end_ofi2_disable_tmr5 1AD6  
                  _md_uart_write_str_ok 1072                        __CFG_PRICLKEN$ON 000000  
                           __smallconst 1000            close_socket_ok@deactivatePDP 0060  
     send_over_socket_ok@openConnection 0060                 send_md_cfg_cmds_ok@baud 0060  
               send_md_cfg_cmds_ok@cmee 0080                 send_md_cfg_cmds_ok@creg 00AF  
               send_md_cfg_cmds_ok@cpin 00A4                 send_md_cfg_cmds_ok@gprs 00BA  
                          _receivedRESP 003D                                _LATBbits 000F8A  
           __end_of_start_md_boot_timer 1AEE                                _LATCbits 000F8B  
                              _PIE1bits 000F9D                                _PIE5bits 000F7D  
                   _send_over_socket_ok 14C6                                i2u141_40 00F2  
                              _PIR1bits 000F9E                                _PIR5bits 000F7E  
                      __CFG_WDTPS$32768 000000                       _reload_tmr5_pt25s 1A54  
                       ?i2_disable_tmr5 0001                   ?_md_uart_write_str_ok 0017  
                    ?_reload_tmr5_pt25s 0001                            _referenceBuf 01B1  
              __end_of_disable_md_rxint 1AE8                     _send_md_cfg_cmds_ok 12BC  
                  ?_send_over_socket_ok 0001                         _close_socket_ok 190E  
                setup_data_ok@cfgSocket 008F                     ??_reload_tmr5_pt25s 0016  
                             copy_data0 1772                               copy_data1 1792  
                             copy_data2 17B2                    ?_send_md_cfg_cmds_ok 0001  
                              __Hrparam 0000                             _pdpIsActive 00F9  
             __end_of_reload_tmr5_pt25s 1A6E                                __Lrparam 0000  
                    __CFG_BOREN$SBORDIS 000000                       __CFG_P2BMX$PORTB5 000000  
                __size_of_setup_data_ok 0092                   ??_send_over_socket_ok 0022  
                           _currentChar 003B         md_uart_write_str_ok@currentChar 0020  
                              __ptext10 1072                                __ptext11 1A54  
                              __ptext12 1AB2                                __ptext13 1ABE  
                              __ptext14 1A0E                                __ptext16 1A6E  
                              __ptext17 1AE0                                __ptext18 15CA  
                              __ptext19 1ACA                                _lastChar 003A  
                              _md_state 00FB                   ??_send_md_cfg_cmds_ok 0022  
                         __size_of_main 0022                                _init_pic 197A  
           __end_ofi2_reload_tmr5_pt25s 1A88                             _receivedERR 003E  
                              _tmr5_cnt 0041                              _RC1STAbits 000FAB  
       send_md_cfg_cmds_ok@queryVersion 00C5                                _timedOut 003C  
                ??_md_uart_write_str_ok 001C                                int$flags 0044  
              _start_modem_send_process 19E0                 __end_of_close_socket_ok 197A  
                            _INTCONbits 000FF2                  send_over_socket_ok@msg 00A9  
              md_uart_write_str_ok@data 0017                md_uart_write_str_ok@len1 0019  
                              intlevel2 0000                           _setup_data_ok 17F8  
                            _RCSTA1bits 000FAB                              _OSCCONbits 000FD3  
            __size_of_reload_tmr5_pt25s 001A                        md_uart_send@data 0016  
                         ?_disable_tmr5 0001             __size_of_check_mdstate_tmr5 00E2  
                     __CFG_T3CMX$PORTC0 000000                          ?_setup_data_ok 0001  
                     __CFG_FOSC$INTIO67 000000            __end_ofclose_socket_ok@F6873 1063  
          __end_ofclose_socket_ok@F6875 104C                        ??i2_disable_tmr5 0001  
