

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 16 17:02:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F26K22 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  0014D2                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _VERSION
    75  0014D2  32                 	db	50
    76  0014D3  30                 	db	48
    77  0014D4  32                 	db	50
    78  0014D5  30                 	db	48
    79  0014D6  00                 	db	0
    80                           
    81                           ;initializer for _waiting
    82  0014D7  01                 	db	1
    83                           
    84                           ;initializer for _toggleLED
    85  0014D8  01                 	db	1
    86                           
    87                           	psect	smallconst
    88  001000                     __psmallconst:
    89                           	opt stack 0
    90  001000  00                 	db	0
    91  001001                     init_modem_io_ok@F6772:
    92                           	opt stack 0
    93  001001  41                 	db	65
    94  001002  54                 	db	84
    95  001003  23                 	db	35
    96  001004  47                 	db	71
    97  001005  50                 	db	80
    98  001006  49                 	db	73
    99  001007  4F                 	db	79
   100  001008  3D                 	db	61
   101  001009  37                 	db	55
   102  00100A  2C                 	db	44
   103  00100B  30                 	db	48
   104  00100C  2C                 	db	44
   105  00100D  32                 	db	50
   106  00100E  0D                 	db	13
   107  00100F  0A                 	db	10
   108  001010  00                 	db	0
   109  001011                     __end_ofinit_modem_io_ok@F6772:
   110                           	opt stack 0
   111  001011                     wakeup_modem_ok@F6765:
   112                           	opt stack 0
   113  001011  41                 	db	65
   114  001012  54                 	db	84
   115  001013  2B                 	db	43
   116  001014  49                 	db	73
   117  001015  50                 	db	80
   118  001016  52                 	db	82
   119  001017  3D                 	db	61
   120  001018  31                 	db	49
   121  001019  31                 	db	49
   122  00101A  35                 	db	53
   123  00101B  32                 	db	50
   124  00101C  30                 	db	48
   125  00101D  30                 	db	48
   126  00101E  0D                 	db	13
   127  00101F  0A                 	db	10
   128  001020  00                 	db	0
   129  001021                     __end_ofwakeup_modem_ok@F6765:
   130                           	opt stack 0
   131  001021                     sim_card_ok@F6783:
   132                           	opt stack 0
   133  001021  2B                 	db	43
   134  001022  43                 	db	67
   135  001023  50                 	db	80
   136  001024  49                 	db	73
   137  001025  4E                 	db	78
   138  001026  3A                 	db	58
   139  001027  20                 	db	32
   140  001028  52                 	db	82
   141  001029  45                 	db	69
   142  00102A  41                 	db	65
   143  00102B  44                 	db	68
   144  00102C  59                 	db	89
   145  00102D  00                 	db	0
   146  00102E                     __end_ofsim_card_ok@F6783:
   147                           	opt stack 0
   148  00102E                     init_modem_io_ok@F6776:
   149                           	opt stack 0
   150  00102E  41                 	db	65
   151  00102F  54                 	db	84
   152  001030  23                 	db	35
   153  001031  53                 	db	83
   154  001032  4C                 	db	76
   155  001033  45                 	db	69
   156  001034  44                 	db	68
   157  001035  3D                 	db	61
   158  001036  34                 	db	52
   159  001037  0D                 	db	13
   160  001038  0A                 	db	10
   161  001039  00                 	db	0
   162  00103A                     __end_ofinit_modem_io_ok@F6776:
   163                           	opt stack 0
   164  00103A                     sim_card_ok@F6781:
   165                           	opt stack 0
   166  00103A  41                 	db	65
   167  00103B  54                 	db	84
   168  00103C  2B                 	db	43
   169  00103D  43                 	db	67
   170  00103E  50                 	db	80
   171  00103F  49                 	db	73
   172  001040  4E                 	db	78
   173  001041  3F                 	db	63
   174  001042  0D                 	db	13
   175  001043  0A                 	db	10
   176  001044  00                 	db	0
   177  001045                     __end_ofsim_card_ok@F6781:
   178                           	opt stack 0
   179  001045                     init_modem_io_ok@F6774:
   180                           	opt stack 0
   181  001045  41                 	db	65
   182  001046  54                 	db	84
   183  001047  23                 	db	35
   184  001048  43                 	db	67
   185  001049  47                 	db	71
   186  00104A  4D                 	db	77
   187  00104B  52                 	db	82
   188  00104C  0D                 	db	13
   189  00104D  0A                 	db	10
   190  00104E  00                 	db	0
   191  00104F                     __end_ofinit_modem_io_ok@F6774:
   192                           	opt stack 0
   193  00104F                     _default_ACCT:
   194                           	opt stack 0
   195  00104F  30                 	db	48
   196  001050  30                 	db	48
   197  001051  30                 	db	48
   198  001052  30                 	db	48
   199  001053  23                 	db	35
   200  001054  00                 	db	0
   201  001055                     __end_of_default_ACCT:
   202                           	opt stack 0
   203  001055                     _default_ACCESS_CODE:
   204                           	opt stack 0
   205  001055  31                 	db	49
   206  001056  31                 	db	49
   207  001057  31                 	db	49
   208  001058  31                 	db	49
   209  001059  23                 	db	35
   210  00105A  00                 	db	0
   211  00105B                     __end_of_default_ACCESS_CODE:
   212                           	opt stack 0
   213  00105B                     wakeup_modem_ok@F6763:
   214                           	opt stack 0
   215  00105B  41                 	db	65
   216  00105C  54                 	db	84
   217  00105D  0D                 	db	13
   218  00105E  0A                 	db	10
   219  00105F  00                 	db	0
   220  001060                     __end_ofwakeup_modem_ok@F6763:
   221                           	opt stack 0
   222  001060                     _default_LINE_CARD:
   223                           	opt stack 0
   224  001060  31                 	db	49
   225  001061  23                 	db	35
   226  001062  00                 	db	0
   227  001063                     __end_of_default_LINE_CARD:
   228                           	opt stack 0
   229  001063                     _default_PORT4:
   230                           	opt stack 0
   231  001063  07E4               	dw	2020
   232  001065                     __end_of_default_PORT4:
   233                           	opt stack 0
   234  001065                     _default_PORT3:
   235                           	opt stack 0
   236  001065  07E4               	dw	2020
   237  001067                     __end_of_default_PORT3:
   238                           	opt stack 0
   239  001067                     _default_PORT2:
   240                           	opt stack 0
   241  001067  07E4               	dw	2020
   242  001069                     __end_of_default_PORT2:
   243                           	opt stack 0
   244  001069                     _default_PORT1:
   245                           	opt stack 0
   246  001069  07E4               	dw	2020
   247  00106B                     __end_of_default_PORT1:
   248                           	opt stack 0
   249  00106B                     _default_IP4:
   250                           	opt stack 0
   251  00106B  23                 	db	35
   252  00106C  00                 	db	0
   253  00106D                     __end_of_default_IP4:
   254                           	opt stack 0
   255  00106D                     _default_IP3:
   256                           	opt stack 0
   257  00106D  23                 	db	35
   258  00106E  00                 	db	0
   259  00106F                     __end_of_default_IP3:
   260                           	opt stack 0
   261  00106F                     _default_IP2:
   262                           	opt stack 0
   263  00106F  23                 	db	35
   264  001070  00                 	db	0
   265  001071                     __end_of_default_IP2:
   266                           	opt stack 0
   267  001071                     _default_IP1:
   268                           	opt stack 0
   269  001071  23                 	db	35
   270  001072  00                 	db	0
   271  001073                     __end_of_default_IP1:
   272                           	opt stack 0
   273  001073                     _default_APN:
   274                           	opt stack 0
   275  001073  23                 	db	35
   276  001074  00                 	db	0
   277  001075                     __end_of_default_APN:
   278                           	opt stack 0
   279  001075                     _default_ENCRYPTION:
   280                           	opt stack 0
   281  001075  01                 	db	1
   282  001076                     __end_of_default_ENCRYPTION:
   283                           	opt stack 0
   284  001076                     _default_SMS_WAIT_TIME:
   285                           	opt stack 0
   286  001076  0A                 	db	10
   287  001077                     __end_of_default_SMS_WAIT_TIME:
   288                           	opt stack 0
   289  001077                     _default_RETRY:
   290                           	opt stack 0
   291  001077  0A                 	db	10
   292  001078                     __end_of_default_RETRY:
   293                           	opt stack 0
   294  001078                     _default_CYCLE:
   295                           	opt stack 0
   296  001078  02                 	db	2
   297  001079                     __end_of_default_CYCLE:
   298                           	opt stack 0
   299  001079                     _default_TP_PIN:
   300                           	opt stack 0
   301  001079  00                 	db	0
   302  00107A                     __end_of_default_TP_PIN:
   303                           	opt stack 0
   304  00107A                     _default_ZONE2:
   305                           	opt stack 0
   306  00107A  14                 	db	20
   307  00107B                     __end_of_default_ZONE2:
   308                           	opt stack 0
   309  00107B                     _default_ZONE1:
   310                           	opt stack 0
   311  00107B  01                 	db	1
   312  00107C                     __end_of_default_ZONE1:
   313                           	opt stack 0
   314  00107C                     _default_SERVER_ACK_TIME:
   315                           	opt stack 0
   316  00107C  2D                 	db	45
   317  00107D                     __end_of_default_SERVER_ACK_TIME:
   318                           	opt stack 0
   319  00107D                     _default_TEST_FREQ:
   320                           	opt stack 0
   321  00107D  0F                 	db	15
   322  00107E                     __end_of_default_TEST_FREQ:
   323                           	opt stack 0
   324  00107E                     _default_PROGRAM_ACK:
   325                           	opt stack 0
   326  00107E  01                 	db	1
   327  00107F                     __end_of_default_PROGRAM_ACK:
   328                           	opt stack 0
   329  0000                     _ANSELB	set	3897
   330  0000                     _ANSELC	set	3898
   331  0000                     _ANSELA	set	3896
   332  0000                     _EECON2	set	4007
   333  0000                     _EEDATA	set	4008
   334  0000                     _EEADR	set	4009
   335  0000                     _EEADRH	set	4010
   336  0000                     _TX2REG	set	3955
   337  0000                     _TX1REG	set	4013
   338  0000                     _RC1REG	set	4014
   339  0000                     _T3CON	set	4017
   340  0000                     _PIR1bits	set	3998
   341  0000                     _RCSTA1bits	set	4011
   342  0000                     _RC1STAbits	set	4011
   343  0000                     _SPBRG1	set	4015
   344  0000                     _SPBRGH1	set	4016
   345  0000                     _TXSTA1bits	set	4012
   346  0000                     _BAUDCONbits	set	4024
   347  0000                     _BAUDCON1bits	set	4024
   348  0000                     _PIE3bits	set	4003
   349  0000                     _PIE3	set	4003
   350  0000                     _INTCON	set	4082
   351  0000                     _SPBRGH2	set	3958
   352  0000                     _SPBRG2	set	3957
   353  0000                     _BAUDCON2	set	3952
   354  0000                     _RC2STA	set	3953
   355  0000                     _TXSTA2bits	set	3954
   356  0000                     _RC2STAbits	set	3953
   357  0000                     _TX2STAbits	set	3954
   358  0000                     _TMR0H	set	4055
   359  0000                     _TMR0L	set	4054
   360  0000                     _T0CON	set	4053
   361  0000                     _TMR3L	set	4018
   362  0000                     _TMR3H	set	4019
   363  0000                     _PIR2bits	set	4001
   364  0000                     _PIE2bits	set	4000
   365  0000                     _T3CONbits	set	4017
   366  0000                     _IOCBbits	set	3938
   367  0000                     _PORTAbits	set	3968
   368  0000                     _PORTBbits	set	3969
   369  0000                     _LATCbits	set	3979
   370  0000                     _TRISCbits	set	3988
   371  0000                     _PORTCbits	set	3970
   372  0000                     _TRISBbits	set	3987
   373  0000                     _LATBbits	set	3978
   374  0000                     _LATAbits	set	3977
   375  0000                     _TRISAbits	set	3986
   376  0000                     _OSCCONbits	set	4051
   377  0000                     _RC2REG	set	3956
   378  0000                     _INTCONbits	set	4082
   379  0000                     _WR	set	32049
   380  0000                     _WREN	set	32050
   381  0000                     _RD	set	32048
   382  0000                     _EEPGD	set	32055
   383  0000                     _CFGS	set	32054
   384  0000                     _GIE	set	32663
   385  0000                     _TRMT2	set	31633
   386  0000                     _CREN2	set	31628
   387  0000                     _TRMT1	set	32097
   388  0000                     _TMR3ON	set	32136
   389  0000                     _RC1IF	set	31989
   390  0000                     _CREN1	set	32092
   391  0000                     _RC1IE	set	31981
   392  0000                     _RC2IE	set	32029
   393  0000                     _WPUB5	set	31501
   394  0000                     _TMR0IE	set	32661
   395  0000                     _RC2IF	set	32037
   396  0000                     _TMR3IF	set	32009
   397  0000                     _TMR0IF	set	32658
   398                           
   399                           ; #config settings
   400  00107F  00                 	db	0	; dummy byte at the end
   401  0000                     
   402                           	psect	cinit
   403  001366                     __pcinit:
   404                           	opt stack 0
   405  001366                     start_initialization:
   406                           	opt stack 0
   407  001366                     __initialization:
   408                           	opt stack 0
   409                           
   410                           ; Initialize objects allocated to COMRAM (7 bytes)
   411                           ; load TBLPTR registers with __pidataCOMRAM
   412  001366  0ED2               	movlw	low __pidataCOMRAM
   413  001368  6EF6               	movwf	tblptrl,c
   414  00136A  0E14               	movlw	high __pidataCOMRAM
   415  00136C  6EF7               	movwf	tblptrh,c
   416  00136E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   417  001370  6EF8               	movwf	tblptru,c
   418  001372  EE00  F030         	lfsr	0,__pdataCOMRAM
   419  001376  EE10 F007          	lfsr	1,7
   420  00137A                     copy_data0:
   421  00137A  0009               	tblrd		*+
   422  00137C  CFF5 FFEE          	movff	tablat,postinc0
   423  001380  50E5               	movf	postdec1,w,c
   424  001382  50E1               	movf	fsr1l,w,c
   425  001384  E1FA               	bnz	copy_data0
   426                           
   427                           ; Clear objects allocated to BANK0 (148 bytes)
   428  001386  EE00  F060         	lfsr	0,__pbssBANK0
   429  00138A  0E94               	movlw	148
   430  00138C                     clear_0:
   431  00138C  6AEE               	clrf	postinc0,c
   432  00138E  06E8               	decf	wreg,f,c
   433  001390  E1FD               	bnz	clear_0
   434                           
   435                           ; Clear objects allocated to COMRAM (21 bytes)
   436  001392  EE00  F01B         	lfsr	0,__pbssCOMRAM
   437  001396  0E15               	movlw	21
   438  001398                     clear_1:
   439  001398  6AEE               	clrf	postinc0,c
   440  00139A  06E8               	decf	wreg,f,c
   441  00139C  E1FD               	bnz	clear_1
   442  00139E                     end_of_initialization:
   443                           	opt stack 0
   444  00139E                     __end_of__initialization:
   445                           	opt stack 0
   446  00139E  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   447  0013A0  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   448  0013A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   449  0013A4  6EF8               	movwf	tblptru,c
   450  0013A6  0100               	movlb	0
   451  0013A8  EF40  F00A         	goto	_main	;jump to C main() function
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	bssCOMRAM
   462  00001B                     __pbssCOMRAM:
   463                           	opt stack 0
   464  00001B                     _learn_timer_tick:
   465                           	opt stack 0
   466  00001B                     	ds	2
   467  00001D                     _buttonStillPressed:
   468                           	opt stack 0
   469  00001D                     	ds	1
   470  00001E                     _learnedSensorPtr:
   471                           	opt stack 0
   472  00001E                     	ds	1
   473  00001F                     _saveINTCONbits:
   474                           	opt stack 0
   475  00001F                     	ds	1
   476  000020                     _pie3SaveBits:
   477                           	opt stack 0
   478  000020                     	ds	1
   479  000021                     _intconSaveBits:
   480                           	opt stack 0
   481  000021                     	ds	1
   482  000022                     _state:
   483                           	opt stack 0
   484  000022                     	ds	1
   485  000023                     _rx_pos:
   486                           	opt stack 0
   487  000023                     	ds	1
   488  000024                     _tmr3_cnt:
   489                           	opt stack 0
   490  000024                     	ds	1
   491  000025                     _bled_tmr0_tick:
   492                           	opt stack 0
   493  000025                     	ds	1
   494  000026                     _gled_tmr0_tick:
   495                           	opt stack 0
   496  000026                     	ds	1
   497  000027                     _buttonPressCount:
   498                           	opt stack 0
   499  000027                     	ds	1
   500  000028                     _rxDataPending:
   501                           	opt stack 0
   502  000028                     	ds	1
   503  000029                     _inButtonMenu:
   504                           	opt stack 0
   505  000029                     	ds	1
   506  00002A                     _RS232Buf:
   507                           	opt stack 0
   508  00002A                     	ds	6
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           postdec1	equ	0xFE5
   516                           fsr1l	equ	0xFE1
   517                           
   518                           	psect	dataCOMRAM
   519  000030                     __pdataCOMRAM:
   520                           	opt stack 0
   521  000030                     _VERSION:
   522                           	opt stack 0
   523  000030                     	ds	5
   524  000035                     _waiting:
   525                           	opt stack 0
   526  000035                     	ds	1
   527  000036                     _toggleLED:
   528                           	opt stack 0
   529  000036                     	ds	1
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	bssBANK0
   540  000060                     __pbssBANK0:
   541                           	opt stack 0
   542  000060                     _learnedSensors:
   543                           	opt stack 0
   544  000060                     	ds	48
   545  000090                     _returnStr:
   546                           	opt stack 0
   547  000090                     	ds	100
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackCOMRAM
   558  000001                     __pcstackCOMRAM:
   559                           	opt stack 0
   560  000001                     ??_isr:
   561  000001                     
   562                           ; 1 bytes @ 0x0
   563  000001                     	ds	18
   564  000013                     rx_uart_transmit@data:
   565                           	opt stack 0
   566  000013                     alreadyLearned@id:
   567                           	opt stack 0
   568  000013                     add_sensor@id:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x12
   572  000013                     	ds	1
   573  000014                     rx_uart_write@data:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x13
   577  000014                     	ds	1
   578  000015                     alreadyLearned@numIdBytes:
   579                           	opt stack 0
   580  000015                     add_sensor@numIdBytes:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x14
   584  000015                     	ds	1
   585  000016                     ??_add_sensor:
   586  000016                     rx_uart_write@len:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x15
   590  000016                     	ds	1
   591  000017                     rx_uart_write@currentChar:
   592                           	opt stack 0
   593  000017                     alreadyLearned@pointer:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x16
   597  000017                     	ds	1
   598  000018                     rx_uart_write@index:
   599                           	opt stack 0
   600  000018                     alreadyLearned@i:
   601                           	opt stack 0
   602  000018                     add_sensor@i:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x17
   606  000018                     	ds	1
   607  000019                     ??_check_state:
   608                           
   609                           ; 1 bytes @ 0x18
   610  000019                     	ds	1
   611  00001A                     check_state@i:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x19
   615  00001A                     	ds	1
   616  00001B                     tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1l	equ	0xFE1
   624                           
   625                           ; 1 bytes @ 0x1A
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 99 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels required when called:    5
   651 ;; This function calls:
   652 ;;		_check_state
   653 ;;		_init_pic
   654 ;;		_init_uart_md
   655 ;;		_init_uart_rx
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text0
   662  001480                     __ptext0:
   663                           	opt stack 0
   664  001480                     _main:
   665                           	opt stack 26
   666                           
   667                           ;main.c: 101: init_pic();
   668                           
   669                           ;incstack = 0
   670  001480  EC69  F009         	call	_init_pic	;wreg free
   671                           
   672                           ;main.c: 102: init_uart_md();
   673  001484  EC03  F00A         	call	_init_uart_md	;wreg free
   674                           
   675                           ;main.c: 103: init_uart_rx();
   676  001488  EC16  F00A         	call	_init_uart_rx	;wreg free
   677  00148C                     
   678                           ;main.c: 106: {
   679                           ;main.c: 107: check_state();
   680  00148C  EC40  F008         	call	_check_state	;wreg free
   681  001490  D7FD               	goto	l177
   682  001492                     __end_of_main:
   683                           	opt stack 0
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           postdec1	equ	0xFE5
   691                           fsr1l	equ	0xFE1
   692                           
   693 ;; *************** function _init_uart_rx *****************
   694 ;; Defined at:
   695 ;;		line 14 in file "uart.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    2
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text1
   724  00142C                     __ptext1:
   725                           	opt stack 0
   726  00142C                     _init_uart_rx:
   727                           	opt stack 28
   728                           
   729                           ;uart.c: 16: TRISBbits.TRISB5 = 1;
   730                           
   731                           ;incstack = 0
   732  00142C  8A93               	bsf	3987,5,c	;volatile
   733                           
   734                           ;uart.c: 17: TRISBbits.TRISB6 = 0;
   735  00142E  9C93               	bcf	3987,6,c	;volatile
   736                           
   737                           ;uart.c: 18: TRISBbits.TRISB7 = 1;
   738  001430  8E93               	bsf	3987,7,c	;volatile
   739                           
   740                           ;uart.c: 20: TX2STAbits.TX9 = 0;
   741  001432  9C72               	bcf	3954,6,c	;volatile
   742                           
   743                           ;uart.c: 21: RC2STAbits.RX9 = 0;
   744  001434  9C71               	bcf	3953,6,c	;volatile
   745                           
   746                           ;uart.c: 23: TXSTA2bits.BRGH = 1;
   747  001436  8472               	bsf	3954,2,c	;volatile
   748                           
   749                           ;uart.c: 25: RC2STA = 0x90;
   750  001438  0E90               	movlw	144
   751  00143A  6E71               	movwf	3953,c	;volatile
   752                           
   753                           ;uart.c: 26: BAUDCON2 = 0xc8;
   754  00143C  0EC8               	movlw	200
   755  00143E  6E70               	movwf	3952,c	;volatile
   756                           
   757                           ;uart.c: 27: SPBRG2 = 207;
   758  001440  0ECF               	movlw	207
   759  001442  6E75               	movwf	3957,c	;volatile
   760                           
   761                           ;uart.c: 28: SPBRGH2 = 0;
   762  001444  0E00               	movlw	0
   763  001446  6E76               	movwf	3958,c	;volatile
   764                           
   765                           ;uart.c: 29: WPUB5 = 1;
   766  001448  8A61               	bsf	3937,5,c	;volatile
   767  00144A  0012               	return		;funcret
   768  00144C                     __end_of_init_uart_rx:
   769                           	opt stack 0
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           postdec1	equ	0xFE5
   777                           fsr1l	equ	0xFE1
   778                           
   779 ;; *************** function _init_uart_md *****************
   780 ;; Defined at:
   781 ;;		line 64 in file "uart.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    2
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;;		_startup_modem_ok
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text2
   811  001406                     __ptext2:
   812                           	opt stack 0
   813  001406                     _init_uart_md:
   814                           	opt stack 28
   815                           
   816                           ;uart.c: 66: BAUDCON1bits.BRG16 = 1;
   817                           
   818                           ;incstack = 0
   819  001406  86B8               	bsf	4024,3,c	;volatile
   820                           
   821                           ;uart.c: 67: BAUDCON1bits.RCIDL = 1;
   822  001408  8CB8               	bsf	4024,6,c	;volatile
   823                           
   824                           ;uart.c: 68: BAUDCONbits.CKTXP = 0;
   825  00140A  98B8               	bcf	4024,4,c	;volatile
   826                           
   827                           ;uart.c: 69: BAUDCONbits.WUE = 0;
   828  00140C  92B8               	bcf	4024,1,c	;volatile
   829                           
   830                           ;uart.c: 70: BAUDCONbits.ABDEN = 0;
   831  00140E  90B8               	bcf	4024,0,c	;volatile
   832                           
   833                           ;uart.c: 71: TXSTA1bits.BRGH = 1;
   834  001410  84AC               	bsf	4012,2,c	;volatile
   835                           
   836                           ;uart.c: 72: TXSTA1bits.SYNC = 0;
   837  001412  98AC               	bcf	4012,4,c	;volatile
   838                           
   839                           ;uart.c: 73: SPBRGH1 = 0;
   840  001414  0E00               	movlw	0
   841  001416  6EB0               	movwf	4016,c	;volatile
   842                           
   843                           ;uart.c: 74: SPBRG1 = 16;
   844  001418  0E10               	movlw	16
   845  00141A  6EAF               	movwf	4015,c	;volatile
   846                           
   847                           ;uart.c: 76: RC1STAbits.SPEN = 1;
   848  00141C  8EAB               	bsf	4011,7,c	;volatile
   849                           
   850                           ;uart.c: 77: TRISCbits.TRISC7 = 1;
   851  00141E  8E94               	bsf	3988,7,c	;volatile
   852                           
   853                           ;uart.c: 78: TRISCbits.TRISC6 = 0;
   854  001420  9C94               	bcf	3988,6,c	;volatile
   855                           
   856                           ;uart.c: 80: RCSTA1bits.CREN = 1;
   857  001422  88AB               	bsf	4011,4,c	;volatile
   858                           
   859                           ;uart.c: 81: TXSTA1bits.TXEN = 1;
   860  001424  8AAC               	bsf	4012,5,c	;volatile
   861                           
   862                           ;uart.c: 83: LATAbits.LA3 = 1;
   863  001426  8689               	bsf	3977,3,c	;volatile
   864                           
   865                           ;uart.c: 84: PIR1bits.RC1IF = 0;
   866  001428  9A9E               	bcf	3998,5,c	;volatile
   867  00142A  0012               	return		;funcret
   868  00142C                     __end_of_init_uart_md:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           
   879 ;; *************** function _init_pic *****************
   880 ;; Defined at:
   881 ;;		line 112 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    4
   902 ;; This function calls:
   903 ;;		_enable_ints
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text3
   910  0012D2                     __ptext3:
   911                           	opt stack 0
   912  0012D2                     _init_pic:
   913                           	opt stack 26
   914                           
   915                           ;main.c: 115: OSCCONbits.IDLEN = 0;
   916                           
   917                           ;incstack = 0
   918  0012D2  9ED3               	bcf	4051,7,c	;volatile
   919                           
   920                           ;main.c: 116: OSCCONbits.IRCF = 0b110;
   921  0012D4  50D3               	movf	4051,w,c	;volatile
   922  0012D6  0B8F               	andlw	-113
   923  0012D8  0960               	iorlw	96
   924  0012DA  6ED3               	movwf	4051,c	;volatile
   925                           
   926                           ;main.c: 117: OSCCONbits.OSTS = 1;
   927  0012DC  86D3               	bsf	4051,3,c	;volatile
   928                           
   929                           ;main.c: 121: ANSELA = 0x01;
   930  0012DE  0E01               	movlw	1
   931  0012E0  010F               	movlb	15	; () banked
   932  0012E2  6F38               	movwf	56,b	;volatile
   933                           
   934                           ; BSR set to: 15
   935                           ;main.c: 122: TRISAbits.TRISA0 = 1;
   936  0012E4  8092               	bsf	3986,0,c	;volatile
   937                           
   938                           ; BSR set to: 15
   939                           ;main.c: 123: TRISAbits.TRISA3 = 0;
   940  0012E6  9692               	bcf	3986,3,c	;volatile
   941                           
   942                           ; BSR set to: 15
   943                           ;main.c: 124: LATAbits.LA3 = 0;
   944  0012E8  9689               	bcf	3977,3,c	;volatile
   945                           
   946                           ;main.c: 127: ANSELC = 0x00;
   947  0012EA  0E00               	movlw	0
   948  0012EC  6F3A               	movwf	58,b	;volatile
   949                           
   950                           ; BSR set to: 15
   951                           ;main.c: 128: LATBbits.LB3 = 1;
   952  0012EE  868A               	bsf	3978,3,c	;volatile
   953                           
   954                           ; BSR set to: 15
   955                           ;main.c: 129: TRISBbits.TRISB3 = 0;
   956  0012F0  9693               	bcf	3987,3,c	;volatile
   957                           
   958                           ; BSR set to: 15
   959                           ;main.c: 130: PORTCbits.RC6 = 1;
   960  0012F2  8C82               	bsf	3970,6,c	;volatile
   961                           
   962                           ; BSR set to: 15
   963                           ;main.c: 131: TRISCbits.TRISC6 = 0;
   964  0012F4  9C94               	bcf	3988,6,c	;volatile
   965                           
   966                           ; BSR set to: 15
   967                           ;main.c: 132: LATCbits.LATC7 = 1;
   968  0012F6  8E8B               	bsf	3979,7,c	;volatile
   969                           
   970                           ; BSR set to: 15
   971                           ;main.c: 133: TRISCbits.TRISC7 = 1;
   972  0012F8  8E94               	bsf	3988,7,c	;volatile
   973                           
   974                           ;main.c: 136: ANSELB = 0x00;
   975  0012FA  0E00               	movlw	0
   976  0012FC  6F39               	movwf	57,b	;volatile
   977                           
   978                           ; BSR set to: 15
   979                           ;main.c: 137: TRISBbits.TRISB0 = 1;
   980  0012FE  8093               	bsf	3987,0,c	;volatile
   981                           
   982                           ; BSR set to: 15
   983                           ;main.c: 138: TRISCbits.TRISC1 = 1;
   984  001300  8294               	bsf	3988,1,c	;volatile
   985                           
   986                           ; BSR set to: 15
   987                           ;main.c: 140: TRISBbits.TRISB1 = 1;
   988  001302  8293               	bsf	3987,1,c	;volatile
   989                           
   990                           ; BSR set to: 15
   991                           ;main.c: 142: TRISBbits.TRISB2 = 1;
   992  001304  8493               	bsf	3987,2,c	;volatile
   993                           
   994                           ; BSR set to: 15
   995                           ;main.c: 143: LATCbits.LC4 = 1;
   996  001306  888B               	bsf	3979,4,c	;volatile
   997                           
   998                           ; BSR set to: 15
   999                           ;main.c: 144: TRISCbits.TRISC4 = 0;
  1000  001308  9894               	bcf	3988,4,c	;volatile
  1001                           
  1002                           ; BSR set to: 15
  1003                           ;main.c: 146: TRISBbits.TRISB4 = 1;
  1004  00130A  8893               	bsf	3987,4,c	;volatile
  1005                           
  1006                           ; BSR set to: 15
  1007                           ;main.c: 148: TRISBbits.TRISB5 = 1;
  1008  00130C  8A93               	bsf	3987,5,c	;volatile
  1009                           
  1010                           ; BSR set to: 15
  1011                           ;main.c: 149: PORTBbits.RB6 = 1;
  1012  00130E  8C81               	bsf	3969,6,c	;volatile
  1013                           
  1014                           ; BSR set to: 15
  1015                           ;main.c: 150: TRISBbits.TRISB6 = 0;
  1016  001310  9C93               	bcf	3987,6,c	;volatile
  1017                           
  1018                           ; BSR set to: 15
  1019                           ;main.c: 152: TRISBbits.TRISB7 = 1;
  1020  001312  8E93               	bsf	3987,7,c	;volatile
  1021                           
  1022                           ; BSR set to: 15
  1023                           ;main.c: 154: PORTAbits.RA1 = 0;
  1024  001314  9280               	bcf	3968,1,c	;volatile
  1025                           
  1026                           ; BSR set to: 15
  1027                           ;main.c: 155: TRISAbits.TRISA1 = 0;
  1028  001316  9292               	bcf	3986,1,c	;volatile
  1029                           
  1030                           ; BSR set to: 15
  1031                           ;main.c: 157: enable_ints();
  1032  001318  ECED  F009         	call	_enable_ints	;wreg free
  1033  00131C  0012               	return		;funcret
  1034  00131E                     __end_of_init_pic:
  1035                           	opt stack 0
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           postdec1	equ	0xFE5
  1043                           fsr1l	equ	0xFE1
  1044                           
  1045 ;; *************** function _enable_ints *****************
  1046 ;; Defined at:
  1047 ;;		line 160 in file "main.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    3
  1068 ;; This function calls:
  1069 ;;		_start_timer0
  1070 ;; This function is called by:
  1071 ;;		_init_pic
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text4
  1076  0013DA                     __ptext4:
  1077                           	opt stack 0
  1078  0013DA                     _enable_ints:
  1079                           	opt stack 26
  1080                           
  1081                           ;main.c: 162: INTCONbits.GIE = 0;
  1082                           
  1083                           ;incstack = 0
  1084  0013DA  9EF2               	bcf	intcon,7,c	;volatile
  1085                           
  1086                           ;main.c: 168: IOCBbits.IOCB5 = 1;
  1087  0013DC  8A62               	bsf	3938,5,c	;volatile
  1088                           
  1089                           ;main.c: 169: INTCONbits.RBIE = 1;
  1090  0013DE  86F2               	bsf	intcon,3,c	;volatile
  1091                           
  1092                           ;main.c: 170: INTCONbits.RBIF = 0;
  1093  0013E0  90F2               	bcf	intcon,0,c	;volatile
  1094                           
  1095                           ;main.c: 174: start_timer0();
  1096  0013E2  EC36  F00A         	call	_start_timer0	;wreg free
  1097                           
  1098                           ;main.c: 177: T3CONbits.T3CKPS = 0b11;
  1099  0013E6  0E30               	movlw	48
  1100  0013E8  12B1               	iorwf	4017,f,c	;volatile
  1101                           
  1102                           ;main.c: 178: T3CONbits.TMR3CS = 0b00;
  1103  0013EA  0E3F               	movlw	-193
  1104  0013EC  16B1               	andwf	4017,f,c	;volatile
  1105                           
  1106                           ;main.c: 179: T3CONbits.nT3SYNC = 1;
  1107  0013EE  84B1               	bsf	4017,2,c	;volatile
  1108                           
  1109                           ;main.c: 181: T3CONbits.TMR3ON = 1;
  1110  0013F0  80B1               	bsf	4017,0,c	;volatile
  1111                           
  1112                           ;main.c: 182: PIE2bits.TMR3IE = 1;
  1113  0013F2  82A0               	bsf	4000,1,c	;volatile
  1114                           
  1115                           ;main.c: 183: PIR2bits.TMR3IF = 0;
  1116  0013F4  92A1               	bcf	4001,1,c	;volatile
  1117                           
  1118                           ;main.c: 184: TMR3H = 0x60;
  1119  0013F6  0E60               	movlw	96
  1120  0013F8  6EB3               	movwf	4019,c	;volatile
  1121                           
  1122                           ;main.c: 185: TMR3L = 0;
  1123  0013FA  0E00               	movlw	0
  1124  0013FC  6EB2               	movwf	4018,c	;volatile
  1125                           
  1126                           ;main.c: 187: INTCONbits.GIE = 0;
  1127  0013FE  9EF2               	bcf	intcon,7,c	;volatile
  1128                           
  1129                           ;main.c: 188: INTCONbits.PEIE = 1;
  1130  001400  8CF2               	bsf	intcon,6,c	;volatile
  1131                           
  1132                           ;main.c: 190: INTCONbits.GIE = 1;
  1133  001402  8EF2               	bsf	intcon,7,c	;volatile
  1134  001404  0012               	return		;funcret
  1135  001406                     __end_of_enable_ints:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           intcon	equ	0xFF2
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           postdec1	equ	0xFE5
  1145                           fsr1l	equ	0xFE1
  1146                           
  1147 ;; *************** function _start_timer0 *****************
  1148 ;; Defined at:
  1149 ;;		line 219 in file "main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    2
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_enable_ints
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text5
  1178  00146C                     __ptext5:
  1179                           	opt stack 0
  1180  00146C                     _start_timer0:
  1181                           	opt stack 26
  1182                           
  1183                           ;main.c: 221: T0CON = 0x87;
  1184                           
  1185                           ;incstack = 0
  1186  00146C  0E87               	movlw	135
  1187  00146E  6ED5               	movwf	4053,c	;volatile
  1188                           
  1189                           ;main.c: 222: TMR0L = ((65535-781)%256);
  1190  001470  0EF2               	movlw	242
  1191  001472  6ED6               	movwf	4054,c	;volatile
  1192                           
  1193                           ;main.c: 223: TMR0H = ((65535-781)/256);
  1194  001474  0EFC               	movlw	252
  1195  001476  6ED7               	movwf	4055,c	;volatile
  1196                           
  1197                           ;main.c: 224: TMR0IF = 0;
  1198  001478  94F2               	bcf	intcon,2,c	;volatile
  1199                           
  1200                           ;main.c: 225: TMR0IE = 1;
  1201  00147A  8AF2               	bsf	intcon,5,c	;volatile
  1202                           
  1203                           ;main.c: 226: INTCONbits.GIE = 1;
  1204  00147C  8EF2               	bsf	intcon,7,c	;volatile
  1205  00147E  0012               	return		;funcret
  1206  001480                     __end_of_start_timer0:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           intcon	equ	0xFF2
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           postdec1	equ	0xFE5
  1216                           fsr1l	equ	0xFE1
  1217                           
  1218 ;; *************** function _check_state *****************
  1219 ;; Defined at:
  1220 ;;		line 16 in file "state.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  i               1   25[COMRAM] unsigned char 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;Total ram usage:        2 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    4
  1241 ;; This function calls:
  1242 ;;		_add_sensor
  1243 ;;		_alreadyLearned
  1244 ;;		_reload_tmr3_pt25s
  1245 ;;		_rx_uart_write
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text6
  1252  001080                     __ptext6:
  1253                           	opt stack 0
  1254  001080                     _check_state:
  1255                           	opt stack 26
  1256                           
  1257                           ;state.c: 18: switch (state)
  1258                           
  1259                           ;incstack = 0
  1260  001080  D072               	goto	l775
  1261  001082                     
  1262                           ;state.c: 21: waiting = 0;
  1263  001082  0E00               	movlw	0
  1264  001084  6E35               	movwf	_waiting,c
  1265                           
  1266                           ;state.c: 23: if (PORTBbits.RB4 && !buttonStillPressed)
  1267  001086  A881               	btfss	3969,4,c	;volatile
  1268  001088  D014               	goto	l777
  1269  00108A  501D               	movf	_buttonStillPressed,w,c
  1270  00108C  A4D8               	btfss	status,2,c
  1271  00108E  D011               	goto	l777
  1272                           
  1273                           ;state.c: 24: {
  1274                           ;state.c: 25: _delay((unsigned long)((30)*(8000000/4000.0)));
  1275  001090  0E4E               	movlw	78
  1276  001092  6E19               	movwf	??_check_state& (0+255),c
  1277  001094  0EEB               	movlw	235
  1278  001096                     u1567:
  1279  001096  2EE8               	decfsz	wreg,f,c
  1280  001098  D7FE               	bra	u1567
  1281  00109A  2E19               	decfsz	??_check_state& (0+255),f,c
  1282  00109C  D7FC               	bra	u1567
  1283  00109E  F000               	nop	
  1284                           
  1285                           ;state.c: 26: if (PORTBbits.RB4)
  1286  0010A0  A881               	btfss	3969,4,c	;volatile
  1287  0010A2  D005               	goto	l778
  1288                           
  1289                           ;state.c: 27: {
  1290                           ;state.c: 28: buttonPressCount++;
  1291  0010A4  2A27               	incf	_buttonPressCount,f,c
  1292                           
  1293                           ;state.c: 29: reload_tmr3_pt25s();
  1294  0010A6  EC49  F00A         	call	_reload_tmr3_pt25s	;wreg free
  1295                           
  1296                           ;state.c: 30: tmr3_cnt = 0;
  1297  0010AA  0E00               	movlw	0
  1298  0010AC  6E24               	movwf	_tmr3_cnt,c
  1299  0010AE                     l778:
  1300                           
  1301                           ;state.c: 31: }
  1302                           ;state.c: 32: buttonStillPressed = 1;
  1303  0010AE  0E01               	movlw	1
  1304  0010B0  D00B               	goto	L1
  1305  0010B2                     l777:
  1306                           
  1307                           ;state.c: 34: else
  1308                           ;state.c: 35: {
  1309                           ;state.c: 36: _delay((unsigned long)((30)*(8000000/4000.0)));
  1310  0010B2  0E4E               	movlw	78
  1311  0010B4  6E19               	movwf	??_check_state& (0+255),c
  1312  0010B6  0EEB               	movlw	235
  1313  0010B8                     u1577:
  1314  0010B8  2EE8               	decfsz	wreg,f,c
  1315  0010BA  D7FE               	bra	u1577
  1316  0010BC  2E19               	decfsz	??_check_state& (0+255),f,c
  1317  0010BE  D7FC               	bra	u1577
  1318  0010C0  F000               	nop	
  1319                           
  1320                           ;state.c: 37: if (!PORTBbits.RB4)
  1321  0010C2  B881               	btfsc	3969,4,c	;volatile
  1322  0010C4  D002               	goto	l780
  1323                           
  1324                           ;state.c: 38: {
  1325                           ;state.c: 39: buttonStillPressed = 0;
  1326  0010C6  0E00               	movlw	0
  1327  0010C8                     L1:
  1328  0010C8  6E1D               	movwf	_buttonStillPressed,c
  1329  0010CA                     l780:
  1330                           
  1331                           ;state.c: 40: }
  1332                           ;state.c: 41: }
  1333                           ;state.c: 42: if (inButtonMenu && buttonPressCount == 0)
  1334  0010CA  5029               	movf	_inButtonMenu,w,c
  1335  0010CC  B4D8               	btfsc	status,2,c
  1336  0010CE  D006               	goto	l781
  1337  0010D0  5027               	movf	_buttonPressCount,w,c
  1338  0010D2  A4D8               	btfss	status,2,c
  1339  0010D4  D003               	goto	l781
  1340                           
  1341                           ;state.c: 43: {
  1342                           ;state.c: 44: LATBbits.LB3=0;
  1343  0010D6  968A               	bcf	3978,3,c	;volatile
  1344                           
  1345                           ;state.c: 45: LATCbits.LC4=0;
  1346  0010D8  988B               	bcf	3979,4,c	;volatile
  1347                           
  1348                           ;state.c: 46: }
  1349  0010DA  D002               	goto	l782
  1350  0010DC                     l781:
  1351                           
  1352                           ;state.c: 47: else
  1353                           ;state.c: 48: {
  1354                           ;state.c: 49: LATBbits.LB3=1;
  1355  0010DC  868A               	bsf	3978,3,c	;volatile
  1356                           
  1357                           ;state.c: 50: LATCbits.LC4=1;
  1358  0010DE  888B               	bsf	3979,4,c	;volatile
  1359  0010E0                     l782:
  1360                           
  1361                           ;state.c: 51: }
  1362                           ;state.c: 52: if (rxDataPending)
  1363  0010E0  5028               	movf	_rxDataPending,w,c
  1364  0010E2  B4D8               	btfsc	status,2,c
  1365  0010E4  D008               	goto	l783
  1366                           
  1367                           ;state.c: 53: {
  1368                           ;state.c: 54: rx_uart_write(RS232Buf, 6);
  1369  0010E6  0E2A               	movlw	low _RS232Buf
  1370  0010E8  6E14               	movwf	rx_uart_write@data,c
  1371  0010EA  0E00               	movlw	high _RS232Buf
  1372  0010EC  6E15               	movwf	rx_uart_write@data+1,c
  1373  0010EE  0E06               	movlw	6
  1374  0010F0  6E16               	movwf	rx_uart_write@len,c
  1375  0010F2  ECD6  F009         	call	_rx_uart_write	;wreg free
  1376  0010F6                     l783:
  1377                           
  1378                           ;state.c: 55: }
  1379                           ;state.c: 57: bled_tmr0_tick = 0;
  1380  0010F6  0E00               	movlw	0
  1381  0010F8  6E25               	movwf	_bled_tmr0_tick,c
  1382                           
  1383                           ;state.c: 58: gled_tmr0_tick = 0;
  1384  0010FA  0E00               	movlw	0
  1385  0010FC  6E26               	movwf	_gled_tmr0_tick,c
  1386                           
  1387                           ;state.c: 62: break;
  1388                           
  1389                           ;state.c: 61: case LISTEN_SMS:
  1390                           
  1391                           ;state.c: 59: break;
  1392  0010FE  0012               	return	
  1393  001100                     
  1394                           ;state.c: 66: {
  1395                           ;state.c: 67: if (rxDataPending)
  1396  001100  5028               	movf	_rxDataPending,w,c
  1397  001102  B4D8               	btfsc	status,2,c
  1398  001104  D027               	goto	u1310
  1399                           
  1400                           ;state.c: 68: {
  1401                           ;state.c: 69: if (!alreadyLearned((uint8_t *)&RS232Buf[0], 3))
  1402  001106  0E2A               	movlw	low _RS232Buf
  1403  001108  6E13               	movwf	alreadyLearned@id,c
  1404  00110A  0E00               	movlw	high _RS232Buf
  1405  00110C  6E14               	movwf	alreadyLearned@id+1,c
  1406  00110E  0E03               	movlw	3
  1407  001110  6E15               	movwf	alreadyLearned@numIdBytes,c
  1408  001112  EC25  F009         	call	_alreadyLearned	;wreg free
  1409  001116  0900               	iorlw	0
  1410  001118  A4D8               	btfss	status,2,c
  1411  00111A  D008               	goto	l790
  1412                           
  1413                           ;state.c: 70: add_sensor((uint8_t *)&RS232Buf[0], 3);
  1414  00111C  0E2A               	movlw	low _RS232Buf
  1415  00111E  6E13               	movwf	add_sensor@id,c
  1416  001120  0E00               	movlw	high _RS232Buf
  1417  001122  6E14               	movwf	add_sensor@id+1,c
  1418  001124  0E03               	movlw	3
  1419  001126  6E15               	movwf	add_sensor@numIdBytes,c
  1420  001128  EC8F  F009         	call	_add_sensor	;wreg free
  1421  00112C                     l790:
  1422                           
  1423                           ;state.c: 71: rxDataPending = 0;
  1424  00112C  0E00               	movlw	0
  1425  00112E  6E28               	movwf	_rxDataPending,c
  1426                           
  1427                           ;state.c: 72: for(uint8_t i = 0; i < sizeof(RS232Buf); i++)
  1428  001130  0E00               	movlw	0
  1429  001132  6E1A               	movwf	check_state@i,c
  1430  001134                     l2479:
  1431  001134  0E05               	movlw	5
  1432  001136  641A               	cpfsgt	check_state@i,c
  1433  001138  D001               	goto	l791
  1434  00113A  D00C               	goto	u1310
  1435  00113C                     l791:
  1436                           
  1437                           ;state.c: 73: RS232Buf[i] = 0;
  1438  00113C  501A               	movf	check_state@i,w,c
  1439  00113E  0D01               	mullw	1
  1440  001140  0E2A               	movlw	low _RS232Buf
  1441  001142  24F3               	addwf	prodl,w,c
  1442  001144  6ED9               	movwf	fsr2l,c
  1443  001146  0E00               	movlw	high _RS232Buf
  1444  001148  20F4               	addwfc	prodh,w,c
  1445  00114A  6EDA               	movwf	fsr2h,c
  1446  00114C  0E00               	movlw	0
  1447  00114E  6EDF               	movwf	indf2,c
  1448  001150  2A1A               	incf	check_state@i,f,c
  1449  001152  D7F0               	goto	l2479
  1450  001154                     u1310:
  1451  001154  0EB0               	movlw	176
  1452  001156  5C1B               	subwf	_learn_timer_tick,w,c
  1453  001158  0E04               	movlw	4
  1454  00115A  581C               	subwfb	_learn_timer_tick+1,w,c
  1455  00115C  A0D8               	btfss	status,0,c
  1456  00115E  D7D0               	goto	l788
  1457                           
  1458                           ;state.c: 74: }
  1459                           ;state.c: 75: }
  1460                           ;state.c: 76: state = OPERATIONAL;
  1461  001160  0E00               	movlw	0
  1462  001162  6E22               	movwf	_state,c
  1463                           
  1464                           ;state.c: 81: }
  1465                           
  1466                           ;state.c: 80: break;
  1467                           
  1468                           ;state.c: 79: case DELETE_SENSOR:
  1469                           
  1470                           ;state.c: 77: break;
  1471  001164  0012               	return	
  1472  001166                     l775:
  1473  001166  5022               	movf	_state,w,c
  1474                           
  1475                           ; Switch size 1, requested type "space"
  1476                           ; Number of cases is 4, Range of values is 0 to 3
  1477                           ; switch strategies available:
  1478                           ; Name         Instructions Cycles
  1479                           ; simple_byte           13     7 (average)
  1480                           ;	Chosen strategy is simple_byte
  1481  001168  0A00               	xorlw	0	; case 0
  1482  00116A  B4D8               	btfsc	status,2,c
  1483  00116C  D78A               	goto	l776
  1484  00116E  0A01               	xorlw	1	; case 1
  1485  001170  B4D8               	btfsc	status,2,c
  1486  001172  0012               	return	
  1487  001174  0A03               	xorlw	3	; case 2
  1488  001176  B4D8               	btfsc	status,2,c
  1489  001178  D7ED               	goto	u1310
  1490  00117A  0A01               	xorlw	1	; case 3
  1491  00117C  0012               	return	
  1492  00117E                     __end_of_check_state:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           intcon	equ	0xFF2
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           postdec1	equ	0xFE5
  1504                           fsr1l	equ	0xFE1
  1505                           indf2	equ	0xFDF
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _rx_uart_write *****************
  1511 ;; Defined at:
  1512 ;;		line 204 in file "uart.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  data            2   19[COMRAM] PTR unsigned char 
  1515 ;;		 -> RS232Buf(6), 
  1516 ;;  len             1   21[COMRAM] unsigned char 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  index           1   23[COMRAM] unsigned char 
  1519 ;;  currentChar     1   22[COMRAM] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:        5 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    3
  1536 ;; This function calls:
  1537 ;;		_rx_uart_transmit
  1538 ;;		_stop_uart_rx
  1539 ;; This function is called by:
  1540 ;;		_check_state
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text7
  1545  0013AC                     __ptext7:
  1546                           	opt stack 0
  1547  0013AC                     _rx_uart_write:
  1548                           	opt stack 26
  1549                           
  1550                           ;uart.c: 206: uint8_t index, currentChar;
  1551                           ;uart.c: 207: index = 0;
  1552                           
  1553                           ;incstack = 0
  1554  0013AC  0E00               	movlw	0
  1555  0013AE  6E18               	movwf	rx_uart_write@index,c
  1556                           
  1557                           ;uart.c: 208: CREN2 = 0;
  1558  0013B0  9871               	bcf	3953,4,c	;volatile
  1559  0013B2  D00C               	goto	l564
  1560  0013B4                     
  1561                           ;uart.c: 210: {
  1562                           ;uart.c: 211: currentChar = *data;
  1563  0013B4  C014  FFD9         	movff	rx_uart_write@data,fsr2l
  1564  0013B8  C015  FFDA         	movff	rx_uart_write@data+1,fsr2h
  1565  0013BC  50DF               	movf	indf2,w,c
  1566  0013BE  6E17               	movwf	rx_uart_write@currentChar,c
  1567                           
  1568                           ;uart.c: 212: rx_uart_transmit(currentChar);
  1569  0013C0  5017               	movf	rx_uart_write@currentChar,w,c
  1570  0013C2  EC58  F00A         	call	_rx_uart_transmit
  1571                           
  1572                           ;uart.c: 213: data++;
  1573  0013C6  4A14               	infsnz	rx_uart_write@data,f,c
  1574  0013C8  2A15               	incf	rx_uart_write@data+1,f,c
  1575  0013CA  2A18               	incf	rx_uart_write@index,f,c
  1576  0013CC                     l564:
  1577  0013CC  5016               	movf	rx_uart_write@len,w,c
  1578  0013CE  5C18               	subwf	rx_uart_write@index,w,c
  1579  0013D0  A0D8               	btfss	status,0,c
  1580  0013D2  D7F0               	goto	l565
  1581                           
  1582                           ;uart.c: 214: }
  1583                           ;uart.c: 215: stop_uart_rx();
  1584  0013D4  EC6D  F00A         	call	_stop_uart_rx	;wreg free
  1585  0013D8  0012               	return		;funcret
  1586  0013DA                     __end_of_rx_uart_write:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           prodh	equ	0xFF4
  1593                           prodl	equ	0xFF3
  1594                           intcon	equ	0xFF2
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1l	equ	0xFE1
  1599                           indf2	equ	0xFDF
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _stop_uart_rx *****************
  1605 ;; Defined at:
  1606 ;;		line 51 in file "uart.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		None
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    2
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_rx_uart_write
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text8
  1635  0014DA                     __ptext8:
  1636                           	opt stack 0
  1637  0014DA                     _stop_uart_rx:
  1638                           	opt stack 26
  1639                           
  1640                           ;uart.c: 53: RC2STAbits.SPEN = 0;
  1641                           
  1642                           ;incstack = 0
  1643  0014DA  9E71               	bcf	3953,7,c	;volatile
  1644  0014DC  0012               	return		;funcret
  1645  0014DE                     __end_of_stop_uart_rx:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           prodh	equ	0xFF4
  1652                           prodl	equ	0xFF3
  1653                           intcon	equ	0xFF2
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1l	equ	0xFE1
  1658                           indf2	equ	0xFDF
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _rx_uart_transmit *****************
  1664 ;; Defined at:
  1665 ;;		line 219 in file "uart.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  data            1    wreg     unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  data            1   18[COMRAM] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    2
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_rx_uart_write
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text9
  1694  0014B0                     __ptext9:
  1695                           	opt stack 0
  1696  0014B0                     _rx_uart_transmit:
  1697                           	opt stack 26
  1698                           
  1699                           ;incstack = 0
  1700                           ;rx_uart_transmit@data stored from wreg
  1701  0014B0  6E13               	movwf	rx_uart_transmit@data,c
  1702  0014B2                     
  1703                           ;uart.c: 221: while (!TRMT2);
  1704  0014B2  A272               	btfss	3954,1,c	;volatile
  1705  0014B4  D7FE               	goto	l1495
  1706                           
  1707                           ;uart.c: 222: TX2REG = data;
  1708  0014B6  C013  FF73         	movff	rx_uart_transmit@data,3955	;volatile
  1709  0014BA  0012               	return		;funcret
  1710  0014BC                     __end_of_rx_uart_transmit:
  1711                           	opt stack 0
  1712                           tblptru	equ	0xFF8
  1713                           tblptrh	equ	0xFF7
  1714                           tblptrl	equ	0xFF6
  1715                           tablat	equ	0xFF5
  1716                           prodh	equ	0xFF4
  1717                           prodl	equ	0xFF3
  1718                           intcon	equ	0xFF2
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           postdec1	equ	0xFE5
  1722                           fsr1l	equ	0xFE1
  1723                           indf2	equ	0xFDF
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function _reload_tmr3_pt25s *****************
  1729 ;; Defined at:
  1730 ;;		line 202 in file "main.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    2
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_check_state
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text10
  1759  001492                     __ptext10:
  1760                           	opt stack 0
  1761  001492                     _reload_tmr3_pt25s:
  1762                           	opt stack 27
  1763                           
  1764                           ;main.c: 204: T3CONbits.TMR3ON = 1;
  1765                           
  1766                           ;incstack = 0
  1767  001492  80B1               	bsf	4017,0,c	;volatile
  1768                           
  1769                           ;main.c: 205: PIE2bits.TMR3IE = 1;
  1770  001494  82A0               	bsf	4000,1,c	;volatile
  1771                           
  1772                           ;main.c: 206: PIR2bits.TMR3IF = 0;
  1773  001496  92A1               	bcf	4001,1,c	;volatile
  1774                           
  1775                           ;main.c: 207: TMR3H = 0x0B;
  1776  001498  0E0B               	movlw	11
  1777  00149A  6EB3               	movwf	4019,c	;volatile
  1778                           
  1779                           ;main.c: 208: TMR3L = 0x45;
  1780  00149C  0E45               	movlw	69
  1781  00149E  6EB2               	movwf	4018,c	;volatile
  1782  0014A0  0012               	return		;funcret
  1783  0014A2                     __end_of_reload_tmr3_pt25s:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           prodh	equ	0xFF4
  1790                           prodl	equ	0xFF3
  1791                           intcon	equ	0xFF2
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1l	equ	0xFE1
  1796                           indf2	equ	0xFDF
  1797                           fsr2h	equ	0xFDA
  1798                           fsr2l	equ	0xFD9
  1799                           status	equ	0xFD8
  1800                           
  1801 ;; *************** function _alreadyLearned *****************
  1802 ;; Defined at:
  1803 ;;		line 11 in file "sensor.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  id              2   18[COMRAM] PTR unsigned char 
  1806 ;;		 -> RS232Buf(6), 
  1807 ;;  numIdBytes      1   20[COMRAM] unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  i               1   23[COMRAM] unsigned char 
  1810 ;;  pointer         1   22[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      unsigned char 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:        6 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    2
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_check_state
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text11
  1835  00124A                     __ptext11:
  1836                           	opt stack 0
  1837  00124A                     _alreadyLearned:
  1838                           	opt stack 27
  1839                           
  1840                           ;sensor.c: 16: uint8_t pointer = *id;
  1841                           
  1842                           ;incstack = 0
  1843  00124A  C013  FFD9         	movff	alreadyLearned@id,fsr2l
  1844  00124E  C014  FFDA         	movff	alreadyLearned@id+1,fsr2h
  1845  001252  50DF               	movf	indf2,w,c
  1846  001254  6E17               	movwf	alreadyLearned@pointer,c
  1847                           
  1848                           ;sensor.c: 17: for (uint8_t i = 0; i < learnedSensorPtr; i++)
  1849  001256  0E00               	movlw	0
  1850  001258  6E18               	movwf	alreadyLearned@i,c
  1851  00125A  D035               	goto	l848
  1852  00125C                     
  1853                           ;sensor.c: 18: {
  1854                           ;sensor.c: 19: if (pointer == learnedSensors[i][0])
  1855  00125C  5018               	movf	alreadyLearned@i,w,c
  1856  00125E  0D03               	mullw	3
  1857  001260  0E60               	movlw	low _learnedSensors
  1858  001262  24F3               	addwf	prodl,w,c
  1859  001264  6ED9               	movwf	fsr2l,c
  1860  001266  0E00               	movlw	high _learnedSensors
  1861  001268  20F4               	addwfc	prodh,w,c
  1862  00126A  6EDA               	movwf	fsr2h,c
  1863  00126C  5017               	movf	alreadyLearned@pointer,w,c
  1864  00126E  18DE               	xorwf	postinc2,w,c
  1865  001270  A4D8               	btfss	status,2,c
  1866  001272  D028               	goto	l855
  1867                           
  1868                           ;sensor.c: 20: {
  1869                           ;sensor.c: 21: pointer++;
  1870  001274  2A17               	incf	alreadyLearned@pointer,f,c
  1871                           
  1872                           ;sensor.c: 22: if (pointer == learnedSensors[i][1])
  1873  001276  5018               	movf	alreadyLearned@i,w,c
  1874  001278  0D03               	mullw	3
  1875  00127A  0E01               	movlw	1
  1876  00127C  26F3               	addwf	prodl,f,c
  1877  00127E  0E00               	movlw	0
  1878  001280  22F4               	addwfc	prodh,f,c
  1879  001282  0E60               	movlw	low _learnedSensors
  1880  001284  24F3               	addwf	prodl,w,c
  1881  001286  6ED9               	movwf	fsr2l,c
  1882  001288  0E00               	movlw	high _learnedSensors
  1883  00128A  20F4               	addwfc	prodh,w,c
  1884  00128C  6EDA               	movwf	fsr2h,c
  1885  00128E  5017               	movf	alreadyLearned@pointer,w,c
  1886  001290  18DE               	xorwf	postinc2,w,c
  1887  001292  A4D8               	btfss	status,2,c
  1888  001294  D016               	goto	l851
  1889                           
  1890                           ;sensor.c: 23: {
  1891                           ;sensor.c: 24: pointer++;
  1892  001296  2A17               	incf	alreadyLearned@pointer,f,c
  1893                           
  1894                           ;sensor.c: 25: if (pointer == learnedSensors[i][2])
  1895  001298  5018               	movf	alreadyLearned@i,w,c
  1896  00129A  0D03               	mullw	3
  1897  00129C  0E02               	movlw	2
  1898  00129E  26F3               	addwf	prodl,f,c
  1899  0012A0  0E00               	movlw	0
  1900  0012A2  22F4               	addwfc	prodh,f,c
  1901  0012A4  0E60               	movlw	low _learnedSensors
  1902  0012A6  24F3               	addwf	prodl,w,c
  1903  0012A8  6ED9               	movwf	fsr2l,c
  1904  0012AA  0E00               	movlw	high _learnedSensors
  1905  0012AC  20F4               	addwfc	prodh,w,c
  1906  0012AE  6EDA               	movwf	fsr2h,c
  1907  0012B0  5017               	movf	alreadyLearned@pointer,w,c
  1908  0012B2  18DE               	xorwf	postinc2,w,c
  1909  0012B4  A4D8               	btfss	status,2,c
  1910  0012B6  D002               	goto	l852
  1911                           
  1912                           ;sensor.c: 26: return 1;
  1913  0012B8  0E01               	movlw	1
  1914  0012BA  0012               	return	
  1915  0012BC                     l852:
  1916                           
  1917                           ;sensor.c: 27: else
  1918                           ;sensor.c: 28: pointer -= 2;
  1919  0012BC  0E02               	movlw	2
  1920  0012BE  5E17               	subwf	alreadyLearned@pointer,f,c
  1921                           
  1922                           ;sensor.c: 29: }
  1923  0012C0  D001               	goto	l855
  1924  0012C2                     l851:
  1925                           
  1926                           ;sensor.c: 30: else
  1927                           ;sensor.c: 31: pointer --;
  1928  0012C2  0617               	decf	alreadyLearned@pointer,f,c
  1929  0012C4                     l855:
  1930  0012C4  2A18               	incf	alreadyLearned@i,f,c
  1931  0012C6                     l848:
  1932  0012C6  501E               	movf	_learnedSensorPtr,w,c
  1933  0012C8  5C18               	subwf	alreadyLearned@i,w,c
  1934  0012CA  A0D8               	btfss	status,0,c
  1935  0012CC  D7C7               	goto	l849
  1936                           
  1937                           ;sensor.c: 32: }
  1938                           ;sensor.c: 33: }
  1939                           ;sensor.c: 34: return 0;
  1940  0012CE  0E00               	movlw	0
  1941  0012D0  0012               	return	
  1942  0012D2                     __end_of_alreadyLearned:
  1943                           	opt stack 0
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           prodh	equ	0xFF4
  1949                           prodl	equ	0xFF3
  1950                           intcon	equ	0xFF2
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           postdec1	equ	0xFE5
  1954                           fsr1l	equ	0xFE1
  1955                           indf2	equ	0xFDF
  1956                           postinc2	equ	0xFDE
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function _add_sensor *****************
  1962 ;; Defined at:
  1963 ;;		line 38 in file "sensor.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  id              2   18[COMRAM] PTR unsigned char 
  1966 ;;		 -> RS232Buf(6), 
  1967 ;;  numIdBytes      1   20[COMRAM] unsigned char 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  i               1   23[COMRAM] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:        6 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    2
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_check_state
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text12
  1994  00131E                     __ptext12:
  1995                           	opt stack 0
  1996  00131E                     _add_sensor:
  1997                           	opt stack 27
  1998                           
  1999                           ;sensor.c: 40: if (learnedSensorPtr >= 16)
  2000                           
  2001                           ;incstack = 0
  2002  00131E  0E0F               	movlw	15
  2003  001320  641E               	cpfsgt	_learnedSensorPtr,c
  2004  001322  D001               	goto	l859
  2005  001324  0012               	return	
  2006  001326                     l859:
  2007                           
  2008                           ;sensor.c: 42: for(uint8_t i = 0; i < numIdBytes; i++)
  2009  001326  0E00               	movlw	0
  2010  001328  6E18               	movwf	add_sensor@i,c
  2011  00132A  D017               	goto	l861
  2012  00132C                     
  2013                           ;sensor.c: 43: {
  2014                           ;sensor.c: 44: learnedSensors[learnedSensorPtr][i] = id++;
  2015  00132C  501E               	movf	_learnedSensorPtr,w,c
  2016  00132E  0D03               	mullw	3
  2017  001330  0E60               	movlw	low _learnedSensors
  2018  001332  6E16               	movwf	??_add_sensor& (0+255),c
  2019  001334  0E00               	movlw	high _learnedSensors
  2020  001336  6E17               	movwf	(??_add_sensor+1)& (0+255),c
  2021  001338  50F3               	movf	prodl,w,c
  2022  00133A  2616               	addwf	??_add_sensor,f,c
  2023  00133C  50F4               	movf	prodh,w,c
  2024  00133E  2217               	addwfc	??_add_sensor+1,f,c
  2025  001340  5018               	movf	add_sensor@i,w,c
  2026  001342  0D01               	mullw	1
  2027  001344  50F3               	movf	prodl,w,c
  2028  001346  2416               	addwf	??_add_sensor,w,c
  2029  001348  6ED9               	movwf	fsr2l,c
  2030  00134A  50F4               	movf	prodh,w,c
  2031  00134C  2017               	addwfc	??_add_sensor+1,w,c
  2032  00134E  6EDA               	movwf	fsr2h,c
  2033  001350  C013  FFDF         	movff	add_sensor@id,indf2
  2034  001354  4A13               	infsnz	add_sensor@id,f,c
  2035  001356  2A14               	incf	add_sensor@id+1,f,c
  2036  001358  2A18               	incf	add_sensor@i,f,c
  2037  00135A                     l861:
  2038  00135A  5015               	movf	add_sensor@numIdBytes,w,c
  2039  00135C  5C18               	subwf	add_sensor@i,w,c
  2040  00135E  A0D8               	btfss	status,0,c
  2041  001360  D7E5               	goto	l862
  2042                           
  2043                           ;sensor.c: 45: }
  2044                           ;sensor.c: 46: learnedSensorPtr++;
  2045  001362  2A1E               	incf	_learnedSensorPtr,f,c
  2046  001364  0012               	return		;funcret
  2047  001366                     __end_of_add_sensor:
  2048                           	opt stack 0
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           prodh	equ	0xFF4
  2054                           prodl	equ	0xFF3
  2055                           intcon	equ	0xFF2
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           postdec1	equ	0xFE5
  2059                           fsr1l	equ	0xFE1
  2060                           indf2	equ	0xFDF
  2061                           postinc2	equ	0xFDE
  2062                           fsr2h	equ	0xFDA
  2063                           fsr2l	equ	0xFD9
  2064                           status	equ	0xFD8
  2065                           
  2066 ;; *************** function _isr *****************
  2067 ;; Defined at:
  2068 ;;		line 18 in file "main.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;Total ram usage:       18 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    1
  2089 ;; This function calls:
  2090 ;;		_control_leds
  2091 ;;		_disable_tmr3
  2092 ;;		_disable_uart_rx_int
  2093 ;;		_reload_timer0
  2094 ;;		_start_uart_rx
  2095 ;; This function is called by:
  2096 ;;		Interrupt level 2
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	intcode
  2101  000008                     __pintcode:
  2102                           	opt stack 0
  2103  000008                     _isr:
  2104                           	opt stack 26
  2105                           
  2106                           ;incstack = 0
  2107  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2108  00000A  CFFA F001          	movff	pclath,??_isr
  2109  00000E  CFFB F002          	movff	pclatu,??_isr+1
  2110  000012  CFE9 F003          	movff	fsr0l,??_isr+2
  2111  000016  CFEA F004          	movff	fsr0h,??_isr+3
  2112  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
  2113  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
  2114  000022  CFD9 F007          	movff	fsr2l,??_isr+6
  2115  000026  CFDA F008          	movff	fsr2h,??_isr+7
  2116  00002A  CFF3 F009          	movff	prodl,??_isr+8
  2117  00002E  CFF4 F00A          	movff	prodh,??_isr+9
  2118  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
  2119  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
  2120  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
  2121  00003E  CFF5 F00E          	movff	tablat,??_isr+13
  2122  000042  C037  F00F         	movff	btemp,??_isr+14
  2123  000046  C038  F010         	movff	btemp+1,??_isr+15
  2124  00004A  C039  F011         	movff	btemp+2,??_isr+16
  2125  00004E  C03A  F012         	movff	btemp+3,??_isr+17
  2126                           
  2127                           ;main.c: 21: if (TMR0IF)
  2128  000052  A4F2               	btfss	intcon,2,c	;volatile
  2129  000054  D007               	goto	i2l151
  2130                           
  2131                           ;main.c: 22: {
  2132                           ;main.c: 23: TMR0IF = 0;
  2133  000056  94F2               	bcf	intcon,2,c	;volatile
  2134                           
  2135                           ;main.c: 24: reload_timer0();
  2136  000058  EC64  F00A         	call	_reload_timer0	;wreg free
  2137                           
  2138                           ;main.c: 25: gled_tmr0_tick++;
  2139  00005C  2A26               	incf	_gled_tmr0_tick,f,c
  2140                           
  2141                           ;main.c: 26: bled_tmr0_tick++;
  2142  00005E  2A25               	incf	_bled_tmr0_tick,f,c
  2143                           
  2144                           ;main.c: 27: control_leds();
  2145  000060  ECBF  F008         	call	_control_leds	;wreg free
  2146  000064                     i2l151:
  2147                           
  2148                           ;main.c: 28: }
  2149                           ;main.c: 30: if (TMR3IF)
  2150  000064  A2A1               	btfss	4001,1,c	;volatile
  2151  000066  D062               	goto	i2l168
  2152                           
  2153                           ;main.c: 31: {
  2154                           ;main.c: 32: tmr3_cnt++;
  2155  000068  2A24               	incf	_tmr3_cnt,f,c
  2156                           
  2157                           ;main.c: 33: TMR3IF = 0;
  2158  00006A  92A1               	bcf	4001,1,c	;volatile
  2159                           
  2160                           ;main.c: 35: if (tmr3_cnt >= 8 && ((inButtonMenu && buttonPressCount > 0) || !inButtonMe
      +                          nu))
  2161  00006C  0E07               	movlw	7
  2162  00006E  6424               	cpfsgt	_tmr3_cnt,c
  2163  000070  D04E               	goto	i2l153
  2164  000072  5029               	movf	_inButtonMenu,w,c
  2165  000074  B4D8               	btfsc	status,2,c
  2166  000076  D003               	goto	i2u26_40
  2167  000078  5027               	movf	_buttonPressCount,w,c
  2168  00007A  A4D8               	btfss	status,2,c
  2169  00007C  D003               	goto	i2u27_40
  2170  00007E                     i2u26_40:
  2171  00007E  5029               	movf	_inButtonMenu,w,c
  2172  000080  A4D8               	btfss	status,2,c
  2173  000082  D045               	goto	i2l153
  2174  000084                     i2u27_40:
  2175                           
  2176                           ;main.c: 36: {
  2177                           ;main.c: 37: tmr3_cnt = 0;
  2178  000084  0E00               	movlw	0
  2179  000086  6E24               	movwf	_tmr3_cnt,c
  2180                           
  2181                           ;main.c: 38: if (inButtonMenu && buttonPressCount == 1)
  2182  000088  5029               	movf	_inButtonMenu,w,c
  2183  00008A  B4D8               	btfsc	status,2,c
  2184  00008C  D009               	goto	i2l158
  2185  00008E  0427               	decf	_buttonPressCount,w,c
  2186  000090  A4D8               	btfss	status,2,c
  2187  000092  D006               	goto	i2l158
  2188                           
  2189                           ;main.c: 39: {
  2190                           ;main.c: 40: inButtonMenu = 0;
  2191  000094  0E00               	movlw	0
  2192  000096  6E29               	movwf	_inButtonMenu,c
  2193                           
  2194                           ;main.c: 41: disable_tmr3();
  2195  000098  EC51  F00A         	call	_disable_tmr3	;wreg free
  2196                           
  2197                           ;main.c: 42: state = LISTEN_SMS;
  2198  00009C  0E01               	movlw	1
  2199  00009E  D019               	goto	L3
  2200  0000A0                     i2l158:
  2201                           
  2202                           ;main.c: 44: else if (inButtonMenu && buttonPressCount == 2)
  2203  0000A0  5029               	movf	_inButtonMenu,w,c
  2204  0000A2  B4D8               	btfsc	status,2,c
  2205  0000A4  D00A               	goto	i2l160
  2206  0000A6  0E02               	movlw	2
  2207  0000A8  1827               	xorwf	_buttonPressCount,w,c
  2208  0000AA  A4D8               	btfss	status,2,c
  2209  0000AC  D006               	goto	i2l160
  2210                           
  2211                           ;main.c: 45: {
  2212                           ;main.c: 46: inButtonMenu = 0;
  2213  0000AE  0E00               	movlw	0
  2214  0000B0  6E29               	movwf	_inButtonMenu,c
  2215                           
  2216                           ;main.c: 47: disable_tmr3();
  2217  0000B2  EC51  F00A         	call	_disable_tmr3	;wreg free
  2218                           
  2219                           ;main.c: 48: state = LEARN_SENSOR;
  2220  0000B6  0E02               	movlw	2
  2221  0000B8  D00C               	goto	L3
  2222  0000BA                     i2l160:
  2223                           
  2224                           ;main.c: 50: else if (inButtonMenu && buttonPressCount == 3)
  2225  0000BA  5029               	movf	_inButtonMenu,w,c
  2226  0000BC  B4D8               	btfsc	status,2,c
  2227  0000BE  D00B               	goto	i2l162
  2228  0000C0  0E03               	movlw	3
  2229  0000C2  1827               	xorwf	_buttonPressCount,w,c
  2230  0000C4  A4D8               	btfss	status,2,c
  2231  0000C6  D007               	goto	i2l162
  2232                           
  2233                           ;main.c: 51: {
  2234                           ;main.c: 52: inButtonMenu = 0;
  2235  0000C8  0E00               	movlw	0
  2236  0000CA  6E29               	movwf	_inButtonMenu,c
  2237                           
  2238                           ;main.c: 53: disable_tmr3();
  2239  0000CC  EC51  F00A         	call	_disable_tmr3	;wreg free
  2240                           
  2241                           ;main.c: 54: state = DELETE_SENSOR;
  2242  0000D0  0E03               	movlw	3
  2243  0000D2                     L3:
  2244  0000D2  6E22               	movwf	_state,c
  2245                           
  2246                           ;main.c: 55: }
  2247  0000D4  D019               	goto	i2l166
  2248  0000D6                     i2l162:
  2249                           
  2250                           ;main.c: 56: else if (inButtonMenu && buttonPressCount == 4)
  2251  0000D6  5029               	movf	_inButtonMenu,w,c
  2252  0000D8  B4D8               	btfsc	status,2,c
  2253  0000DA  D009               	goto	i2l164
  2254  0000DC  0E04               	movlw	4
  2255  0000DE  1827               	xorwf	_buttonPressCount,w,c
  2256  0000E0  A4D8               	btfss	status,2,c
  2257  0000E2  D005               	goto	i2l164
  2258                           
  2259                           ;main.c: 57: {
  2260                           ;main.c: 58: inButtonMenu = 0;
  2261  0000E4  0E00               	movlw	0
  2262  0000E6  6E29               	movwf	_inButtonMenu,c
  2263                           
  2264                           ;main.c: 59: disable_tmr3();
  2265  0000E8  EC51  F00A         	call	_disable_tmr3	;wreg free
  2266                           
  2267                           ;main.c: 61: }
  2268  0000EC  D00D               	goto	i2l166
  2269  0000EE                     i2l164:
  2270                           
  2271                           ;main.c: 62: else if (buttonPressCount == 5)
  2272  0000EE  0E05               	movlw	5
  2273  0000F0  1827               	xorwf	_buttonPressCount,w,c
  2274  0000F2  A4D8               	btfss	status,2,c
  2275  0000F4  D009               	goto	i2l166
  2276                           
  2277                           ;main.c: 63: {
  2278                           ;main.c: 64: inButtonMenu = !inButtonMenu;
  2279  0000F6  5029               	movf	_inButtonMenu,w,c
  2280  0000F8  A4D8               	btfss	status,2,c
  2281  0000FA  D002               	goto	i2u37_40
  2282  0000FC  0E01               	movlw	1
  2283  0000FE  D001               	goto	i2u38_40
  2284  000100                     i2u37_40:
  2285  000100  0E00               	movlw	0
  2286  000102                     i2u38_40:
  2287  000102  6E29               	movwf	_inButtonMenu,c
  2288                           
  2289                           ;main.c: 65: tmr3_cnt = 0;
  2290  000104  0E00               	movlw	0
  2291  000106  6E24               	movwf	_tmr3_cnt,c
  2292  000108                     i2l166:
  2293                           
  2294                           ;main.c: 66: }
  2295                           ;main.c: 68: buttonPressCount = 0;
  2296  000108  0E00               	movlw	0
  2297  00010A  6E27               	movwf	_buttonPressCount,c
  2298                           
  2299                           ;main.c: 69: }
  2300  00010C  D00F               	goto	i2l168
  2301  00010E                     i2l153:
  2302                           
  2303                           ;main.c: 70: else if (tmr3_cnt >= 40 && inButtonMenu && buttonPressCount == 0)
  2304  00010E  0E27               	movlw	39
  2305  000110  6424               	cpfsgt	_tmr3_cnt,c
  2306  000112  D00C               	goto	i2l168
  2307  000114  5029               	movf	_inButtonMenu,w,c
  2308  000116  B4D8               	btfsc	status,2,c
  2309  000118  D009               	goto	i2l168
  2310  00011A  5027               	movf	_buttonPressCount,w,c
  2311  00011C  A4D8               	btfss	status,2,c
  2312  00011E  D006               	goto	i2l168
  2313                           
  2314                           ;main.c: 71: {
  2315                           ;main.c: 72: inButtonMenu = 0;
  2316  000120  0E00               	movlw	0
  2317  000122  6E29               	movwf	_inButtonMenu,c
  2318                           
  2319                           ;main.c: 73: tmr3_cnt = 0;
  2320  000124  0E00               	movlw	0
  2321  000126  6E24               	movwf	_tmr3_cnt,c
  2322                           
  2323                           ;main.c: 74: disable_tmr3();
  2324  000128  EC51  F00A         	call	_disable_tmr3	;wreg free
  2325  00012C                     i2l168:
  2326                           
  2327                           ;main.c: 75: }
  2328                           ;main.c: 76: }
  2329                           ;main.c: 78: if (INTCONbits.RBIF)
  2330  00012C  B0F2               	btfsc	intcon,0,c	;volatile
  2331                           
  2332                           ;main.c: 79: {
  2333                           ;main.c: 80: start_uart_rx();
  2334  00012E  EC26  F00A         	call	_start_uart_rx	;wreg free
  2335                           
  2336                           ;main.c: 81: }
  2337                           ;main.c: 82: if (RC2IF)
  2338  000132  AAA4               	btfss	4004,5,c	;volatile
  2339  000134  D015               	goto	i2l171
  2340                           
  2341                           ;main.c: 83: {
  2342                           ;main.c: 84: RC2IF = 0;
  2343  000136  9AA4               	bcf	4004,5,c	;volatile
  2344                           
  2345                           ;main.c: 85: RS232Buf[rx_pos++] = RC2REG;
  2346  000138  5023               	movf	_rx_pos,w,c
  2347  00013A  0D01               	mullw	1
  2348  00013C  0E2A               	movlw	low _RS232Buf
  2349  00013E  24F3               	addwf	prodl,w,c
  2350  000140  6ED9               	movwf	fsr2l,c
  2351  000142  0E00               	movlw	high _RS232Buf
  2352  000144  20F4               	addwfc	prodh,w,c
  2353  000146  6EDA               	movwf	fsr2h,c
  2354  000148  CF74 FFDF          	movff	3956,indf2	;volatile
  2355  00014C  2A23               	incf	_rx_pos,f,c
  2356                           
  2357                           ;main.c: 86: if (rx_pos >= 6)
  2358  00014E  0E05               	movlw	5
  2359  000150  6423               	cpfsgt	_rx_pos,c
  2360  000152  D006               	goto	i2l171
  2361                           
  2362                           ;main.c: 87: {
  2363                           ;main.c: 88: rxDataPending = 1;
  2364  000154  0E01               	movlw	1
  2365  000156  6E28               	movwf	_rxDataPending,c
  2366                           
  2367                           ;main.c: 89: rx_pos = 0;
  2368  000158  0E00               	movlw	0
  2369  00015A  6E23               	movwf	_rx_pos,c
  2370                           
  2371                           ;main.c: 90: disable_uart_rx_int();
  2372  00015C  EC5E  F00A         	call	_disable_uart_rx_int	;wreg free
  2373  000160                     i2l171:
  2374  000160  C012  F03A         	movff	??_isr+17,btemp+3
  2375  000164  C011  F039         	movff	??_isr+16,btemp+2
  2376  000168  C010  F038         	movff	??_isr+15,btemp+1
  2377  00016C  C00F  F037         	movff	??_isr+14,btemp
  2378  000170  C00E  FFF5         	movff	??_isr+13,tablat
  2379  000174  C00D  FFF8         	movff	??_isr+12,tblptru
  2380  000178  C00C  FFF7         	movff	??_isr+11,tblptrh
  2381  00017C  C00B  FFF6         	movff	??_isr+10,tblptrl
  2382  000180  C00A  FFF4         	movff	??_isr+9,prodh
  2383  000184  C009  FFF3         	movff	??_isr+8,prodl
  2384  000188  C008  FFDA         	movff	??_isr+7,fsr2h
  2385  00018C  C007  FFD9         	movff	??_isr+6,fsr2l
  2386  000190  C006  FFE2         	movff	??_isr+5,fsr1h
  2387  000194  C005  FFE1         	movff	??_isr+4,fsr1l
  2388  000198  C004  FFEA         	movff	??_isr+3,fsr0h
  2389  00019C  C003  FFE9         	movff	??_isr+2,fsr0l
  2390  0001A0  C002  FFFB         	movff	??_isr+1,pclatu
  2391  0001A4  C001  FFFA         	movff	??_isr,pclath
  2392  0001A8  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2393  0001AA  0011               	retfie		f
  2394  0001AC                     __end_of_isr:
  2395                           	opt stack 0
  2396                           pclatu	equ	0xFFB
  2397                           pclath	equ	0xFFA
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           prodh	equ	0xFF4
  2403                           prodl	equ	0xFF3
  2404                           intcon	equ	0xFF2
  2405                           postinc0	equ	0xFEE
  2406                           fsr0h	equ	0xFEA
  2407                           fsr0l	equ	0xFE9
  2408                           wreg	equ	0xFE8
  2409                           postdec1	equ	0xFE5
  2410                           fsr1h	equ	0xFE2
  2411                           fsr1l	equ	0xFE1
  2412                           indf2	equ	0xFDF
  2413                           postinc2	equ	0xFDE
  2414                           fsr2h	equ	0xFDA
  2415                           fsr2l	equ	0xFD9
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _start_uart_rx *****************
  2419 ;; Defined at:
  2420 ;;		line 33 in file "uart.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_isr
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text14
  2448  00144C                     __ptext14:
  2449                           	opt stack 0
  2450  00144C                     _start_uart_rx:
  2451                           	opt stack 26
  2452                           
  2453                           ;uart.c: 35: TX2STAbits.SYNC = 0;
  2454                           
  2455                           ;incstack = 0
  2456  00144C  9872               	bcf	3954,4,c	;volatile
  2457                           
  2458                           ;uart.c: 36: RC2STAbits.SPEN = 1;
  2459  00144E  8E71               	bsf	3953,7,c	;volatile
  2460                           
  2461                           ;uart.c: 38: RC2STAbits.CREN = 1;
  2462  001450  8871               	bsf	3953,4,c	;volatile
  2463                           
  2464                           ;uart.c: 39: TX2STAbits.TXEN = 1;
  2465  001452  8A72               	bsf	3954,5,c	;volatile
  2466                           
  2467                           ;uart.c: 41: intconSaveBits = INTCON;
  2468  001454  CFF2 F021          	movff	intcon,_intconSaveBits	;volatile
  2469                           
  2470                           ;uart.c: 42: INTCON = 0;
  2471  001458  0E00               	movlw	0
  2472  00145A  6EF2               	movwf	intcon,c	;volatile
  2473                           
  2474                           ;uart.c: 43: INTCONbits.PEIE = 1;
  2475  00145C  8CF2               	bsf	intcon,6,c	;volatile
  2476                           
  2477                           ;uart.c: 44: pie3SaveBits = PIE3;
  2478  00145E  CFA3 F020          	movff	4003,_pie3SaveBits	;volatile
  2479                           
  2480                           ;uart.c: 45: PIE3 = 0;
  2481  001462  0E00               	movlw	0
  2482  001464  6EA3               	movwf	4003,c	;volatile
  2483                           
  2484                           ;uart.c: 46: PIE3bits.RC2IE = 1;
  2485  001466  8AA3               	bsf	4003,5,c	;volatile
  2486                           
  2487                           ;uart.c: 48: INTCONbits.GIE = 1;
  2488  001468  8EF2               	bsf	intcon,7,c	;volatile
  2489  00146A  0012               	return		;funcret
  2490  00146C                     __end_of_start_uart_rx:
  2491                           	opt stack 0
  2492                           pclatu	equ	0xFFB
  2493                           pclath	equ	0xFFA
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           prodh	equ	0xFF4
  2499                           prodl	equ	0xFF3
  2500                           intcon	equ	0xFF2
  2501                           postinc0	equ	0xFEE
  2502                           fsr0h	equ	0xFEA
  2503                           fsr0l	equ	0xFE9
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           fsr1h	equ	0xFE2
  2507                           fsr1l	equ	0xFE1
  2508                           indf2	equ	0xFDF
  2509                           postinc2	equ	0xFDE
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _reload_timer0 *****************
  2515 ;; Defined at:
  2516 ;;		line 230 in file "main.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_isr
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text15
  2544  0014C8                     __ptext15:
  2545                           	opt stack 0
  2546  0014C8                     _reload_timer0:
  2547                           	opt stack 26
  2548                           
  2549                           ;main.c: 232: TMR0L = ((65535-781)%256);
  2550                           
  2551                           ;incstack = 0
  2552  0014C8  0EF2               	movlw	242
  2553  0014CA  6ED6               	movwf	4054,c	;volatile
  2554                           
  2555                           ;main.c: 233: TMR0H = ((65535-781)/256);
  2556  0014CC  0EFC               	movlw	252
  2557  0014CE  6ED7               	movwf	4055,c	;volatile
  2558  0014D0  0012               	return		;funcret
  2559  0014D2                     __end_of_reload_timer0:
  2560                           	opt stack 0
  2561                           pclatu	equ	0xFFB
  2562                           pclath	equ	0xFFA
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           prodh	equ	0xFF4
  2568                           prodl	equ	0xFF3
  2569                           intcon	equ	0xFF2
  2570                           postinc0	equ	0xFEE
  2571                           fsr0h	equ	0xFEA
  2572                           fsr0l	equ	0xFE9
  2573                           wreg	equ	0xFE8
  2574                           postdec1	equ	0xFE5
  2575                           fsr1h	equ	0xFE2
  2576                           fsr1l	equ	0xFE1
  2577                           indf2	equ	0xFDF
  2578                           postinc2	equ	0xFDE
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _disable_uart_rx_int *****************
  2584 ;; Defined at:
  2585 ;;		line 56 in file "uart.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		None
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_isr
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text16
  2613  0014BC                     __ptext16:
  2614                           	opt stack 0
  2615  0014BC                     _disable_uart_rx_int:
  2616                           	opt stack 26
  2617                           
  2618                           ;uart.c: 58: RC2IE = 0;
  2619                           
  2620                           ;incstack = 0
  2621  0014BC  9AA3               	bcf	4003,5,c	;volatile
  2622                           
  2623                           ;uart.c: 59: PIE3 = pie3SaveBits;
  2624  0014BE  C020  FFA3         	movff	_pie3SaveBits,4003	;volatile
  2625                           
  2626                           ;uart.c: 60: INTCON = intconSaveBits;
  2627  0014C2  C021  FFF2         	movff	_intconSaveBits,intcon	;volatile
  2628  0014C6  0012               	return		;funcret
  2629  0014C8                     __end_of_disable_uart_rx_int:
  2630                           	opt stack 0
  2631                           pclatu	equ	0xFFB
  2632                           pclath	equ	0xFFA
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           prodh	equ	0xFF4
  2638                           prodl	equ	0xFF3
  2639                           intcon	equ	0xFF2
  2640                           postinc0	equ	0xFEE
  2641                           fsr0h	equ	0xFEA
  2642                           fsr0l	equ	0xFE9
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           fsr1h	equ	0xFE2
  2646                           fsr1l	equ	0xFE1
  2647                           indf2	equ	0xFDF
  2648                           postinc2	equ	0xFDE
  2649                           fsr2h	equ	0xFDA
  2650                           fsr2l	equ	0xFD9
  2651                           status	equ	0xFD8
  2652                           
  2653 ;; *************** function _disable_tmr3 *****************
  2654 ;; Defined at:
  2655 ;;		line 211 in file "main.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_isr
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text17
  2683  0014A2                     __ptext17:
  2684                           	opt stack 0
  2685  0014A2                     _disable_tmr3:
  2686                           	opt stack 26
  2687                           
  2688                           ;main.c: 213: buttonPressCount = 0;
  2689                           
  2690                           ;incstack = 0
  2691  0014A2  0E00               	movlw	0
  2692  0014A4  6E27               	movwf	_buttonPressCount,c
  2693                           
  2694                           ;main.c: 214: tmr3_cnt = 0;
  2695  0014A6  0E00               	movlw	0
  2696  0014A8  6E24               	movwf	_tmr3_cnt,c
  2697                           
  2698                           ;main.c: 215: T3CONbits.TMR3ON = 0;
  2699  0014AA  90B1               	bcf	4017,0,c	;volatile
  2700                           
  2701                           ;main.c: 216: PIE2bits.TMR3IE = 0;
  2702  0014AC  92A0               	bcf	4000,1,c	;volatile
  2703  0014AE  0012               	return		;funcret
  2704  0014B0                     __end_of_disable_tmr3:
  2705                           	opt stack 0
  2706                           pclatu	equ	0xFFB
  2707                           pclath	equ	0xFFA
  2708                           tblptru	equ	0xFF8
  2709                           tblptrh	equ	0xFF7
  2710                           tblptrl	equ	0xFF6
  2711                           tablat	equ	0xFF5
  2712                           prodh	equ	0xFF4
  2713                           prodl	equ	0xFF3
  2714                           intcon	equ	0xFF2
  2715                           postinc0	equ	0xFEE
  2716                           fsr0h	equ	0xFEA
  2717                           fsr0l	equ	0xFE9
  2718                           wreg	equ	0xFE8
  2719                           postdec1	equ	0xFE5
  2720                           fsr1h	equ	0xFE2
  2721                           fsr1l	equ	0xFE1
  2722                           indf2	equ	0xFDF
  2723                           postinc2	equ	0xFDE
  2724                           fsr2h	equ	0xFDA
  2725                           fsr2l	equ	0xFD9
  2726                           status	equ	0xFD8
  2727                           
  2728 ;; *************** function _control_leds *****************
  2729 ;; Defined at:
  2730 ;;		line 85 in file "state.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_isr
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text18
  2758  00117E                     __ptext18:
  2759                           	opt stack 0
  2760  00117E                     _control_leds:
  2761                           	opt stack 26
  2762                           
  2763                           ;state.c: 87: switch (state)
  2764                           
  2765                           ;incstack = 0
  2766  00117E  D057               	goto	i2l798
  2767  001180                     
  2768                           ;state.c: 90: if (waiting)
  2769  001180  5035               	movf	_waiting,w,c
  2770  001182  B4D8               	btfsc	status,2,c
  2771  001184  0012               	return	
  2772  001186  D007               	goto	i2l801
  2773  001188                     i2l802:
  2774                           
  2775                           ;state.c: 95: LATBbits.LB3=0;
  2776  001188  968A               	bcf	3978,3,c	;volatile
  2777                           
  2778                           ;state.c: 96: break;
  2779  00118A  D00F               	goto	i2l803
  2780  00118C                     i2l804:
  2781                           
  2782                           ;state.c: 98: LATBbits.LB3=1;
  2783  00118C  868A               	bsf	3978,3,c	;volatile
  2784                           
  2785                           ;state.c: 99: break;
  2786  00118E  D00D               	goto	i2l803
  2787  001190                     
  2788                           ;state.c: 101: gled_tmr0_tick = 0;
  2789  001190  0E00               	movlw	0
  2790  001192  6E26               	movwf	_gled_tmr0_tick,c
  2791                           
  2792                           ;state.c: 103: }
  2793                           
  2794                           ;state.c: 102: break;
  2795  001194  D00A               	goto	i2l803
  2796  001196                     i2l801:
  2797  001196  5026               	movf	_gled_tmr0_tick,w,c
  2798                           
  2799                           ; Switch size 1, requested type "space"
  2800                           ; Number of cases is 3, Range of values is 1 to 20
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte           10     6 (average)
  2804                           ;	Chosen strategy is simple_byte
  2805  001198  0A01               	xorlw	1	; case 1
  2806  00119A  B4D8               	btfsc	status,2,c
  2807  00119C  D7F5               	goto	i2l802
  2808  00119E  0A04               	xorlw	4	; case 5
  2809  0011A0  B4D8               	btfsc	status,2,c
  2810  0011A2  D7F4               	goto	i2l804
  2811  0011A4  0A11               	xorlw	17	; case 20
  2812  0011A6  B4D8               	btfsc	status,2,c
  2813  0011A8  D7F3               	goto	i2l805
  2814  0011AA                     i2l803:
  2815                           
  2816                           ;state.c: 104: LATCbits.LC4=1;
  2817  0011AA  888B               	bsf	3979,4,c	;volatile
  2818                           
  2819                           ;state.c: 105: bled_tmr0_tick = 0;
  2820  0011AC  0E00               	movlw	0
  2821  0011AE  6E25               	movwf	_bled_tmr0_tick,c
  2822                           
  2823                           ;state.c: 106: }
  2824                           ;state.c: 107: break;
  2825  0011B0  0012               	return	
  2826  0011B2                     i2l809:
  2827                           
  2828                           ;state.c: 113: LATCbits.LC4=0;
  2829  0011B2  988B               	bcf	3979,4,c	;volatile
  2830                           
  2831                           ;state.c: 114: break;
  2832  0011B4  D00B               	goto	i2l810
  2833  0011B6                     i2l811:
  2834                           
  2835                           ;state.c: 116: LATCbits.LC4=1;
  2836  0011B6  888B               	bsf	3979,4,c	;volatile
  2837                           
  2838                           ;state.c: 117: bled_tmr0_tick = 0;
  2839  0011B8  0E00               	movlw	0
  2840  0011BA  6E25               	movwf	_bled_tmr0_tick,c
  2841                           
  2842                           ;state.c: 119: }
  2843                           
  2844                           ;state.c: 118: break;
  2845  0011BC  D007               	goto	i2l810
  2846  0011BE  5025               	movf	_bled_tmr0_tick,w,c
  2847                           
  2848                           ; Switch size 1, requested type "space"
  2849                           ; Number of cases is 2, Range of values is 1 to 2
  2850                           ; switch strategies available:
  2851                           ; Name         Instructions Cycles
  2852                           ; simple_byte            7     4 (average)
  2853                           ;	Chosen strategy is simple_byte
  2854  0011C0  0A01               	xorlw	1	; case 1
  2855  0011C2  B4D8               	btfsc	status,2,c
  2856  0011C4  D7F6               	goto	i2l809
  2857  0011C6  0A03               	xorlw	3	; case 2
  2858  0011C8  B4D8               	btfsc	status,2,c
  2859  0011CA  D7F5               	goto	i2l811
  2860  0011CC                     i2l810:
  2861                           
  2862                           ;state.c: 120: LATBbits.LB3=1;
  2863  0011CC  868A               	bsf	3978,3,c	;volatile
  2864                           
  2865                           ;state.c: 121: gled_tmr0_tick = 0;
  2866  0011CE  0E00               	movlw	0
  2867  0011D0  6E26               	movwf	_gled_tmr0_tick,c
  2868                           
  2869                           ;state.c: 122: break;
  2870  0011D2  0012               	return	
  2871  0011D4                     
  2872                           ;state.c: 125: learn_timer_tick++;
  2873  0011D4  4A1B               	infsnz	_learn_timer_tick,f,c
  2874  0011D6  2A1C               	incf	_learn_timer_tick+1,f,c
  2875                           
  2876                           ;state.c: 126: switch (bled_tmr0_tick)
  2877  0011D8  D007               	goto	i2l813
  2878  0011DA                     i2l814:
  2879                           
  2880                           ;state.c: 129: LATCbits.LC4=0;
  2881  0011DA  988B               	bcf	3979,4,c	;volatile
  2882                           
  2883                           ;state.c: 130: break;
  2884  0011DC  D00F               	goto	i2l815
  2885  0011DE                     i2l816:
  2886                           
  2887                           ;state.c: 132: LATCbits.LC4=1;
  2888  0011DE  888B               	bsf	3979,4,c	;volatile
  2889                           
  2890                           ;state.c: 133: break;
  2891  0011E0  D00D               	goto	i2l815
  2892  0011E2                     
  2893                           ;state.c: 135: bled_tmr0_tick = 0;
  2894  0011E2  0E00               	movlw	0
  2895  0011E4  6E25               	movwf	_bled_tmr0_tick,c
  2896                           
  2897                           ;state.c: 137: }
  2898                           
  2899                           ;state.c: 136: break;
  2900  0011E6  D00A               	goto	i2l815
  2901  0011E8                     i2l813:
  2902  0011E8  5025               	movf	_bled_tmr0_tick,w,c
  2903                           
  2904                           ; Switch size 1, requested type "space"
  2905                           ; Number of cases is 3, Range of values is 1 to 20
  2906                           ; switch strategies available:
  2907                           ; Name         Instructions Cycles
  2908                           ; simple_byte           10     6 (average)
  2909                           ;	Chosen strategy is simple_byte
  2910  0011EA  0A01               	xorlw	1	; case 1
  2911  0011EC  B4D8               	btfsc	status,2,c
  2912  0011EE  D7F5               	goto	i2l814
  2913  0011F0  0A04               	xorlw	4	; case 5
  2914  0011F2  B4D8               	btfsc	status,2,c
  2915  0011F4  D7F4               	goto	i2l816
  2916  0011F6  0A11               	xorlw	17	; case 20
  2917  0011F8  B4D8               	btfsc	status,2,c
  2918  0011FA  D7F3               	goto	i2l817
  2919  0011FC                     i2l815:
  2920                           
  2921                           ;state.c: 138: LATBbits.LB3=0;
  2922  0011FC  968A               	bcf	3978,3,c	;volatile
  2923                           
  2924                           ;state.c: 139: gled_tmr0_tick = 0;
  2925  0011FE  0E00               	movlw	0
  2926  001200  6E26               	movwf	_gled_tmr0_tick,c
  2927                           
  2928                           ;state.c: 140: break;
  2929  001202  0012               	return	
  2930  001204                     i2l820:
  2931                           
  2932                           ;state.c: 146: LATBbits.LB3=0;
  2933  001204  968A               	bcf	3978,3,c	;volatile
  2934                           
  2935                           ;state.c: 147: break;
  2936  001206  D00F               	goto	i2l821
  2937  001208                     i2l822:
  2938                           
  2939                           ;state.c: 149: LATBbits.LB3=1;
  2940  001208  868A               	bsf	3978,3,c	;volatile
  2941                           
  2942                           ;state.c: 150: break;
  2943  00120A  D00D               	goto	i2l821
  2944  00120C                     
  2945                           ;state.c: 152: gled_tmr0_tick = 0;
  2946  00120C  0E00               	movlw	0
  2947  00120E  6E26               	movwf	_gled_tmr0_tick,c
  2948                           
  2949                           ;state.c: 154: }
  2950                           
  2951                           ;state.c: 153: break;
  2952  001210  D00A               	goto	i2l821
  2953  001212  5026               	movf	_gled_tmr0_tick,w,c
  2954                           
  2955                           ; Switch size 1, requested type "space"
  2956                           ; Number of cases is 3, Range of values is 1 to 20
  2957                           ; switch strategies available:
  2958                           ; Name         Instructions Cycles
  2959                           ; simple_byte           10     6 (average)
  2960                           ;	Chosen strategy is simple_byte
  2961  001214  0A01               	xorlw	1	; case 1
  2962  001216  B4D8               	btfsc	status,2,c
  2963  001218  D7F5               	goto	i2l820
  2964  00121A  0A04               	xorlw	4	; case 5
  2965  00121C  B4D8               	btfsc	status,2,c
  2966  00121E  D7F4               	goto	i2l822
  2967  001220  0A11               	xorlw	17	; case 20
  2968  001222  B4D8               	btfsc	status,2,c
  2969  001224  D7F3               	goto	i2l823
  2970  001226                     i2l821:
  2971                           
  2972                           ;state.c: 155: LATCbits.LC4=0;
  2973  001226  988B               	bcf	3979,4,c	;volatile
  2974                           
  2975                           ;state.c: 156: bled_tmr0_tick = 0;
  2976  001228  0E00               	movlw	0
  2977  00122A  6E25               	movwf	_bled_tmr0_tick,c
  2978                           
  2979                           ;state.c: 158: }
  2980                           
  2981                           ;state.c: 157: break;
  2982  00122C  0012               	return	
  2983  00122E                     i2l798:
  2984  00122E  5022               	movf	_state,w,c
  2985                           
  2986                           ; Switch size 1, requested type "space"
  2987                           ; Number of cases is 4, Range of values is 0 to 3
  2988                           ; switch strategies available:
  2989                           ; Name         Instructions Cycles
  2990                           ; simple_byte           13     7 (average)
  2991                           ;	Chosen strategy is simple_byte
  2992  001230  0A00               	xorlw	0	; case 0
  2993  001232  B4D8               	btfsc	status,2,c
  2994  001234  D7A5               	goto	i2l799
  2995  001236  0A01               	xorlw	1	; case 1
  2996  001238  B4D8               	btfsc	status,2,c
  2997  00123A  D7C1               	goto	i2l808
  2998  00123C  0A03               	xorlw	3	; case 2
  2999  00123E  B4D8               	btfsc	status,2,c
  3000  001240  D7C9               	goto	i2l812
  3001  001242  0A01               	xorlw	1	; case 3
  3002  001244  A4D8               	btfss	status,2,c
  3003  001246  0012               	return	
  3004  001248  D7E4               	goto	i2l819
  3005  00124A                     __end_of_control_leds:
  3006                           	opt stack 0
  3007                           pclatu	equ	0xFFB
  3008                           pclath	equ	0xFFA
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           fsr0h	equ	0xFEA
  3018                           fsr0l	equ	0xFE9
  3019                           wreg	equ	0xFE8
  3020                           postdec1	equ	0xFE5
  3021                           fsr1h	equ	0xFE2
  3022                           fsr1l	equ	0xFE1
  3023                           indf2	equ	0xFDF
  3024                           postinc2	equ	0xFDE
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           pclatu	equ	0xFFB
  3029                           pclath	equ	0xFFA
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           prodh	equ	0xFF4
  3035                           prodl	equ	0xFF3
  3036                           intcon	equ	0xFF2
  3037                           postinc0	equ	0xFEE
  3038                           fsr0h	equ	0xFEA
  3039                           fsr0l	equ	0xFE9
  3040                           wreg	equ	0xFE8
  3041                           postdec1	equ	0xFE5
  3042                           fsr1h	equ	0xFE2
  3043                           fsr1l	equ	0xFE1
  3044                           indf2	equ	0xFDF
  3045                           postinc2	equ	0xFDE
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           
  3050                           	psect	rparam
  3051  0000                     pclatu	equ	0xFFB
  3052                           pclath	equ	0xFFA
  3053                           tblptru	equ	0xFF8
  3054                           tblptrh	equ	0xFF7
  3055                           tblptrl	equ	0xFF6
  3056                           tablat	equ	0xFF5
  3057                           prodh	equ	0xFF4
  3058                           prodl	equ	0xFF3
  3059                           intcon	equ	0xFF2
  3060                           postinc0	equ	0xFEE
  3061                           fsr0h	equ	0xFEA
  3062                           fsr0l	equ	0xFE9
  3063                           wreg	equ	0xFE8
  3064                           postdec1	equ	0xFE5
  3065                           fsr1h	equ	0xFE2
  3066                           fsr1l	equ	0xFE1
  3067                           indf2	equ	0xFDF
  3068                           postinc2	equ	0xFDE
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073                           	psect	temp
  3074  000037                     btemp:
  3075                           	opt stack 0
  3076  000037                     	ds	1
  3077  0000                     int$flags	set	btemp
  3078  0000                     wtemp6	set	btemp+1
  3079                           pclatu	equ	0xFFB
  3080                           pclath	equ	0xFFA
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           postinc0	equ	0xFEE
  3089                           fsr0h	equ	0xFEA
  3090                           fsr0l	equ	0xFE9
  3091                           wreg	equ	0xFE8
  3092                           postdec1	equ	0xFE5
  3093                           fsr1h	equ	0xFE2
  3094                           fsr1l	equ	0xFE1
  3095                           indf2	equ	0xFDF
  3096                           postinc2	equ	0xFDE
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    126
    Data        7
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      54
    BANK0           160      0     148
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    add_sensor@id	PTR unsigned char  size(2) Largest target is 6
		 -> RS232Buf(COMRAM[6]), 

    alreadyLearned@id	PTR unsigned char  size(2) Largest target is 6
		 -> RS232Buf(COMRAM[6]), 

    rx_uart_write@data	PTR unsigned char  size(2) Largest target is 6
		 -> RS232Buf(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_check_state
    _check_state->_add_sensor
    _check_state->_alreadyLearned
    _check_state->_rx_uart_write
    _rx_uart_write->_rx_uart_transmit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     905
                        _check_state
                           _init_pic
                       _init_uart_md
                       _init_uart_rx
 ---------------------------------------------------------------------------------
 (1) _init_uart_rx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_md                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
                        _enable_ints
 ---------------------------------------------------------------------------------
 (2) _enable_ints                                          0     0      0       0
                       _start_timer0
 ---------------------------------------------------------------------------------
 (3) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_state                                          2     2      0     905
                                             24 COMRAM     2     2      0
                         _add_sensor
                     _alreadyLearned
                  _reload_tmr3_pt25s
                      _rx_uart_write
 ---------------------------------------------------------------------------------
 (2) _rx_uart_write                                        5     2      3     259
                                             19 COMRAM     5     2      3
                   _rx_uart_transmit
                       _stop_uart_rx
 ---------------------------------------------------------------------------------
 (3) _stop_uart_rx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rx_uart_transmit                                     1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _reload_tmr3_pt25s                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _alreadyLearned                                       6     3      3     335
                                             18 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _add_sensor                                           6     3      3     243
                                             18 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 18    18      0       0
                                              0 COMRAM    18    18      0
                       _control_leds
                       _disable_tmr3
                _disable_uart_rx_int
                      _reload_timer0
                      _start_uart_rx
 ---------------------------------------------------------------------------------
 (5) _start_uart_rx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _reload_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _disable_uart_rx_int                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _disable_tmr3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _control_leds                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_state
     _add_sensor
     _alreadyLearned
     _reload_tmr3_pt25s
     _rx_uart_write
       _rx_uart_transmit
       _stop_uart_rx
   _init_pic
     _enable_ints
       _start_timer0
   _init_uart_md
   _init_uart_rx

 _isr (ROOT)
   _control_leds
   _disable_tmr3
   _disable_uart_rx_int
   _reload_timer0
   _start_uart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      36       1       57.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      12        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 16 17:02:30 2018

                 ??_disable_tmr3 0001            __size_of_start_timer0 0014  
          _default_SMS_WAIT_TIME 1076                      __CFG_CP0$ON 000000  
                    __CFG_CP1$ON 000000                      __CFG_CP2$ON 000000  
                    __CFG_CP3$ON 000000                      __CFG_CPB$ON 000000  
                             _RD 007D30                      __CFG_CPD$ON 000000  
                             _WR 007D31           __size_of_start_uart_rx 0020  
                            l177 148C                              l564 13CC  
                            l565 13B4                              l851 12C2  
                            l852 12BC                              l780 10CA  
                            l861 135A                              l781 10DC  
                            l862 132C                              l790 112C  
                            l782 10E0                              l855 12C4  
                            l775 1166                              l791 113C  
                            l783 10F6                              l848 12C6  
                            l776 1082                              l849 125C  
                            l777 10B2                              l778 10AE  
                            l859 1326                              l788 1100  
                            _GIE 007F97                              _isr 0008  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAC                       _TXSTA2bits 000F72  
   __end_ofwakeup_modem_ok@F6763 1060     __end_ofwakeup_modem_ok@F6765 1021  
         __size_of_rx_uart_write 002E             __end_of_default_ACCT 1055  
               _rx_uart_transmit 14B0                     __CFG_LVP$OFF 000000  
                           l1495 14B2                             l2479 1134  
                           ?_isr 0001                             _CFGS 007D36  
                           u1310 1154                             u1567 1096  
                           u1577 10B8                             _PIE3 000FA3  
                           _WREN 007D32                             _main 1480  
             _buttonStillPressed 001D                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0037                     _start_timer0 146C  
                  __CFG_BORV$190 000000                             prodh 000FF4  
                           prodl 000FF3                             start 01AC  
                  __CFG_IESO$OFF 000000            __end_of_default_CYCLE 1079  
                   ___param_bank 000000            __end_of_default_RETRY 1078  
          __end_of_default_PORT1 106B            __end_of_default_PORT2 1069  
          __end_of_default_PORT3 1067            __end_of_default_PORT4 1065  
          __end_of_default_ZONE1 107C            __end_of_default_ZONE2 107B  
                          ??_isr 0001     __size_of_disable_uart_rx_int 000C  
                   _BAUDCON1bits 000FB8      __end_of_default_PROGRAM_ACK 107F  
                  ?_control_leds 0001                            ?_main 0001  
                          _EEADR 000FA9                   _default_TP_PIN 1079  
                          _EEPGD 007D37                            _CREN1 007D5C  
                          _CREN2 007B8C                            _T0CON 000FD5  
          __size_of_stop_uart_rx 0004                            _T3CON 000FB1  
                          _RC1IE 007CED                            _RC1IF 007CF5  
                          _RC2IE 007D1D                            _RC2IF 007D25  
                          i2l151 0064                            i2l160 00BA  
                          i2l153 010E                            i2l162 00D6  
                          i2l171 0160                            i2l164 00EE  
                          i2l166 0108                            i2l158 00A0  
                          i2l168 012C                            i2l801 1196  
                          i2l810 11CC                            i2l802 1188  
                          i2l811 11B6                            i2l803 11AA  
                          i2l820 1204                            i2l812 11D4  
                          i2l804 118C                            i2l821 1226  
                          i2l813 11E8                            i2l805 1190  
                          i2l822 1208                            i2l814 11DA  
                          i2l823 120C                            i2l815 11FC  
                          i2l816 11DE                            i2l808 11BE  
                          i2l817 11E2                            i2l809 11B2  
                          i2l819 1212                            i2l798 122E  
                          i2l799 1180                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _TMR3H 000FB3  
                          _TMR3L 000FB2                            _TRMT1 007D61  
                          _TRMT2 007B91                            _WPUB5 007B0D  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000             __size_of_check_state 00FE  
             __CFG_MCLRE$INTMCLR 000000                            _state 0022  
                  _start_uart_rx 144C                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
                          wtemp6 0038                   __CFG_HFOFST$ON 000000  
                  _rx_uart_write 13AC                  __initialization 1366  
                   __end_of_main 1492                     _stop_uart_rx 14DA  
          __end_of_reload_timer0 14D2    __end_ofinit_modem_io_ok@F6772 1011  
  __end_ofinit_modem_io_ok@F6774 104F    __end_ofinit_modem_io_ok@F6776 103A  
         __end_of_default_TP_PIN 107A                   ??_control_leds 0001  
                 _bled_tmr0_tick 0025                           ??_main 001B  
                  __activetblptr 000002             __size_of_enable_ints 002C  
           __end_of_disable_tmr3 14B0                           _EEADRH 000FAA  
                         _EEDATA 000FA8                           _EECON2 000FA7  
                 ?_start_uart_rx 0001                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                 _learnedSensors 0060                           _RC1REG 000FAE  
                         _RC2REG 000F74                           _RC2STA 000F71  
                         _INTCON 000FF2                           _TMR0IE 007F95  
                         _SPBRG1 000FAF                           _TMR0IF 007F92  
                         _SPBRG2 000F75                           _TMR3IF 007D09  
                 __CFG_WDTPS$256 000000                           _TMR3ON 007D88  
                         _TX1REG 000FAD                           _TX2REG 000F73  
                 ?_rx_uart_write 0014                    ?_init_uart_md 0001  
                  ?_init_uart_rx 0001         alreadyLearned@numIdBytes 0015  
                 __CFG_XINST$OFF 000000             wakeup_modem_ok@F6763 105B  
           wakeup_modem_ok@F6765 1011                   __CFG_STVREN$ON 000000  
               __end_of_init_pic 131E                           clear_0 138C  
                         clear_1 1398             add_sensor@numIdBytes 0015  
             _default_ENCRYPTION 1075                           _rx_pos 0023  
                   __pdataCOMRAM 0030                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8          __size_of_alreadyLearned 0088  
               rx_uart_write@len 0016              _default_ACCESS_CODE 1055  
                     __accesstop 0060          __end_of__initialization 139E  
                __CFG_PBADEN$OFF 000000                   ??_init_uart_md 0013  
                  ___rparam_used 000001                   ??_init_uart_rx 0013  
       __end_of_rx_uart_transmit 14BC                     _default_ACCT 104F  
                 __pcstackCOMRAM 0001                       _add_sensor 131E  
                ??_start_uart_rx 0001              _disable_uart_rx_int 14BC  
                     __pbssBANK0 0060                  __CFG_PLLCFG$OFF 000000  
           __end_of_control_leds 124A                  ??_rx_uart_write 0017  
             __CFG_CCP2MX$PORTC1 000000               __CFG_CCP3MX$PORTB5 000000  
           ?_disable_uart_rx_int 0001            __size_of_disable_tmr3 000E  
                __CFG_WDTEN$SWON 000000                          i2u26_40 007E  
                        i2u27_40 0084                          i2u37_40 0100  
                        i2u38_40 0102                          _SPBRGH1 000FB0  
                        _SPBRGH2 000F76                          _VERSION 0030  
                   _inButtonMenu 0029                     add_sensor@id 0013  
                      ?_init_pic 0001                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
          ??_disable_uart_rx_int 0001                     _disable_tmr3 14A2  
                   __psmallconst 1000                      ?_add_sensor 0013  
                        __pcinit 1366                          __ramtop 1000  
                        __ptext0 1480                          __ptext1 142C  
                        __ptext2 1406                          __ptext3 12D2  
                        __ptext4 13DA                          __ptext5 146C  
                        __ptext6 1080                          __ptext7 13AC  
                        __ptext8 14DA                          __ptext9 14B0  
                   __size_of_isr 01A4                        _T3CONbits 000FB1  
           __end_of_init_uart_md 142C             __end_of_init_uart_rx 144C  
                  ??_check_state 0019                 sim_card_ok@F6781 103A  
               sim_card_ok@F6783 1021          _default_SERVER_ACK_TIME 107C  
                        _waiting 0035                   _alreadyLearned 124A  
           end_of_initialization 139E                    __Lmediumconst 0000  
                     ??_init_pic 0013                     _pie3SaveBits 0020  
                        postdec1 000FE5                          postinc0 000FEE  
                        postinc2 000FDE                 _buttonPressCount 0027  
              rx_uart_write@data 0014            init_modem_io_ok@F6772 1001  
          init_modem_io_ok@F6774 1045            init_modem_io_ok@F6776 102E  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
                      _PORTCbits 000F82                    ??_enable_ints 0013  
               __CFG_FOSC$INTIO7 000000           __end_of_alreadyLearned 12D2  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94            __size_of_control_leds 00CC  
                  _rxDataPending 0028           __size_of_reload_timer0 000A  
            __end_of_check_state 117E              __end_of_default_APN 1075  
            __end_of_default_IP1 1073              __end_of_default_IP2 1071  
            __end_of_default_IP3 106F              __end_of_default_IP4 106D  
            __size_of_add_sensor 0048                ?_rx_uart_transmit 0001  
                  _default_CYCLE 1078                    _default_RETRY 1077  
                  _default_PORT1 1069                    _default_PORT2 1067  
                  _default_PORT3 1065                    _default_PORT4 1063  
                  _default_ZONE1 107B                    _default_ZONE2 107A  
             ??_rx_uart_transmit 0013                      _BAUDCONbits 000FB8  
                  __pidataCOMRAM 14D2                     _control_leds 117E  
                ?_alreadyLearned 0013              start_initialization 1366  
                    __end_of_isr 01AC              __end_of_enable_ints 1406  
                  ?_start_timer0 0001                    _reload_timer0 14C8  
          __size_of_init_uart_md 0026            __size_of_init_uart_rx 0020  
           rx_uart_transmit@data 0013                      __pbssCOMRAM 001B  
                    _check_state 1080                _default_LINE_CARD 1060  
                    _default_APN 1073                      _default_IP1 1071  
                    _default_IP2 106F                      _default_IP3 106D  
                    _default_IP4 106B            __end_of_start_uart_rx 146C  
               alreadyLearned@id 0013                   ??_start_timer0 0013  
__end_of_default_SERVER_ACK_TIME 107D            __end_of_rx_uart_write 13DA  
    __end_of_default_ACCESS_CODE 105B                     check_state@i 001A  
              __size_of_init_pic 004C                     _init_uart_md 1406  
  __end_of_default_SMS_WAIT_TIME 1077                     _init_uart_rx 142C  
       __end_ofsim_card_ok@F6781 1045         __end_ofsim_card_ok@F6783 102E  
                  ?_stop_uart_rx 0001                        __pintcode 0008  
            _default_PROGRAM_ACK 107E                _default_TEST_FREQ 107D  
                 ?_reload_timer0 0001                     ??_add_sensor 0016  
               __CFG_PRICLKEN$ON 000000        __end_of_default_LINE_CARD 1063  
                    __smallconst 1000                      add_sensor@i 0018  
                       _BAUDCON2 000F70                      _enable_ints 13DA  
               _learnedSensorPtr 001E                         _IOCBbits 000F62  
                       _LATAbits 000F89                         _LATBbits 000F8A  
                       _LATCbits 000F8B                         _RS232Buf 002A  
             __end_of_add_sensor 1366                         _PIE2bits 000FA0  
                       _PIE3bits 000FA3      __end_of_disable_uart_rx_int 14C8  
      __end_of_default_TEST_FREQ 107E                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                   ??_stop_uart_rx 0013  
              _reload_tmr3_pt25s 1492                        _returnStr 0090  
                      _toggleLED 0036               ?_reload_tmr3_pt25s 0001  
       rx_uart_write@currentChar 0017              ??_reload_tmr3_pt25s 0013  
                      copy_data0 137A            alreadyLearned@pointer 0017  
                 _intconSaveBits 0021                         __Hrparam 0000  
      __end_of_reload_tmr3_pt25s 14A2                  ??_reload_timer0 0001  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTB5 000000                 ??_alreadyLearned 0016  
           __end_of_start_timer0 1480                  alreadyLearned@i 0018  
                 _gled_tmr0_tick 0026        __size_of_rx_uart_transmit 000C  
                       __ptext10 1492                         __ptext11 124A  
                       __ptext12 131E                         __ptext14 144C  
                       __ptext15 14C8                         __ptext16 14BC  
                       __ptext17 14A2                         __ptext18 117E  
               _learn_timer_tick 001B                    __size_of_main 0012  
                       _init_pic 12D2                   _saveINTCONbits 001F  
                       _tmr3_cnt 0024                       _RC1STAbits 000FAB  
                     _RC2STAbits 000F71                         int$flags 0037  
                     _INTCONbits 000FF2                     ?_check_state 0001  
           __end_of_stop_uart_rx 14DE                         intlevel2 0000  
                     _RCSTA1bits 000FAB       __end_of_default_ENCRYPTION 1076  
                     _OSCCONbits 000FD3       __size_of_reload_tmr3_pt25s 0010  
                  ?_disable_tmr3 0001                     ?_enable_ints 0001  
             rx_uart_write@index 0018                __CFG_T3CMX$PORTC0 000000  
                     _TX2STAbits 000F72  
