

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 16 17:27:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F26K22 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  001528                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _VERSION
    77  001528  32                 	db	50
    78  001529  30                 	db	48
    79  00152A  32                 	db	50
    80  00152B  30                 	db	48
    81  00152C  00                 	db	0
    82                           
    83                           ;initializer for _waiting
    84  00152D  01                 	db	1
    85                           
    86                           ;initializer for _toggleLED
    87  00152E  01                 	db	1
    88                           
    89                           	psect	smallconst
    90  001000                     __psmallconst:
    91                           	opt stack 0
    92  001000  00                 	db	0
    93  001001                     init_modem_io_ok@F6772:
    94                           	opt stack 0
    95  001001  41                 	db	65
    96  001002  54                 	db	84
    97  001003  23                 	db	35
    98  001004  47                 	db	71
    99  001005  50                 	db	80
   100  001006  49                 	db	73
   101  001007  4F                 	db	79
   102  001008  3D                 	db	61
   103  001009  37                 	db	55
   104  00100A  2C                 	db	44
   105  00100B  30                 	db	48
   106  00100C  2C                 	db	44
   107  00100D  32                 	db	50
   108  00100E  0D                 	db	13
   109  00100F  0A                 	db	10
   110  001010  00                 	db	0
   111  001011                     __end_ofinit_modem_io_ok@F6772:
   112                           	opt stack 0
   113  001011                     wakeup_modem_ok@F6765:
   114                           	opt stack 0
   115  001011  41                 	db	65
   116  001012  54                 	db	84
   117  001013  2B                 	db	43
   118  001014  49                 	db	73
   119  001015  50                 	db	80
   120  001016  52                 	db	82
   121  001017  3D                 	db	61
   122  001018  31                 	db	49
   123  001019  31                 	db	49
   124  00101A  35                 	db	53
   125  00101B  32                 	db	50
   126  00101C  30                 	db	48
   127  00101D  30                 	db	48
   128  00101E  0D                 	db	13
   129  00101F  0A                 	db	10
   130  001020  00                 	db	0
   131  001021                     __end_ofwakeup_modem_ok@F6765:
   132                           	opt stack 0
   133  001021                     sim_card_ok@F6783:
   134                           	opt stack 0
   135  001021  2B                 	db	43
   136  001022  43                 	db	67
   137  001023  50                 	db	80
   138  001024  49                 	db	73
   139  001025  4E                 	db	78
   140  001026  3A                 	db	58
   141  001027  20                 	db	32
   142  001028  52                 	db	82
   143  001029  45                 	db	69
   144  00102A  41                 	db	65
   145  00102B  44                 	db	68
   146  00102C  59                 	db	89
   147  00102D  00                 	db	0
   148  00102E                     __end_ofsim_card_ok@F6783:
   149                           	opt stack 0
   150  00102E                     init_modem_io_ok@F6776:
   151                           	opt stack 0
   152  00102E  41                 	db	65
   153  00102F  54                 	db	84
   154  001030  23                 	db	35
   155  001031  53                 	db	83
   156  001032  4C                 	db	76
   157  001033  45                 	db	69
   158  001034  44                 	db	68
   159  001035  3D                 	db	61
   160  001036  34                 	db	52
   161  001037  0D                 	db	13
   162  001038  0A                 	db	10
   163  001039  00                 	db	0
   164  00103A                     __end_ofinit_modem_io_ok@F6776:
   165                           	opt stack 0
   166  00103A                     sim_card_ok@F6781:
   167                           	opt stack 0
   168  00103A  41                 	db	65
   169  00103B  54                 	db	84
   170  00103C  2B                 	db	43
   171  00103D  43                 	db	67
   172  00103E  50                 	db	80
   173  00103F  49                 	db	73
   174  001040  4E                 	db	78
   175  001041  3F                 	db	63
   176  001042  0D                 	db	13
   177  001043  0A                 	db	10
   178  001044  00                 	db	0
   179  001045                     __end_ofsim_card_ok@F6781:
   180                           	opt stack 0
   181  001045                     init_modem_io_ok@F6774:
   182                           	opt stack 0
   183  001045  41                 	db	65
   184  001046  54                 	db	84
   185  001047  23                 	db	35
   186  001048  43                 	db	67
   187  001049  47                 	db	71
   188  00104A  4D                 	db	77
   189  00104B  52                 	db	82
   190  00104C  0D                 	db	13
   191  00104D  0A                 	db	10
   192  00104E  00                 	db	0
   193  00104F                     __end_ofinit_modem_io_ok@F6774:
   194                           	opt stack 0
   195  00104F                     _default_ACCT:
   196                           	opt stack 0
   197  00104F  30                 	db	48
   198  001050  30                 	db	48
   199  001051  30                 	db	48
   200  001052  30                 	db	48
   201  001053  23                 	db	35
   202  001054  00                 	db	0
   203  001055                     __end_of_default_ACCT:
   204                           	opt stack 0
   205  001055                     _default_ACCESS_CODE:
   206                           	opt stack 0
   207  001055  31                 	db	49
   208  001056  31                 	db	49
   209  001057  31                 	db	49
   210  001058  31                 	db	49
   211  001059  23                 	db	35
   212  00105A  00                 	db	0
   213  00105B                     __end_of_default_ACCESS_CODE:
   214                           	opt stack 0
   215  00105B                     wakeup_modem_ok@F6763:
   216                           	opt stack 0
   217  00105B  41                 	db	65
   218  00105C  54                 	db	84
   219  00105D  0D                 	db	13
   220  00105E  0A                 	db	10
   221  00105F  00                 	db	0
   222  001060                     __end_ofwakeup_modem_ok@F6763:
   223                           	opt stack 0
   224  001060                     _default_LINE_CARD:
   225                           	opt stack 0
   226  001060  31                 	db	49
   227  001061  23                 	db	35
   228  001062  00                 	db	0
   229  001063                     __end_of_default_LINE_CARD:
   230                           	opt stack 0
   231  001063                     _default_PORT4:
   232                           	opt stack 0
   233  001063  07E4               	dw	2020
   234  001065                     __end_of_default_PORT4:
   235                           	opt stack 0
   236  001065                     _default_PORT3:
   237                           	opt stack 0
   238  001065  07E4               	dw	2020
   239  001067                     __end_of_default_PORT3:
   240                           	opt stack 0
   241  001067                     _default_PORT2:
   242                           	opt stack 0
   243  001067  07E4               	dw	2020
   244  001069                     __end_of_default_PORT2:
   245                           	opt stack 0
   246  001069                     _default_PORT1:
   247                           	opt stack 0
   248  001069  07E4               	dw	2020
   249  00106B                     __end_of_default_PORT1:
   250                           	opt stack 0
   251  00106B                     _default_IP4:
   252                           	opt stack 0
   253  00106B  23                 	db	35
   254  00106C  00                 	db	0
   255  00106D                     __end_of_default_IP4:
   256                           	opt stack 0
   257  00106D                     _default_IP3:
   258                           	opt stack 0
   259  00106D  23                 	db	35
   260  00106E  00                 	db	0
   261  00106F                     __end_of_default_IP3:
   262                           	opt stack 0
   263  00106F                     _default_IP2:
   264                           	opt stack 0
   265  00106F  23                 	db	35
   266  001070  00                 	db	0
   267  001071                     __end_of_default_IP2:
   268                           	opt stack 0
   269  001071                     _default_IP1:
   270                           	opt stack 0
   271  001071  23                 	db	35
   272  001072  00                 	db	0
   273  001073                     __end_of_default_IP1:
   274                           	opt stack 0
   275  001073                     _default_APN:
   276                           	opt stack 0
   277  001073  23                 	db	35
   278  001074  00                 	db	0
   279  001075                     __end_of_default_APN:
   280                           	opt stack 0
   281  001075                     _default_ENCRYPTION:
   282                           	opt stack 0
   283  001075  01                 	db	1
   284  001076                     __end_of_default_ENCRYPTION:
   285                           	opt stack 0
   286  001076                     _default_SMS_WAIT_TIME:
   287                           	opt stack 0
   288  001076  0A                 	db	10
   289  001077                     __end_of_default_SMS_WAIT_TIME:
   290                           	opt stack 0
   291  001077                     _default_RETRY:
   292                           	opt stack 0
   293  001077  0A                 	db	10
   294  001078                     __end_of_default_RETRY:
   295                           	opt stack 0
   296  001078                     _default_CYCLE:
   297                           	opt stack 0
   298  001078  02                 	db	2
   299  001079                     __end_of_default_CYCLE:
   300                           	opt stack 0
   301  001079                     _default_TP_PIN:
   302                           	opt stack 0
   303  001079  00                 	db	0
   304  00107A                     __end_of_default_TP_PIN:
   305                           	opt stack 0
   306  00107A                     _default_ZONE2:
   307                           	opt stack 0
   308  00107A  14                 	db	20
   309  00107B                     __end_of_default_ZONE2:
   310                           	opt stack 0
   311  00107B                     _default_ZONE1:
   312                           	opt stack 0
   313  00107B  01                 	db	1
   314  00107C                     __end_of_default_ZONE1:
   315                           	opt stack 0
   316  00107C                     _default_SERVER_ACK_TIME:
   317                           	opt stack 0
   318  00107C  2D                 	db	45
   319  00107D                     __end_of_default_SERVER_ACK_TIME:
   320                           	opt stack 0
   321  00107D                     _default_TEST_FREQ:
   322                           	opt stack 0
   323  00107D  0F                 	db	15
   324  00107E                     __end_of_default_TEST_FREQ:
   325                           	opt stack 0
   326  00107E                     _default_PROGRAM_ACK:
   327                           	opt stack 0
   328  00107E  01                 	db	1
   329  00107F                     __end_of_default_PROGRAM_ACK:
   330                           	opt stack 0
   331  0000                     _ANSELB	set	3897
   332  0000                     _ANSELC	set	3898
   333  0000                     _ANSELA	set	3896
   334  0000                     _EECON2	set	4007
   335  0000                     _EEDATA	set	4008
   336  0000                     _EEADR	set	4009
   337  0000                     _EEADRH	set	4010
   338  0000                     _TX2REG	set	3955
   339  0000                     _TX1REG	set	4013
   340  0000                     _RC1REG	set	4014
   341  0000                     _T3CON	set	4017
   342  0000                     _PIR1bits	set	3998
   343  0000                     _RCSTA1bits	set	4011
   344  0000                     _RC1STAbits	set	4011
   345  0000                     _SPBRG1	set	4015
   346  0000                     _SPBRGH1	set	4016
   347  0000                     _TXSTA1bits	set	4012
   348  0000                     _BAUDCONbits	set	4024
   349  0000                     _BAUDCON1bits	set	4024
   350  0000                     _PIE3bits	set	4003
   351  0000                     _PIE3	set	4003
   352  0000                     _INTCON	set	4082
   353  0000                     _SPBRGH2	set	3958
   354  0000                     _SPBRG2	set	3957
   355  0000                     _BAUDCON2	set	3952
   356  0000                     _RC2STA	set	3953
   357  0000                     _TXSTA2bits	set	3954
   358  0000                     _RC2STAbits	set	3953
   359  0000                     _TX2STAbits	set	3954
   360  0000                     _TMR0H	set	4055
   361  0000                     _TMR0L	set	4054
   362  0000                     _T0CON	set	4053
   363  0000                     _TMR3L	set	4018
   364  0000                     _TMR3H	set	4019
   365  0000                     _PIR2bits	set	4001
   366  0000                     _PIE2bits	set	4000
   367  0000                     _T3CONbits	set	4017
   368  0000                     _IOCBbits	set	3938
   369  0000                     _PORTAbits	set	3968
   370  0000                     _PORTBbits	set	3969
   371  0000                     _LATCbits	set	3979
   372  0000                     _TRISCbits	set	3988
   373  0000                     _PORTCbits	set	3970
   374  0000                     _TRISBbits	set	3987
   375  0000                     _LATBbits	set	3978
   376  0000                     _LATAbits	set	3977
   377  0000                     _TRISAbits	set	3986
   378  0000                     _OSCCONbits	set	4051
   379  0000                     _RC2REG	set	3956
   380  0000                     _INTCONbits	set	4082
   381  0000                     _WR	set	32049
   382  0000                     _WREN	set	32050
   383  0000                     _RD	set	32048
   384  0000                     _EEPGD	set	32055
   385  0000                     _CFGS	set	32054
   386  0000                     _GIE	set	32663
   387  0000                     _TRMT2	set	31633
   388  0000                     _CREN2	set	31628
   389  0000                     _TRMT1	set	32097
   390  0000                     _TMR3ON	set	32136
   391  0000                     _RC1IF	set	31989
   392  0000                     _CREN1	set	32092
   393  0000                     _RC1IE	set	31981
   394  0000                     _RC2IE	set	32029
   395  0000                     _WPUB5	set	31501
   396  0000                     _TMR0IE	set	32661
   397  0000                     _RC2IF	set	32037
   398  0000                     _TMR3IF	set	32009
   399  0000                     _TMR0IF	set	32658
   400                           
   401                           ; #config settings
   402  00107F  00                 	db	0	; dummy byte at the end
   403  0000                     
   404                           	psect	cinit
   405  001390                     __pcinit:
   406                           	opt stack 0
   407  001390                     start_initialization:
   408                           	opt stack 0
   409  001390                     __initialization:
   410                           	opt stack 0
   411                           
   412                           ; Initialize objects allocated to COMRAM (7 bytes)
   413                           ; load TBLPTR registers with __pidataCOMRAM
   414  001390  0E28               	movlw	low __pidataCOMRAM
   415  001392  6EF6               	movwf	tblptrl,c
   416  001394  0E15               	movlw	high __pidataCOMRAM
   417  001396  6EF7               	movwf	tblptrh,c
   418  001398  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   419  00139A  6EF8               	movwf	tblptru,c
   420  00139C  EE00  F030         	lfsr	0,__pdataCOMRAM
   421  0013A0  EE10 F007          	lfsr	1,7
   422  0013A4                     copy_data0:
   423  0013A4  0009               	tblrd		*+
   424  0013A6  CFF5 FFEE          	movff	tablat,postinc0
   425  0013AA  50E5               	movf	postdec1,w,c
   426  0013AC  50E1               	movf	fsr1l,w,c
   427  0013AE  E1FA               	bnz	copy_data0
   428                           
   429                           ; Clear objects allocated to BANK0 (148 bytes)
   430  0013B0  EE00  F060         	lfsr	0,__pbssBANK0
   431  0013B4  0E94               	movlw	148
   432  0013B6                     clear_0:
   433  0013B6  6AEE               	clrf	postinc0,c
   434  0013B8  06E8               	decf	wreg,f,c
   435  0013BA  E1FD               	bnz	clear_0
   436                           
   437                           ; Clear objects allocated to COMRAM (21 bytes)
   438  0013BC  EE00  F01B         	lfsr	0,__pbssCOMRAM
   439  0013C0  0E15               	movlw	21
   440  0013C2                     clear_1:
   441  0013C2  6AEE               	clrf	postinc0,c
   442  0013C4  06E8               	decf	wreg,f,c
   443  0013C6  E1FD               	bnz	clear_1
   444  0013C8                     end_of_initialization:
   445                           	opt stack 0
   446  0013C8                     __end_of__initialization:
   447                           	opt stack 0
   448  0013C8  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   449  0013CA  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   450  0013CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   451  0013CE  6EF8               	movwf	tblptru,c
   452  0013D0  0100               	movlb	0
   453  0013D2  EF65  F00A         	goto	_main	;jump to C main() function
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           postdec1	equ	0xFE5
   461                           fsr1l	equ	0xFE1
   462                           
   463                           	psect	bssCOMRAM
   464  00001B                     __pbssCOMRAM:
   465                           	opt stack 0
   466  00001B                     _learn_timer_tick:
   467                           	opt stack 0
   468  00001B                     	ds	2
   469  00001D                     _buttonStillPressed:
   470                           	opt stack 0
   471  00001D                     	ds	1
   472  00001E                     _learnedSensorPtr:
   473                           	opt stack 0
   474  00001E                     	ds	1
   475  00001F                     _saveINTCONbits:
   476                           	opt stack 0
   477  00001F                     	ds	1
   478  000020                     _pie3SaveBits:
   479                           	opt stack 0
   480  000020                     	ds	1
   481  000021                     _intconSaveBits:
   482                           	opt stack 0
   483  000021                     	ds	1
   484  000022                     _state:
   485                           	opt stack 0
   486  000022                     	ds	1
   487  000023                     _rx_pos:
   488                           	opt stack 0
   489  000023                     	ds	1
   490  000024                     _tmr3_cnt:
   491                           	opt stack 0
   492  000024                     	ds	1
   493  000025                     _bled_tmr0_tick:
   494                           	opt stack 0
   495  000025                     	ds	1
   496  000026                     _gled_tmr0_tick:
   497                           	opt stack 0
   498  000026                     	ds	1
   499  000027                     _buttonPressCount:
   500                           	opt stack 0
   501  000027                     	ds	1
   502  000028                     _rxDataPending:
   503                           	opt stack 0
   504  000028                     	ds	1
   505  000029                     _inButtonMenu:
   506                           	opt stack 0
   507  000029                     	ds	1
   508  00002A                     _RS232Buf:
   509                           	opt stack 0
   510  00002A                     	ds	6
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	dataCOMRAM
   521  000030                     __pdataCOMRAM:
   522                           	opt stack 0
   523  000030                     _VERSION:
   524                           	opt stack 0
   525  000030                     	ds	5
   526  000035                     _waiting:
   527                           	opt stack 0
   528  000035                     	ds	1
   529  000036                     _toggleLED:
   530                           	opt stack 0
   531  000036                     	ds	1
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           
   541                           	psect	bssBANK0
   542  000060                     __pbssBANK0:
   543                           	opt stack 0
   544  000060                     _learnedSensors:
   545                           	opt stack 0
   546  000060                     	ds	48
   547  000090                     _returnStr:
   548                           	opt stack 0
   549  000090                     	ds	100
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559                           	psect	cstackCOMRAM
   560  000001                     __pcstackCOMRAM:
   561                           	opt stack 0
   562  000001                     ??_isr:
   563  000001                     
   564                           ; 1 bytes @ 0x0
   565  000001                     	ds	18
   566  000013                     rx_uart_transmit@data:
   567                           	opt stack 0
   568  000013                     alreadyLearned@id:
   569                           	opt stack 0
   570  000013                     add_sensor@id:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x12
   574  000013                     	ds	1
   575  000014                     rx_uart_write@data:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x13
   579  000014                     	ds	1
   580  000015                     alreadyLearned@numIdBytes:
   581                           	opt stack 0
   582  000015                     add_sensor@numIdBytes:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x14
   586  000015                     	ds	1
   587  000016                     ??_add_sensor:
   588  000016                     rx_uart_write@len:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x15
   592  000016                     	ds	1
   593  000017                     rx_uart_write@currentChar:
   594                           	opt stack 0
   595  000017                     alreadyLearned@pointer:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x16
   599  000017                     	ds	1
   600  000018                     rx_uart_write@index:
   601                           	opt stack 0
   602  000018                     alreadyLearned@i:
   603                           	opt stack 0
   604  000018                     add_sensor@i:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x17
   608  000018                     	ds	1
   609  000019                     ??_check_state:
   610                           
   611                           ; 1 bytes @ 0x18
   612  000019                     	ds	1
   613  00001A                     check_state@i:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x19
   617  00001A                     	ds	1
   618  00001B                     tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           postdec1	equ	0xFE5
   625                           fsr1l	equ	0xFE1
   626                           
   627                           ; 1 bytes @ 0x1A
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 99 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels required when called:    5
   653 ;; This function calls:
   654 ;;		_check_state
   655 ;;		_init_pic
   656 ;;		_init_uart_md
   657 ;;		_init_uart_rx
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text0
   664  0014CA                     __ptext0:
   665                           	opt stack 0
   666  0014CA                     _main:
   667                           	opt stack 26
   668                           
   669                           ;main.c: 101: init_pic();
   670                           
   671                           ;incstack = 0
   672  0014CA  EC7E  F009         	call	_init_pic	;wreg free
   673                           
   674                           ;main.c: 102: init_uart_md();
   675  0014CE  EC18  F00A         	call	_init_uart_md	;wreg free
   676                           
   677                           ;main.c: 103: init_uart_rx();
   678  0014D2  EC2B  F00A         	call	_init_uart_rx	;wreg free
   679  0014D6                     
   680                           ;main.c: 106: {
   681                           ;main.c: 107: check_state();
   682  0014D6  EC40  F008         	call	_check_state	;wreg free
   683  0014DA  D7FD               	goto	l177
   684  0014DC                     __end_of_main:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           postdec1	equ	0xFE5
   693                           fsr1l	equ	0xFE1
   694                           
   695 ;; *************** function _init_uart_rx *****************
   696 ;; Defined at:
   697 ;;		line 14 in file "uart.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    2
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text1
   726  001456                     __ptext1:
   727                           	opt stack 0
   728  001456                     _init_uart_rx:
   729                           	opt stack 28
   730                           
   731                           ;uart.c: 16: TRISBbits.TRISB5 = 1;
   732                           
   733                           ;incstack = 0
   734  001456  8A93               	bsf	3987,5,c	;volatile
   735                           
   736                           ;uart.c: 17: TRISBbits.TRISB6 = 0;
   737  001458  9C93               	bcf	3987,6,c	;volatile
   738                           
   739                           ;uart.c: 18: TRISBbits.TRISB7 = 1;
   740  00145A  8E93               	bsf	3987,7,c	;volatile
   741                           
   742                           ;uart.c: 20: TX2STAbits.TX9 = 0;
   743  00145C  9C72               	bcf	3954,6,c	;volatile
   744                           
   745                           ;uart.c: 21: RC2STAbits.RX9 = 0;
   746  00145E  9C71               	bcf	3953,6,c	;volatile
   747                           
   748                           ;uart.c: 23: TXSTA2bits.BRGH = 1;
   749  001460  8472               	bsf	3954,2,c	;volatile
   750                           
   751                           ;uart.c: 25: RC2STA = 0x90;
   752  001462  0E90               	movlw	144
   753  001464  6E71               	movwf	3953,c	;volatile
   754                           
   755                           ;uart.c: 26: BAUDCON2 = 0xc8;
   756  001466  0EC8               	movlw	200
   757  001468  6E70               	movwf	3952,c	;volatile
   758                           
   759                           ;uart.c: 27: SPBRG2 = 207;
   760  00146A  0ECF               	movlw	207
   761  00146C  6E75               	movwf	3957,c	;volatile
   762                           
   763                           ;uart.c: 28: SPBRGH2 = 0;
   764  00146E  0E00               	movlw	0
   765  001470  6E76               	movwf	3958,c	;volatile
   766                           
   767                           ;uart.c: 29: WPUB5 = 1;
   768  001472  8A61               	bsf	3937,5,c	;volatile
   769  001474  0012               	return		;funcret
   770  001476                     __end_of_init_uart_rx:
   771                           	opt stack 0
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           postdec1	equ	0xFE5
   779                           fsr1l	equ	0xFE1
   780                           
   781 ;; *************** function _init_uart_md *****************
   782 ;; Defined at:
   783 ;;		line 64 in file "uart.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    2
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;;		_startup_modem_ok
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text2
   813  001430                     __ptext2:
   814                           	opt stack 0
   815  001430                     _init_uart_md:
   816                           	opt stack 28
   817                           
   818                           ;uart.c: 66: BAUDCON1bits.BRG16 = 1;
   819                           
   820                           ;incstack = 0
   821  001430  86B8               	bsf	4024,3,c	;volatile
   822                           
   823                           ;uart.c: 67: BAUDCON1bits.RCIDL = 1;
   824  001432  8CB8               	bsf	4024,6,c	;volatile
   825                           
   826                           ;uart.c: 68: BAUDCONbits.CKTXP = 0;
   827  001434  98B8               	bcf	4024,4,c	;volatile
   828                           
   829                           ;uart.c: 69: BAUDCONbits.WUE = 0;
   830  001436  92B8               	bcf	4024,1,c	;volatile
   831                           
   832                           ;uart.c: 70: BAUDCONbits.ABDEN = 0;
   833  001438  90B8               	bcf	4024,0,c	;volatile
   834                           
   835                           ;uart.c: 71: TXSTA1bits.BRGH = 1;
   836  00143A  84AC               	bsf	4012,2,c	;volatile
   837                           
   838                           ;uart.c: 72: TXSTA1bits.SYNC = 0;
   839  00143C  98AC               	bcf	4012,4,c	;volatile
   840                           
   841                           ;uart.c: 73: SPBRGH1 = 0;
   842  00143E  0E00               	movlw	0
   843  001440  6EB0               	movwf	4016,c	;volatile
   844                           
   845                           ;uart.c: 74: SPBRG1 = 16;
   846  001442  0E10               	movlw	16
   847  001444  6EAF               	movwf	4015,c	;volatile
   848                           
   849                           ;uart.c: 76: RC1STAbits.SPEN = 1;
   850  001446  8EAB               	bsf	4011,7,c	;volatile
   851                           
   852                           ;uart.c: 77: TRISCbits.TRISC7 = 1;
   853  001448  8E94               	bsf	3988,7,c	;volatile
   854                           
   855                           ;uart.c: 78: TRISCbits.TRISC6 = 0;
   856  00144A  9C94               	bcf	3988,6,c	;volatile
   857                           
   858                           ;uart.c: 80: RCSTA1bits.CREN = 1;
   859  00144C  88AB               	bsf	4011,4,c	;volatile
   860                           
   861                           ;uart.c: 81: TXSTA1bits.TXEN = 1;
   862  00144E  8AAC               	bsf	4012,5,c	;volatile
   863                           
   864                           ;uart.c: 83: LATAbits.LA3 = 1;
   865  001450  8689               	bsf	3977,3,c	;volatile
   866                           
   867                           ;uart.c: 84: PIR1bits.RC1IF = 0;
   868  001452  9A9E               	bcf	3998,5,c	;volatile
   869  001454  0012               	return		;funcret
   870  001456                     __end_of_init_uart_md:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           postdec1	equ	0xFE5
   879                           fsr1l	equ	0xFE1
   880                           
   881 ;; *************** function _init_pic *****************
   882 ;; Defined at:
   883 ;;		line 112 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    4
   904 ;; This function calls:
   905 ;;		_enable_ints
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text3
   912  0012FC                     __ptext3:
   913                           	opt stack 0
   914  0012FC                     _init_pic:
   915                           	opt stack 26
   916                           
   917                           ;main.c: 115: OSCCONbits.IDLEN = 0;
   918                           
   919                           ;incstack = 0
   920  0012FC  9ED3               	bcf	4051,7,c	;volatile
   921                           
   922                           ;main.c: 116: OSCCONbits.IRCF = 0b110;
   923  0012FE  50D3               	movf	4051,w,c	;volatile
   924  001300  0B8F               	andlw	-113
   925  001302  0960               	iorlw	96
   926  001304  6ED3               	movwf	4051,c	;volatile
   927                           
   928                           ;main.c: 117: OSCCONbits.OSTS = 1;
   929  001306  86D3               	bsf	4051,3,c	;volatile
   930                           
   931                           ;main.c: 121: ANSELA = 0x01;
   932  001308  0E01               	movlw	1
   933  00130A  010F               	movlb	15	; () banked
   934  00130C  6F38               	movwf	56,b	;volatile
   935                           
   936                           ; BSR set to: 15
   937                           ;main.c: 122: TRISAbits.TRISA0 = 1;
   938  00130E  8092               	bsf	3986,0,c	;volatile
   939                           
   940                           ; BSR set to: 15
   941                           ;main.c: 123: TRISAbits.TRISA3 = 0;
   942  001310  9692               	bcf	3986,3,c	;volatile
   943                           
   944                           ; BSR set to: 15
   945                           ;main.c: 124: LATAbits.LA3 = 0;
   946  001312  9689               	bcf	3977,3,c	;volatile
   947                           
   948                           ;main.c: 127: ANSELC = 0x00;
   949  001314  0E00               	movlw	0
   950  001316  6F3A               	movwf	58,b	;volatile
   951                           
   952                           ; BSR set to: 15
   953                           ;main.c: 128: LATBbits.LB3 = 1;
   954  001318  868A               	bsf	3978,3,c	;volatile
   955                           
   956                           ; BSR set to: 15
   957                           ;main.c: 129: TRISBbits.TRISB3 = 0;
   958  00131A  9693               	bcf	3987,3,c	;volatile
   959                           
   960                           ; BSR set to: 15
   961                           ;main.c: 130: PORTCbits.RC6 = 1;
   962  00131C  8C82               	bsf	3970,6,c	;volatile
   963                           
   964                           ; BSR set to: 15
   965                           ;main.c: 131: TRISCbits.TRISC6 = 0;
   966  00131E  9C94               	bcf	3988,6,c	;volatile
   967                           
   968                           ; BSR set to: 15
   969                           ;main.c: 132: LATCbits.LATC7 = 1;
   970  001320  8E8B               	bsf	3979,7,c	;volatile
   971                           
   972                           ; BSR set to: 15
   973                           ;main.c: 133: TRISCbits.TRISC7 = 1;
   974  001322  8E94               	bsf	3988,7,c	;volatile
   975                           
   976                           ;main.c: 136: ANSELB = 0x00;
   977  001324  0E00               	movlw	0
   978  001326  6F39               	movwf	57,b	;volatile
   979                           
   980                           ; BSR set to: 15
   981                           ;main.c: 137: TRISBbits.TRISB0 = 1;
   982  001328  8093               	bsf	3987,0,c	;volatile
   983                           
   984                           ; BSR set to: 15
   985                           ;main.c: 138: TRISCbits.TRISC1 = 1;
   986  00132A  8294               	bsf	3988,1,c	;volatile
   987                           
   988                           ; BSR set to: 15
   989                           ;main.c: 140: TRISBbits.TRISB1 = 1;
   990  00132C  8293               	bsf	3987,1,c	;volatile
   991                           
   992                           ; BSR set to: 15
   993                           ;main.c: 142: TRISBbits.TRISB2 = 1;
   994  00132E  8493               	bsf	3987,2,c	;volatile
   995                           
   996                           ; BSR set to: 15
   997                           ;main.c: 143: LATCbits.LC4 = 1;
   998  001330  888B               	bsf	3979,4,c	;volatile
   999                           
  1000                           ; BSR set to: 15
  1001                           ;main.c: 144: TRISCbits.TRISC4 = 0;
  1002  001332  9894               	bcf	3988,4,c	;volatile
  1003                           
  1004                           ; BSR set to: 15
  1005                           ;main.c: 146: TRISBbits.TRISB4 = 1;
  1006  001334  8893               	bsf	3987,4,c	;volatile
  1007                           
  1008                           ; BSR set to: 15
  1009                           ;main.c: 148: TRISBbits.TRISB5 = 1;
  1010  001336  8A93               	bsf	3987,5,c	;volatile
  1011                           
  1012                           ; BSR set to: 15
  1013                           ;main.c: 149: PORTBbits.RB6 = 1;
  1014  001338  8C81               	bsf	3969,6,c	;volatile
  1015                           
  1016                           ; BSR set to: 15
  1017                           ;main.c: 150: TRISBbits.TRISB6 = 0;
  1018  00133A  9C93               	bcf	3987,6,c	;volatile
  1019                           
  1020                           ; BSR set to: 15
  1021                           ;main.c: 152: TRISBbits.TRISB7 = 1;
  1022  00133C  8E93               	bsf	3987,7,c	;volatile
  1023                           
  1024                           ; BSR set to: 15
  1025                           ;main.c: 154: PORTAbits.RA1 = 0;
  1026  00133E  9280               	bcf	3968,1,c	;volatile
  1027                           
  1028                           ; BSR set to: 15
  1029                           ;main.c: 155: TRISAbits.TRISA1 = 0;
  1030  001340  9292               	bcf	3986,1,c	;volatile
  1031                           
  1032                           ; BSR set to: 15
  1033                           ;main.c: 157: enable_ints();
  1034  001342  EC02  F00A         	call	_enable_ints	;wreg free
  1035  001346  0012               	return		;funcret
  1036  001348                     __end_of_init_pic:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           postinc0	equ	0xFEE
  1043                           wreg	equ	0xFE8
  1044                           postdec1	equ	0xFE5
  1045                           fsr1l	equ	0xFE1
  1046                           
  1047 ;; *************** function _enable_ints *****************
  1048 ;; Defined at:
  1049 ;;		line 160 in file "main.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    3
  1070 ;; This function calls:
  1071 ;;		_start_timer0
  1072 ;; This function is called by:
  1073 ;;		_init_pic
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text4
  1078  001404                     __ptext4:
  1079                           	opt stack 0
  1080  001404                     _enable_ints:
  1081                           	opt stack 26
  1082                           
  1083                           ;main.c: 162: INTCONbits.GIE = 0;
  1084                           
  1085                           ;incstack = 0
  1086  001404  9EF2               	bcf	intcon,7,c	;volatile
  1087                           
  1088                           ;main.c: 168: IOCBbits.IOCB5 = 1;
  1089  001406  8A62               	bsf	3938,5,c	;volatile
  1090                           
  1091                           ;main.c: 169: INTCONbits.RBIE = 1;
  1092  001408  86F2               	bsf	intcon,3,c	;volatile
  1093                           
  1094                           ;main.c: 170: INTCONbits.RBIF = 0;
  1095  00140A  90F2               	bcf	intcon,0,c	;volatile
  1096                           
  1097                           ;main.c: 174: start_timer0();
  1098  00140C  EC5B  F00A         	call	_start_timer0	;wreg free
  1099                           
  1100                           ;main.c: 177: T3CONbits.T3CKPS = 0b11;
  1101  001410  0E30               	movlw	48
  1102  001412  12B1               	iorwf	4017,f,c	;volatile
  1103                           
  1104                           ;main.c: 178: T3CONbits.TMR3CS = 0b00;
  1105  001414  0E3F               	movlw	-193
  1106  001416  16B1               	andwf	4017,f,c	;volatile
  1107                           
  1108                           ;main.c: 179: T3CONbits.nT3SYNC = 1;
  1109  001418  84B1               	bsf	4017,2,c	;volatile
  1110                           
  1111                           ;main.c: 181: T3CONbits.TMR3ON = 1;
  1112  00141A  80B1               	bsf	4017,0,c	;volatile
  1113                           
  1114                           ;main.c: 182: PIE2bits.TMR3IE = 1;
  1115  00141C  82A0               	bsf	4000,1,c	;volatile
  1116                           
  1117                           ;main.c: 183: PIR2bits.TMR3IF = 0;
  1118  00141E  92A1               	bcf	4001,1,c	;volatile
  1119                           
  1120                           ;main.c: 184: TMR3H = 0x60;
  1121  001420  0E60               	movlw	96
  1122  001422  6EB3               	movwf	4019,c	;volatile
  1123                           
  1124                           ;main.c: 185: TMR3L = 0;
  1125  001424  0E00               	movlw	0
  1126  001426  6EB2               	movwf	4018,c	;volatile
  1127                           
  1128                           ;main.c: 187: INTCONbits.GIE = 0;
  1129  001428  9EF2               	bcf	intcon,7,c	;volatile
  1130                           
  1131                           ;main.c: 188: INTCONbits.PEIE = 1;
  1132  00142A  8CF2               	bsf	intcon,6,c	;volatile
  1133                           
  1134                           ;main.c: 190: INTCONbits.GIE = 1;
  1135  00142C  8EF2               	bsf	intcon,7,c	;volatile
  1136  00142E  0012               	return		;funcret
  1137  001430                     __end_of_enable_ints:
  1138                           	opt stack 0
  1139                           tblptru	equ	0xFF8
  1140                           tblptrh	equ	0xFF7
  1141                           tblptrl	equ	0xFF6
  1142                           tablat	equ	0xFF5
  1143                           intcon	equ	0xFF2
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           postdec1	equ	0xFE5
  1147                           fsr1l	equ	0xFE1
  1148                           
  1149 ;; *************** function _start_timer0 *****************
  1150 ;; Defined at:
  1151 ;;		line 219 in file "main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        0 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    2
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_enable_ints
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text5
  1180  0014B6                     __ptext5:
  1181                           	opt stack 0
  1182  0014B6                     _start_timer0:
  1183                           	opt stack 26
  1184                           
  1185                           ;main.c: 221: T0CON = 0x87;
  1186                           
  1187                           ;incstack = 0
  1188  0014B6  0E87               	movlw	135
  1189  0014B8  6ED5               	movwf	4053,c	;volatile
  1190                           
  1191                           ;main.c: 222: TMR0L = ((65535-781)%256);
  1192  0014BA  0EF2               	movlw	242
  1193  0014BC  6ED6               	movwf	4054,c	;volatile
  1194                           
  1195                           ;main.c: 223: TMR0H = ((65535-781)/256);
  1196  0014BE  0EFC               	movlw	252
  1197  0014C0  6ED7               	movwf	4055,c	;volatile
  1198                           
  1199                           ;main.c: 224: TMR0IF = 0;
  1200  0014C2  94F2               	bcf	intcon,2,c	;volatile
  1201                           
  1202                           ;main.c: 225: TMR0IE = 1;
  1203  0014C4  8AF2               	bsf	intcon,5,c	;volatile
  1204                           
  1205                           ;main.c: 226: INTCONbits.GIE = 1;
  1206  0014C6  8EF2               	bsf	intcon,7,c	;volatile
  1207  0014C8  0012               	return		;funcret
  1208  0014CA                     __end_of_start_timer0:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           intcon	equ	0xFF2
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220 ;; *************** function _check_state *****************
  1221 ;; Defined at:
  1222 ;;		line 16 in file "state.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  i               1   25[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;Total ram usage:        2 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    4
  1243 ;; This function calls:
  1244 ;;		_add_sensor
  1245 ;;		_alreadyLearned
  1246 ;;		_disable_uart_rx_int
  1247 ;;		_reload_tmr3_pt25s
  1248 ;;		_rx_uart_write
  1249 ;;		_start_uart_rx
  1250 ;;		_stop_uart_rx
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text6
  1257  001080                     __ptext6:
  1258                           	opt stack 0
  1259  001080                     _check_state:
  1260                           	opt stack 26
  1261                           
  1262                           ;state.c: 18: switch (state)
  1263                           
  1264                           ;incstack = 0
  1265  001080  D087               	goto	l781
  1266  001082                     
  1267                           ;state.c: 21: waiting = 0;
  1268  001082  0E00               	movlw	0
  1269  001084  6E35               	movwf	_waiting,c
  1270                           
  1271                           ;state.c: 23: if (PORTBbits.RB4 && !buttonStillPressed)
  1272  001086  A881               	btfss	3969,4,c	;volatile
  1273  001088  D014               	goto	l783
  1274  00108A  501D               	movf	_buttonStillPressed,w,c
  1275  00108C  A4D8               	btfss	status,2,c
  1276  00108E  D011               	goto	l783
  1277                           
  1278                           ;state.c: 24: {
  1279                           ;state.c: 25: _delay((unsigned long)((30)*(8000000/4000.0)));
  1280  001090  0E4E               	movlw	78
  1281  001092  6E19               	movwf	??_check_state& (0+255),c
  1282  001094  0EEB               	movlw	235
  1283  001096                     u1567:
  1284  001096  2EE8               	decfsz	wreg,f,c
  1285  001098  D7FE               	bra	u1567
  1286  00109A  2E19               	decfsz	??_check_state& (0+255),f,c
  1287  00109C  D7FC               	bra	u1567
  1288  00109E  F000               	nop	
  1289                           
  1290                           ;state.c: 26: if (PORTBbits.RB4)
  1291  0010A0  A881               	btfss	3969,4,c	;volatile
  1292  0010A2  D005               	goto	l784
  1293                           
  1294                           ;state.c: 27: {
  1295                           ;state.c: 28: buttonPressCount++;
  1296  0010A4  2A27               	incf	_buttonPressCount,f,c
  1297                           
  1298                           ;state.c: 29: reload_tmr3_pt25s();
  1299  0010A6  EC6E  F00A         	call	_reload_tmr3_pt25s	;wreg free
  1300                           
  1301                           ;state.c: 30: tmr3_cnt = 0;
  1302  0010AA  0E00               	movlw	0
  1303  0010AC  6E24               	movwf	_tmr3_cnt,c
  1304  0010AE                     l784:
  1305                           
  1306                           ;state.c: 31: }
  1307                           ;state.c: 32: buttonStillPressed = 1;
  1308  0010AE  0E01               	movlw	1
  1309  0010B0  D00B               	goto	L1
  1310  0010B2                     l783:
  1311                           
  1312                           ;state.c: 34: else
  1313                           ;state.c: 35: {
  1314                           ;state.c: 36: _delay((unsigned long)((30)*(8000000/4000.0)));
  1315  0010B2  0E4E               	movlw	78
  1316  0010B4  6E19               	movwf	??_check_state& (0+255),c
  1317  0010B6  0EEB               	movlw	235
  1318  0010B8                     u1577:
  1319  0010B8  2EE8               	decfsz	wreg,f,c
  1320  0010BA  D7FE               	bra	u1577
  1321  0010BC  2E19               	decfsz	??_check_state& (0+255),f,c
  1322  0010BE  D7FC               	bra	u1577
  1323  0010C0  F000               	nop	
  1324                           
  1325                           ;state.c: 37: if (!PORTBbits.RB4)
  1326  0010C2  B881               	btfsc	3969,4,c	;volatile
  1327  0010C4  D002               	goto	l786
  1328                           
  1329                           ;state.c: 38: {
  1330                           ;state.c: 39: buttonStillPressed = 0;
  1331  0010C6  0E00               	movlw	0
  1332  0010C8                     L1:
  1333  0010C8  6E1D               	movwf	_buttonStillPressed,c
  1334  0010CA                     l786:
  1335                           
  1336                           ;state.c: 40: }
  1337                           ;state.c: 41: }
  1338                           ;state.c: 42: if (inButtonMenu && buttonPressCount == 0)
  1339  0010CA  5029               	movf	_inButtonMenu,w,c
  1340  0010CC  B4D8               	btfsc	status,2,c
  1341  0010CE  D006               	goto	l787
  1342  0010D0  5027               	movf	_buttonPressCount,w,c
  1343  0010D2  A4D8               	btfss	status,2,c
  1344  0010D4  D003               	goto	l787
  1345                           
  1346                           ;state.c: 43: {
  1347                           ;state.c: 44: LATBbits.LB3=0;
  1348  0010D6  968A               	bcf	3978,3,c	;volatile
  1349                           
  1350                           ;state.c: 45: LATCbits.LC4=0;
  1351  0010D8  988B               	bcf	3979,4,c	;volatile
  1352                           
  1353                           ;state.c: 46: }
  1354  0010DA  D002               	goto	l788
  1355  0010DC                     l787:
  1356                           
  1357                           ;state.c: 47: else
  1358                           ;state.c: 48: {
  1359                           ;state.c: 49: LATBbits.LB3=1;
  1360  0010DC  868A               	bsf	3978,3,c	;volatile
  1361                           
  1362                           ;state.c: 50: LATCbits.LC4=1;
  1363  0010DE  888B               	bsf	3979,4,c	;volatile
  1364  0010E0                     l788:
  1365                           
  1366                           ;state.c: 51: }
  1367                           ;state.c: 52: if (rxDataPending)
  1368  0010E0  5028               	movf	_rxDataPending,w,c
  1369  0010E2  B4D8               	btfsc	status,2,c
  1370  0010E4  D008               	goto	l789
  1371                           
  1372                           ;state.c: 53: {
  1373                           ;state.c: 54: rx_uart_write(RS232Buf, 6);
  1374  0010E6  0E2A               	movlw	low _RS232Buf
  1375  0010E8  6E14               	movwf	rx_uart_write@data,c
  1376  0010EA  0E00               	movlw	high _RS232Buf
  1377  0010EC  6E15               	movwf	rx_uart_write@data+1,c
  1378  0010EE  0E06               	movlw	6
  1379  0010F0  6E16               	movwf	rx_uart_write@len,c
  1380  0010F2  ECEB  F009         	call	_rx_uart_write	;wreg free
  1381  0010F6                     l789:
  1382                           
  1383                           ;state.c: 55: }
  1384                           ;state.c: 57: bled_tmr0_tick = 0;
  1385  0010F6  0E00               	movlw	0
  1386  0010F8  6E25               	movwf	_bled_tmr0_tick,c
  1387                           
  1388                           ;state.c: 58: gled_tmr0_tick = 0;
  1389  0010FA  0E00               	movlw	0
  1390  0010FC  6E26               	movwf	_gled_tmr0_tick,c
  1391                           
  1392                           ;state.c: 62: break;
  1393                           
  1394                           ;state.c: 61: case LISTEN_SMS:
  1395                           
  1396                           ;state.c: 59: break;
  1397  0010FE  0012               	return	
  1398  001100                     
  1399                           ;state.c: 65: start_uart_rx();
  1400  001100  EC3B  F00A         	call	_start_uart_rx	;wreg free
  1401                           
  1402                           ;state.c: 66: while (learn_timer_tick < 1200)
  1403  001104  D038               	goto	l795
  1404  001106                     
  1405                           ;state.c: 67: {
  1406                           ;state.c: 68: if (rxDataPending)
  1407  001106  5028               	movf	_rxDataPending,w,c
  1408  001108  B4D8               	btfsc	status,2,c
  1409  00110A  D035               	goto	l795
  1410                           
  1411                           ;state.c: 69: {
  1412                           ;state.c: 70: disable_uart_rx_int();
  1413  00110C  EC83  F00A         	call	_disable_uart_rx_int	;wreg free
  1414                           
  1415                           ;state.c: 71: stop_uart_rx();
  1416  001110  EC98  F00A         	call	_stop_uart_rx	;wreg free
  1417                           
  1418                           ;state.c: 72: rx_uart_write(RS232Buf, 6);
  1419  001114  0E2A               	movlw	low _RS232Buf
  1420  001116  6E14               	movwf	rx_uart_write@data,c
  1421  001118  0E00               	movlw	high _RS232Buf
  1422  00111A  6E15               	movwf	rx_uart_write@data+1,c
  1423  00111C  0E06               	movlw	6
  1424  00111E  6E16               	movwf	rx_uart_write@len,c
  1425  001120  ECEB  F009         	call	_rx_uart_write	;wreg free
  1426                           
  1427                           ;state.c: 73: if (!alreadyLearned((uint8_t *)&RS232Buf[0], 3))
  1428  001124  0E2A               	movlw	low _RS232Buf
  1429  001126  6E13               	movwf	alreadyLearned@id,c
  1430  001128  0E00               	movlw	high _RS232Buf
  1431  00112A  6E14               	movwf	alreadyLearned@id+1,c
  1432  00112C  0E03               	movlw	3
  1433  00112E  6E15               	movwf	alreadyLearned@numIdBytes,c
  1434  001130  EC3A  F009         	call	_alreadyLearned	;wreg free
  1435  001134  0900               	iorlw	0
  1436  001136  A4D8               	btfss	status,2,c
  1437  001138  D008               	goto	l796
  1438                           
  1439                           ;state.c: 74: add_sensor((uint8_t *)&RS232Buf[0], 3);
  1440  00113A  0E2A               	movlw	low _RS232Buf
  1441  00113C  6E13               	movwf	add_sensor@id,c
  1442  00113E  0E00               	movlw	high _RS232Buf
  1443  001140  6E14               	movwf	add_sensor@id+1,c
  1444  001142  0E03               	movlw	3
  1445  001144  6E15               	movwf	add_sensor@numIdBytes,c
  1446  001146  ECA4  F009         	call	_add_sensor	;wreg free
  1447  00114A                     l796:
  1448                           
  1449                           ;state.c: 75: rxDataPending = 0;
  1450  00114A  0E00               	movlw	0
  1451  00114C  6E28               	movwf	_rxDataPending,c
  1452                           
  1453                           ;state.c: 76: for(uint8_t i = 0; i < sizeof(RS232Buf); i++)
  1454  00114E  0E00               	movlw	0
  1455  001150  6E1A               	movwf	check_state@i,c
  1456  001152                     l2515:
  1457  001152  0E05               	movlw	5
  1458  001154  641A               	cpfsgt	check_state@i,c
  1459  001156  D001               	goto	l797
  1460  001158  D00C               	goto	u1310
  1461  00115A                     l797:
  1462                           
  1463                           ;state.c: 77: RS232Buf[i] = 0;
  1464  00115A  501A               	movf	check_state@i,w,c
  1465  00115C  0D01               	mullw	1
  1466  00115E  0E2A               	movlw	low _RS232Buf
  1467  001160  24F3               	addwf	prodl,w,c
  1468  001162  6ED9               	movwf	fsr2l,c
  1469  001164  0E00               	movlw	high _RS232Buf
  1470  001166  20F4               	addwfc	prodh,w,c
  1471  001168  6EDA               	movwf	fsr2h,c
  1472  00116A  0E00               	movlw	0
  1473  00116C  6EDF               	movwf	indf2,c
  1474  00116E  2A1A               	incf	check_state@i,f,c
  1475  001170  D7F0               	goto	l2515
  1476  001172                     u1310:
  1477                           
  1478                           ;state.c: 78: start_uart_rx();
  1479  001172  EC3B  F00A         	call	_start_uart_rx	;wreg free
  1480  001176                     l795:
  1481  001176  0EB0               	movlw	176
  1482  001178  5C1B               	subwf	_learn_timer_tick,w,c
  1483  00117A  0E04               	movlw	4
  1484  00117C  581C               	subwfb	_learn_timer_tick+1,w,c
  1485  00117E  A0D8               	btfss	status,0,c
  1486  001180  D7C2               	goto	l794
  1487                           
  1488                           ;state.c: 79: }
  1489                           ;state.c: 80: }
  1490                           ;state.c: 81: disable_uart_rx_int();
  1491  001182  EC83  F00A         	call	_disable_uart_rx_int	;wreg free
  1492                           
  1493                           ;state.c: 82: stop_uart_rx();
  1494  001186  EC98  F00A         	call	_stop_uart_rx	;wreg free
  1495                           
  1496                           ;state.c: 83: state = OPERATIONAL;
  1497  00118A  0E00               	movlw	0
  1498  00118C  6E22               	movwf	_state,c
  1499                           
  1500                           ;state.c: 88: }
  1501                           
  1502                           ;state.c: 87: break;
  1503                           
  1504                           ;state.c: 86: case DELETE_SENSOR:
  1505                           
  1506                           ;state.c: 84: break;
  1507  00118E  0012               	return	
  1508  001190                     l781:
  1509  001190  5022               	movf	_state,w,c
  1510                           
  1511                           ; Switch size 1, requested type "space"
  1512                           ; Number of cases is 4, Range of values is 0 to 3
  1513                           ; switch strategies available:
  1514                           ; Name         Instructions Cycles
  1515                           ; simple_byte           13     7 (average)
  1516                           ;	Chosen strategy is simple_byte
  1517  001192  0A00               	xorlw	0	; case 0
  1518  001194  B4D8               	btfsc	status,2,c
  1519  001196  D775               	goto	l782
  1520  001198  0A01               	xorlw	1	; case 1
  1521  00119A  B4D8               	btfsc	status,2,c
  1522  00119C  0012               	return	
  1523  00119E  0A03               	xorlw	3	; case 2
  1524  0011A0  B4D8               	btfsc	status,2,c
  1525  0011A2  D7AE               	goto	l792
  1526  0011A4  0A01               	xorlw	1	; case 3
  1527  0011A6  0012               	return	
  1528  0011A8                     __end_of_check_state:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           intcon	equ	0xFF2
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           postdec1	equ	0xFE5
  1540                           fsr1l	equ	0xFE1
  1541                           indf2	equ	0xFDF
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _start_uart_rx *****************
  1547 ;; Defined at:
  1548 ;;		line 33 in file "uart.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    2
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_check_state
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text7
  1577  001476                     __ptext7:
  1578                           	opt stack 0
  1579  001476                     _start_uart_rx:
  1580                           	opt stack 27
  1581                           
  1582                           ;uart.c: 35: TX2STAbits.SYNC = 0;
  1583                           
  1584                           ;incstack = 0
  1585  001476  9872               	bcf	3954,4,c	;volatile
  1586                           
  1587                           ;uart.c: 36: RC2STAbits.SPEN = 1;
  1588  001478  8E71               	bsf	3953,7,c	;volatile
  1589                           
  1590                           ;uart.c: 38: RC2STAbits.CREN = 1;
  1591  00147A  8871               	bsf	3953,4,c	;volatile
  1592                           
  1593                           ;uart.c: 39: TX2STAbits.TXEN = 1;
  1594  00147C  8A72               	bsf	3954,5,c	;volatile
  1595                           
  1596                           ;uart.c: 41: intconSaveBits = INTCON;
  1597  00147E  CFF2 F021          	movff	intcon,_intconSaveBits	;volatile
  1598                           
  1599                           ;uart.c: 42: INTCON = 0;
  1600  001482  0E00               	movlw	0
  1601  001484  6EF2               	movwf	intcon,c	;volatile
  1602                           
  1603                           ;uart.c: 43: INTCONbits.PEIE = 1;
  1604  001486  8CF2               	bsf	intcon,6,c	;volatile
  1605                           
  1606                           ;uart.c: 44: pie3SaveBits = PIE3;
  1607  001488  CFA3 F020          	movff	4003,_pie3SaveBits	;volatile
  1608                           
  1609                           ;uart.c: 45: PIE3 = 0;
  1610  00148C  0E00               	movlw	0
  1611  00148E  6EA3               	movwf	4003,c	;volatile
  1612                           
  1613                           ;uart.c: 46: PIE3bits.RC2IE = 1;
  1614  001490  8AA3               	bsf	4003,5,c	;volatile
  1615                           
  1616                           ;uart.c: 48: INTCONbits.GIE = 1;
  1617  001492  8EF2               	bsf	intcon,7,c	;volatile
  1618  001494  0012               	return		;funcret
  1619  001496                     __end_of_start_uart_rx:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodh	equ	0xFF4
  1626                           prodl	equ	0xFF3
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           postdec1	equ	0xFE5
  1631                           fsr1l	equ	0xFE1
  1632                           indf2	equ	0xFDF
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _rx_uart_write *****************
  1638 ;; Defined at:
  1639 ;;		line 204 in file "uart.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  data            2   19[COMRAM] PTR unsigned char 
  1642 ;;		 -> RS232Buf(6), 
  1643 ;;  len             1   21[COMRAM] unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  index           1   23[COMRAM] unsigned char 
  1646 ;;  currentChar     1   22[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:        5 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    3
  1663 ;; This function calls:
  1664 ;;		_rx_uart_transmit
  1665 ;;		_stop_uart_rx
  1666 ;; This function is called by:
  1667 ;;		_check_state
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text8
  1672  0013D6                     __ptext8:
  1673                           	opt stack 0
  1674  0013D6                     _rx_uart_write:
  1675                           	opt stack 26
  1676                           
  1677                           ;uart.c: 206: uint8_t index, currentChar;
  1678                           ;uart.c: 207: index = 0;
  1679                           
  1680                           ;incstack = 0
  1681  0013D6  0E00               	movlw	0
  1682  0013D8  6E18               	movwf	rx_uart_write@index,c
  1683                           
  1684                           ;uart.c: 208: CREN2 = 0;
  1685  0013DA  9871               	bcf	3953,4,c	;volatile
  1686  0013DC  D00C               	goto	l564
  1687  0013DE                     
  1688                           ;uart.c: 210: {
  1689                           ;uart.c: 211: currentChar = *data;
  1690  0013DE  C014  FFD9         	movff	rx_uart_write@data,fsr2l
  1691  0013E2  C015  FFDA         	movff	rx_uart_write@data+1,fsr2h
  1692  0013E6  50DF               	movf	indf2,w,c
  1693  0013E8  6E17               	movwf	rx_uart_write@currentChar,c
  1694                           
  1695                           ;uart.c: 212: rx_uart_transmit(currentChar);
  1696  0013EA  5017               	movf	rx_uart_write@currentChar,w,c
  1697  0013EC  EC7D  F00A         	call	_rx_uart_transmit
  1698                           
  1699                           ;uart.c: 213: data++;
  1700  0013F0  4A14               	infsnz	rx_uart_write@data,f,c
  1701  0013F2  2A15               	incf	rx_uart_write@data+1,f,c
  1702  0013F4  2A18               	incf	rx_uart_write@index,f,c
  1703  0013F6                     l564:
  1704  0013F6  5016               	movf	rx_uart_write@len,w,c
  1705  0013F8  5C18               	subwf	rx_uart_write@index,w,c
  1706  0013FA  A0D8               	btfss	status,0,c
  1707  0013FC  D7F0               	goto	l565
  1708                           
  1709                           ;uart.c: 214: }
  1710                           ;uart.c: 215: stop_uart_rx();
  1711  0013FE  EC98  F00A         	call	_stop_uart_rx	;wreg free
  1712  001402  0012               	return		;funcret
  1713  001404                     __end_of_rx_uart_write:
  1714                           	opt stack 0
  1715                           tblptru	equ	0xFF8
  1716                           tblptrh	equ	0xFF7
  1717                           tblptrl	equ	0xFF6
  1718                           tablat	equ	0xFF5
  1719                           prodh	equ	0xFF4
  1720                           prodl	equ	0xFF3
  1721                           intcon	equ	0xFF2
  1722                           postinc0	equ	0xFEE
  1723                           wreg	equ	0xFE8
  1724                           postdec1	equ	0xFE5
  1725                           fsr1l	equ	0xFE1
  1726                           indf2	equ	0xFDF
  1727                           fsr2h	equ	0xFDA
  1728                           fsr2l	equ	0xFD9
  1729                           status	equ	0xFD8
  1730                           
  1731 ;; *************** function _stop_uart_rx *****************
  1732 ;; Defined at:
  1733 ;;		line 51 in file "uart.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		None
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;Total ram usage:        0 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    2
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_rx_uart_write
  1758 ;;		_check_state
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text9
  1763  001530                     __ptext9:
  1764                           	opt stack 0
  1765  001530                     _stop_uart_rx:
  1766                           	opt stack 27
  1767                           
  1768                           ;uart.c: 53: RC2STAbits.SPEN = 0;
  1769                           
  1770                           ;incstack = 0
  1771  001530  9E71               	bcf	3953,7,c	;volatile
  1772  001532  0012               	return		;funcret
  1773  001534                     __end_of_stop_uart_rx:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           intcon	equ	0xFF2
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           postdec1	equ	0xFE5
  1785                           fsr1l	equ	0xFE1
  1786                           indf2	equ	0xFDF
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _rx_uart_transmit *****************
  1792 ;; Defined at:
  1793 ;;		line 219 in file "uart.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  data            1    wreg     unsigned char 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  data            1   18[COMRAM] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;Total ram usage:        1 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    2
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_rx_uart_write
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text10
  1822  0014FA                     __ptext10:
  1823                           	opt stack 0
  1824  0014FA                     _rx_uart_transmit:
  1825                           	opt stack 26
  1826                           
  1827                           ;incstack = 0
  1828                           ;rx_uart_transmit@data stored from wreg
  1829  0014FA  6E13               	movwf	rx_uart_transmit@data,c
  1830  0014FC                     
  1831                           ;uart.c: 221: while (!TRMT2);
  1832  0014FC  A272               	btfss	3954,1,c	;volatile
  1833  0014FE  D7FE               	goto	l1501
  1834                           
  1835                           ;uart.c: 222: TX2REG = data;
  1836  001500  C013  FF73         	movff	rx_uart_transmit@data,3955	;volatile
  1837  001504  0012               	return		;funcret
  1838  001506                     __end_of_rx_uart_transmit:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           prodh	equ	0xFF4
  1845                           prodl	equ	0xFF3
  1846                           intcon	equ	0xFF2
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           postdec1	equ	0xFE5
  1850                           fsr1l	equ	0xFE1
  1851                           indf2	equ	0xFDF
  1852                           fsr2h	equ	0xFDA
  1853                           fsr2l	equ	0xFD9
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _reload_tmr3_pt25s *****************
  1857 ;; Defined at:
  1858 ;;		line 202 in file "main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_check_state
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text11
  1887  0014DC                     __ptext11:
  1888                           	opt stack 0
  1889  0014DC                     _reload_tmr3_pt25s:
  1890                           	opt stack 27
  1891                           
  1892                           ;main.c: 204: T3CONbits.TMR3ON = 1;
  1893                           
  1894                           ;incstack = 0
  1895  0014DC  80B1               	bsf	4017,0,c	;volatile
  1896                           
  1897                           ;main.c: 205: PIE2bits.TMR3IE = 1;
  1898  0014DE  82A0               	bsf	4000,1,c	;volatile
  1899                           
  1900                           ;main.c: 206: PIR2bits.TMR3IF = 0;
  1901  0014E0  92A1               	bcf	4001,1,c	;volatile
  1902                           
  1903                           ;main.c: 207: TMR3H = 0x0B;
  1904  0014E2  0E0B               	movlw	11
  1905  0014E4  6EB3               	movwf	4019,c	;volatile
  1906                           
  1907                           ;main.c: 208: TMR3L = 0x45;
  1908  0014E6  0E45               	movlw	69
  1909  0014E8  6EB2               	movwf	4018,c	;volatile
  1910  0014EA  0012               	return		;funcret
  1911  0014EC                     __end_of_reload_tmr3_pt25s:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           prodh	equ	0xFF4
  1918                           prodl	equ	0xFF3
  1919                           intcon	equ	0xFF2
  1920                           postinc0	equ	0xFEE
  1921                           wreg	equ	0xFE8
  1922                           postdec1	equ	0xFE5
  1923                           fsr1l	equ	0xFE1
  1924                           indf2	equ	0xFDF
  1925                           fsr2h	equ	0xFDA
  1926                           fsr2l	equ	0xFD9
  1927                           status	equ	0xFD8
  1928                           
  1929 ;; *************** function _disable_uart_rx_int *****************
  1930 ;; Defined at:
  1931 ;;		line 56 in file "uart.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		None
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    2
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_check_state
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text12
  1960  001506                     __ptext12:
  1961                           	opt stack 0
  1962  001506                     _disable_uart_rx_int:
  1963                           	opt stack 27
  1964                           
  1965                           ;uart.c: 58: RC2IE = 0;
  1966                           
  1967                           ;incstack = 0
  1968  001506  9AA3               	bcf	4003,5,c	;volatile
  1969                           
  1970                           ;uart.c: 59: PIE3 = pie3SaveBits;
  1971  001508  C020  FFA3         	movff	_pie3SaveBits,4003	;volatile
  1972                           
  1973                           ;uart.c: 60: INTCON = intconSaveBits;
  1974  00150C  C021  FFF2         	movff	_intconSaveBits,intcon	;volatile
  1975  001510  0012               	return		;funcret
  1976  001512                     __end_of_disable_uart_rx_int:
  1977                           	opt stack 0
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           intcon	equ	0xFF2
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           postdec1	equ	0xFE5
  1988                           fsr1l	equ	0xFE1
  1989                           indf2	equ	0xFDF
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _alreadyLearned *****************
  1995 ;; Defined at:
  1996 ;;		line 11 in file "sensor.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  id              2   18[COMRAM] PTR unsigned char 
  1999 ;;		 -> RS232Buf(6), 
  2000 ;;  numIdBytes      1   20[COMRAM] unsigned char 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  i               1   23[COMRAM] unsigned char 
  2003 ;;  pointer         1   22[COMRAM] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      unsigned char 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;Total ram usage:        6 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    2
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_check_state
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text13
  2028  001274                     __ptext13:
  2029                           	opt stack 0
  2030  001274                     _alreadyLearned:
  2031                           	opt stack 27
  2032                           
  2033                           ;sensor.c: 16: uint8_t pointer = *id;
  2034                           
  2035                           ;incstack = 0
  2036  001274  C013  FFD9         	movff	alreadyLearned@id,fsr2l
  2037  001278  C014  FFDA         	movff	alreadyLearned@id+1,fsr2h
  2038  00127C  50DF               	movf	indf2,w,c
  2039  00127E  6E17               	movwf	alreadyLearned@pointer,c
  2040                           
  2041                           ;sensor.c: 17: for (uint8_t i = 0; i < learnedSensorPtr; i++)
  2042  001280  0E00               	movlw	0
  2043  001282  6E18               	movwf	alreadyLearned@i,c
  2044  001284  D035               	goto	l854
  2045  001286                     
  2046                           ;sensor.c: 18: {
  2047                           ;sensor.c: 19: if (pointer == learnedSensors[i][0])
  2048  001286  5018               	movf	alreadyLearned@i,w,c
  2049  001288  0D03               	mullw	3
  2050  00128A  0E60               	movlw	low _learnedSensors
  2051  00128C  24F3               	addwf	prodl,w,c
  2052  00128E  6ED9               	movwf	fsr2l,c
  2053  001290  0E00               	movlw	high _learnedSensors
  2054  001292  20F4               	addwfc	prodh,w,c
  2055  001294  6EDA               	movwf	fsr2h,c
  2056  001296  5017               	movf	alreadyLearned@pointer,w,c
  2057  001298  18DE               	xorwf	postinc2,w,c
  2058  00129A  A4D8               	btfss	status,2,c
  2059  00129C  D028               	goto	l861
  2060                           
  2061                           ;sensor.c: 20: {
  2062                           ;sensor.c: 21: pointer++;
  2063  00129E  2A17               	incf	alreadyLearned@pointer,f,c
  2064                           
  2065                           ;sensor.c: 22: if (pointer == learnedSensors[i][1])
  2066  0012A0  5018               	movf	alreadyLearned@i,w,c
  2067  0012A2  0D03               	mullw	3
  2068  0012A4  0E01               	movlw	1
  2069  0012A6  26F3               	addwf	prodl,f,c
  2070  0012A8  0E00               	movlw	0
  2071  0012AA  22F4               	addwfc	prodh,f,c
  2072  0012AC  0E60               	movlw	low _learnedSensors
  2073  0012AE  24F3               	addwf	prodl,w,c
  2074  0012B0  6ED9               	movwf	fsr2l,c
  2075  0012B2  0E00               	movlw	high _learnedSensors
  2076  0012B4  20F4               	addwfc	prodh,w,c
  2077  0012B6  6EDA               	movwf	fsr2h,c
  2078  0012B8  5017               	movf	alreadyLearned@pointer,w,c
  2079  0012BA  18DE               	xorwf	postinc2,w,c
  2080  0012BC  A4D8               	btfss	status,2,c
  2081  0012BE  D016               	goto	l857
  2082                           
  2083                           ;sensor.c: 23: {
  2084                           ;sensor.c: 24: pointer++;
  2085  0012C0  2A17               	incf	alreadyLearned@pointer,f,c
  2086                           
  2087                           ;sensor.c: 25: if (pointer == learnedSensors[i][2])
  2088  0012C2  5018               	movf	alreadyLearned@i,w,c
  2089  0012C4  0D03               	mullw	3
  2090  0012C6  0E02               	movlw	2
  2091  0012C8  26F3               	addwf	prodl,f,c
  2092  0012CA  0E00               	movlw	0
  2093  0012CC  22F4               	addwfc	prodh,f,c
  2094  0012CE  0E60               	movlw	low _learnedSensors
  2095  0012D0  24F3               	addwf	prodl,w,c
  2096  0012D2  6ED9               	movwf	fsr2l,c
  2097  0012D4  0E00               	movlw	high _learnedSensors
  2098  0012D6  20F4               	addwfc	prodh,w,c
  2099  0012D8  6EDA               	movwf	fsr2h,c
  2100  0012DA  5017               	movf	alreadyLearned@pointer,w,c
  2101  0012DC  18DE               	xorwf	postinc2,w,c
  2102  0012DE  A4D8               	btfss	status,2,c
  2103  0012E0  D002               	goto	l858
  2104                           
  2105                           ;sensor.c: 26: return 1;
  2106  0012E2  0E01               	movlw	1
  2107  0012E4  0012               	return	
  2108  0012E6                     l858:
  2109                           
  2110                           ;sensor.c: 27: else
  2111                           ;sensor.c: 28: pointer -= 2;
  2112  0012E6  0E02               	movlw	2
  2113  0012E8  5E17               	subwf	alreadyLearned@pointer,f,c
  2114                           
  2115                           ;sensor.c: 29: }
  2116  0012EA  D001               	goto	l861
  2117  0012EC                     l857:
  2118                           
  2119                           ;sensor.c: 30: else
  2120                           ;sensor.c: 31: pointer --;
  2121  0012EC  0617               	decf	alreadyLearned@pointer,f,c
  2122  0012EE                     l861:
  2123  0012EE  2A18               	incf	alreadyLearned@i,f,c
  2124  0012F0                     l854:
  2125  0012F0  501E               	movf	_learnedSensorPtr,w,c
  2126  0012F2  5C18               	subwf	alreadyLearned@i,w,c
  2127  0012F4  A0D8               	btfss	status,0,c
  2128  0012F6  D7C7               	goto	l855
  2129                           
  2130                           ;sensor.c: 32: }
  2131                           ;sensor.c: 33: }
  2132                           ;sensor.c: 34: return 0;
  2133  0012F8  0E00               	movlw	0
  2134  0012FA  0012               	return	
  2135  0012FC                     __end_of_alreadyLearned:
  2136                           	opt stack 0
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           prodh	equ	0xFF4
  2142                           prodl	equ	0xFF3
  2143                           intcon	equ	0xFF2
  2144                           postinc0	equ	0xFEE
  2145                           wreg	equ	0xFE8
  2146                           postdec1	equ	0xFE5
  2147                           fsr1l	equ	0xFE1
  2148                           indf2	equ	0xFDF
  2149                           postinc2	equ	0xFDE
  2150                           fsr2h	equ	0xFDA
  2151                           fsr2l	equ	0xFD9
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function _add_sensor *****************
  2155 ;; Defined at:
  2156 ;;		line 38 in file "sensor.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  id              2   18[COMRAM] PTR unsigned char 
  2159 ;;		 -> RS232Buf(6), 
  2160 ;;  numIdBytes      1   20[COMRAM] unsigned char 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  i               1   23[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;Total ram usage:        6 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    2
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_check_state
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text14
  2187  001348                     __ptext14:
  2188                           	opt stack 0
  2189  001348                     _add_sensor:
  2190                           	opt stack 27
  2191                           
  2192                           ;sensor.c: 40: if (learnedSensorPtr >= 16)
  2193                           
  2194                           ;incstack = 0
  2195  001348  0E0F               	movlw	15
  2196  00134A  641E               	cpfsgt	_learnedSensorPtr,c
  2197  00134C  D001               	goto	l865
  2198  00134E  0012               	return	
  2199  001350                     l865:
  2200                           
  2201                           ;sensor.c: 42: for(uint8_t i = 0; i < numIdBytes; i++)
  2202  001350  0E00               	movlw	0
  2203  001352  6E18               	movwf	add_sensor@i,c
  2204  001354  D017               	goto	l867
  2205  001356                     
  2206                           ;sensor.c: 43: {
  2207                           ;sensor.c: 44: learnedSensors[learnedSensorPtr][i] = id++;
  2208  001356  501E               	movf	_learnedSensorPtr,w,c
  2209  001358  0D03               	mullw	3
  2210  00135A  0E60               	movlw	low _learnedSensors
  2211  00135C  6E16               	movwf	??_add_sensor& (0+255),c
  2212  00135E  0E00               	movlw	high _learnedSensors
  2213  001360  6E17               	movwf	(??_add_sensor+1)& (0+255),c
  2214  001362  50F3               	movf	prodl,w,c
  2215  001364  2616               	addwf	??_add_sensor,f,c
  2216  001366  50F4               	movf	prodh,w,c
  2217  001368  2217               	addwfc	??_add_sensor+1,f,c
  2218  00136A  5018               	movf	add_sensor@i,w,c
  2219  00136C  0D01               	mullw	1
  2220  00136E  50F3               	movf	prodl,w,c
  2221  001370  2416               	addwf	??_add_sensor,w,c
  2222  001372  6ED9               	movwf	fsr2l,c
  2223  001374  50F4               	movf	prodh,w,c
  2224  001376  2017               	addwfc	??_add_sensor+1,w,c
  2225  001378  6EDA               	movwf	fsr2h,c
  2226  00137A  C013  FFDF         	movff	add_sensor@id,indf2
  2227  00137E  4A13               	infsnz	add_sensor@id,f,c
  2228  001380  2A14               	incf	add_sensor@id+1,f,c
  2229  001382  2A18               	incf	add_sensor@i,f,c
  2230  001384                     l867:
  2231  001384  5015               	movf	add_sensor@numIdBytes,w,c
  2232  001386  5C18               	subwf	add_sensor@i,w,c
  2233  001388  A0D8               	btfss	status,0,c
  2234  00138A  D7E5               	goto	l868
  2235                           
  2236                           ;sensor.c: 45: }
  2237                           ;sensor.c: 46: learnedSensorPtr++;
  2238  00138C  2A1E               	incf	_learnedSensorPtr,f,c
  2239  00138E  0012               	return		;funcret
  2240  001390                     __end_of_add_sensor:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           prodh	equ	0xFF4
  2247                           prodl	equ	0xFF3
  2248                           intcon	equ	0xFF2
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1l	equ	0xFE1
  2253                           indf2	equ	0xFDF
  2254                           postinc2	equ	0xFDE
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _isr *****************
  2260 ;; Defined at:
  2261 ;;		line 18 in file "main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;Total ram usage:       18 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    1
  2282 ;; This function calls:
  2283 ;;		_control_leds
  2284 ;;		_disable_tmr3
  2285 ;;		_reload_timer0
  2286 ;;		i2_disable_uart_rx_int
  2287 ;;		i2_start_uart_rx
  2288 ;; This function is called by:
  2289 ;;		Interrupt level 2
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	intcode
  2294  000008                     __pintcode:
  2295                           	opt stack 0
  2296  000008                     _isr:
  2297                           	opt stack 26
  2298                           
  2299                           ;incstack = 0
  2300  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2301  00000A  CFFA F001          	movff	pclath,??_isr
  2302  00000E  CFFB F002          	movff	pclatu,??_isr+1
  2303  000012  CFE9 F003          	movff	fsr0l,??_isr+2
  2304  000016  CFEA F004          	movff	fsr0h,??_isr+3
  2305  00001A  CFE1 F005          	movff	fsr1l,??_isr+4
  2306  00001E  CFE2 F006          	movff	fsr1h,??_isr+5
  2307  000022  CFD9 F007          	movff	fsr2l,??_isr+6
  2308  000026  CFDA F008          	movff	fsr2h,??_isr+7
  2309  00002A  CFF3 F009          	movff	prodl,??_isr+8
  2310  00002E  CFF4 F00A          	movff	prodh,??_isr+9
  2311  000032  CFF6 F00B          	movff	tblptrl,??_isr+10
  2312  000036  CFF7 F00C          	movff	tblptrh,??_isr+11
  2313  00003A  CFF8 F00D          	movff	tblptru,??_isr+12
  2314  00003E  CFF5 F00E          	movff	tablat,??_isr+13
  2315  000042  C037  F00F         	movff	btemp,??_isr+14
  2316  000046  C038  F010         	movff	btemp+1,??_isr+15
  2317  00004A  C039  F011         	movff	btemp+2,??_isr+16
  2318  00004E  C03A  F012         	movff	btemp+3,??_isr+17
  2319                           
  2320                           ;main.c: 21: if (TMR0IF)
  2321  000052  A4F2               	btfss	intcon,2,c	;volatile
  2322  000054  D007               	goto	i2l151
  2323                           
  2324                           ;main.c: 22: {
  2325                           ;main.c: 23: TMR0IF = 0;
  2326  000056  94F2               	bcf	intcon,2,c	;volatile
  2327                           
  2328                           ;main.c: 24: reload_timer0();
  2329  000058  EC8F  F00A         	call	_reload_timer0	;wreg free
  2330                           
  2331                           ;main.c: 25: gled_tmr0_tick++;
  2332  00005C  2A26               	incf	_gled_tmr0_tick,f,c
  2333                           
  2334                           ;main.c: 26: bled_tmr0_tick++;
  2335  00005E  2A25               	incf	_bled_tmr0_tick,f,c
  2336                           
  2337                           ;main.c: 27: control_leds();
  2338  000060  ECD4  F008         	call	_control_leds	;wreg free
  2339  000064                     i2l151:
  2340                           
  2341                           ;main.c: 28: }
  2342                           ;main.c: 30: if (TMR3IF)
  2343  000064  A2A1               	btfss	4001,1,c	;volatile
  2344  000066  D062               	goto	i2l168
  2345                           
  2346                           ;main.c: 31: {
  2347                           ;main.c: 32: tmr3_cnt++;
  2348  000068  2A24               	incf	_tmr3_cnt,f,c
  2349                           
  2350                           ;main.c: 33: TMR3IF = 0;
  2351  00006A  92A1               	bcf	4001,1,c	;volatile
  2352                           
  2353                           ;main.c: 35: if (tmr3_cnt >= 8 && ((inButtonMenu && buttonPressCount > 0) || !inButtonMe
      +                          nu))
  2354  00006C  0E07               	movlw	7
  2355  00006E  6424               	cpfsgt	_tmr3_cnt,c
  2356  000070  D04E               	goto	i2l153
  2357  000072  5029               	movf	_inButtonMenu,w,c
  2358  000074  B4D8               	btfsc	status,2,c
  2359  000076  D003               	goto	i2u26_40
  2360  000078  5027               	movf	_buttonPressCount,w,c
  2361  00007A  A4D8               	btfss	status,2,c
  2362  00007C  D003               	goto	i2u27_40
  2363  00007E                     i2u26_40:
  2364  00007E  5029               	movf	_inButtonMenu,w,c
  2365  000080  A4D8               	btfss	status,2,c
  2366  000082  D045               	goto	i2l153
  2367  000084                     i2u27_40:
  2368                           
  2369                           ;main.c: 36: {
  2370                           ;main.c: 37: tmr3_cnt = 0;
  2371  000084  0E00               	movlw	0
  2372  000086  6E24               	movwf	_tmr3_cnt,c
  2373                           
  2374                           ;main.c: 38: if (inButtonMenu && buttonPressCount == 1)
  2375  000088  5029               	movf	_inButtonMenu,w,c
  2376  00008A  B4D8               	btfsc	status,2,c
  2377  00008C  D009               	goto	i2l158
  2378  00008E  0427               	decf	_buttonPressCount,w,c
  2379  000090  A4D8               	btfss	status,2,c
  2380  000092  D006               	goto	i2l158
  2381                           
  2382                           ;main.c: 39: {
  2383                           ;main.c: 40: inButtonMenu = 0;
  2384  000094  0E00               	movlw	0
  2385  000096  6E29               	movwf	_inButtonMenu,c
  2386                           
  2387                           ;main.c: 41: disable_tmr3();
  2388  000098  EC76  F00A         	call	_disable_tmr3	;wreg free
  2389                           
  2390                           ;main.c: 42: state = LISTEN_SMS;
  2391  00009C  0E01               	movlw	1
  2392  00009E  D019               	goto	L3
  2393  0000A0                     i2l158:
  2394                           
  2395                           ;main.c: 44: else if (inButtonMenu && buttonPressCount == 2)
  2396  0000A0  5029               	movf	_inButtonMenu,w,c
  2397  0000A2  B4D8               	btfsc	status,2,c
  2398  0000A4  D00A               	goto	i2l160
  2399  0000A6  0E02               	movlw	2
  2400  0000A8  1827               	xorwf	_buttonPressCount,w,c
  2401  0000AA  A4D8               	btfss	status,2,c
  2402  0000AC  D006               	goto	i2l160
  2403                           
  2404                           ;main.c: 45: {
  2405                           ;main.c: 46: inButtonMenu = 0;
  2406  0000AE  0E00               	movlw	0
  2407  0000B0  6E29               	movwf	_inButtonMenu,c
  2408                           
  2409                           ;main.c: 47: disable_tmr3();
  2410  0000B2  EC76  F00A         	call	_disable_tmr3	;wreg free
  2411                           
  2412                           ;main.c: 48: state = LEARN_SENSOR;
  2413  0000B6  0E02               	movlw	2
  2414  0000B8  D00C               	goto	L3
  2415  0000BA                     i2l160:
  2416                           
  2417                           ;main.c: 50: else if (inButtonMenu && buttonPressCount == 3)
  2418  0000BA  5029               	movf	_inButtonMenu,w,c
  2419  0000BC  B4D8               	btfsc	status,2,c
  2420  0000BE  D00B               	goto	i2l162
  2421  0000C0  0E03               	movlw	3
  2422  0000C2  1827               	xorwf	_buttonPressCount,w,c
  2423  0000C4  A4D8               	btfss	status,2,c
  2424  0000C6  D007               	goto	i2l162
  2425                           
  2426                           ;main.c: 51: {
  2427                           ;main.c: 52: inButtonMenu = 0;
  2428  0000C8  0E00               	movlw	0
  2429  0000CA  6E29               	movwf	_inButtonMenu,c
  2430                           
  2431                           ;main.c: 53: disable_tmr3();
  2432  0000CC  EC76  F00A         	call	_disable_tmr3	;wreg free
  2433                           
  2434                           ;main.c: 54: state = DELETE_SENSOR;
  2435  0000D0  0E03               	movlw	3
  2436  0000D2                     L3:
  2437  0000D2  6E22               	movwf	_state,c
  2438                           
  2439                           ;main.c: 55: }
  2440  0000D4  D019               	goto	i2l166
  2441  0000D6                     i2l162:
  2442                           
  2443                           ;main.c: 56: else if (inButtonMenu && buttonPressCount == 4)
  2444  0000D6  5029               	movf	_inButtonMenu,w,c
  2445  0000D8  B4D8               	btfsc	status,2,c
  2446  0000DA  D009               	goto	i2l164
  2447  0000DC  0E04               	movlw	4
  2448  0000DE  1827               	xorwf	_buttonPressCount,w,c
  2449  0000E0  A4D8               	btfss	status,2,c
  2450  0000E2  D005               	goto	i2l164
  2451                           
  2452                           ;main.c: 57: {
  2453                           ;main.c: 58: inButtonMenu = 0;
  2454  0000E4  0E00               	movlw	0
  2455  0000E6  6E29               	movwf	_inButtonMenu,c
  2456                           
  2457                           ;main.c: 59: disable_tmr3();
  2458  0000E8  EC76  F00A         	call	_disable_tmr3	;wreg free
  2459                           
  2460                           ;main.c: 61: }
  2461  0000EC  D00D               	goto	i2l166
  2462  0000EE                     i2l164:
  2463                           
  2464                           ;main.c: 62: else if (buttonPressCount == 5)
  2465  0000EE  0E05               	movlw	5
  2466  0000F0  1827               	xorwf	_buttonPressCount,w,c
  2467  0000F2  A4D8               	btfss	status,2,c
  2468  0000F4  D009               	goto	i2l166
  2469                           
  2470                           ;main.c: 63: {
  2471                           ;main.c: 64: inButtonMenu = !inButtonMenu;
  2472  0000F6  5029               	movf	_inButtonMenu,w,c
  2473  0000F8  A4D8               	btfss	status,2,c
  2474  0000FA  D002               	goto	i2u37_40
  2475  0000FC  0E01               	movlw	1
  2476  0000FE  D001               	goto	i2u38_40
  2477  000100                     i2u37_40:
  2478  000100  0E00               	movlw	0
  2479  000102                     i2u38_40:
  2480  000102  6E29               	movwf	_inButtonMenu,c
  2481                           
  2482                           ;main.c: 65: tmr3_cnt = 0;
  2483  000104  0E00               	movlw	0
  2484  000106  6E24               	movwf	_tmr3_cnt,c
  2485  000108                     i2l166:
  2486                           
  2487                           ;main.c: 66: }
  2488                           ;main.c: 68: buttonPressCount = 0;
  2489  000108  0E00               	movlw	0
  2490  00010A  6E27               	movwf	_buttonPressCount,c
  2491                           
  2492                           ;main.c: 69: }
  2493  00010C  D00F               	goto	i2l168
  2494  00010E                     i2l153:
  2495                           
  2496                           ;main.c: 70: else if (tmr3_cnt >= 40 && inButtonMenu && buttonPressCount == 0)
  2497  00010E  0E27               	movlw	39
  2498  000110  6424               	cpfsgt	_tmr3_cnt,c
  2499  000112  D00C               	goto	i2l168
  2500  000114  5029               	movf	_inButtonMenu,w,c
  2501  000116  B4D8               	btfsc	status,2,c
  2502  000118  D009               	goto	i2l168
  2503  00011A  5027               	movf	_buttonPressCount,w,c
  2504  00011C  A4D8               	btfss	status,2,c
  2505  00011E  D006               	goto	i2l168
  2506                           
  2507                           ;main.c: 71: {
  2508                           ;main.c: 72: inButtonMenu = 0;
  2509  000120  0E00               	movlw	0
  2510  000122  6E29               	movwf	_inButtonMenu,c
  2511                           
  2512                           ;main.c: 73: tmr3_cnt = 0;
  2513  000124  0E00               	movlw	0
  2514  000126  6E24               	movwf	_tmr3_cnt,c
  2515                           
  2516                           ;main.c: 74: disable_tmr3();
  2517  000128  EC76  F00A         	call	_disable_tmr3	;wreg free
  2518  00012C                     i2l168:
  2519                           
  2520                           ;main.c: 75: }
  2521                           ;main.c: 76: }
  2522                           ;main.c: 78: if (INTCONbits.RBIF)
  2523  00012C  B0F2               	btfsc	intcon,0,c	;volatile
  2524                           
  2525                           ;main.c: 79: {
  2526                           ;main.c: 80: start_uart_rx();
  2527  00012E  EC4B  F00A         	call	i2_start_uart_rx	;wreg free
  2528                           
  2529                           ;main.c: 81: }
  2530                           ;main.c: 82: if (RC2IF)
  2531  000132  AAA4               	btfss	4004,5,c	;volatile
  2532  000134  D015               	goto	i2l171
  2533                           
  2534                           ;main.c: 83: {
  2535                           ;main.c: 84: RC2IF = 0;
  2536  000136  9AA4               	bcf	4004,5,c	;volatile
  2537                           
  2538                           ;main.c: 85: RS232Buf[rx_pos++] = RC2REG;
  2539  000138  5023               	movf	_rx_pos,w,c
  2540  00013A  0D01               	mullw	1
  2541  00013C  0E2A               	movlw	low _RS232Buf
  2542  00013E  24F3               	addwf	prodl,w,c
  2543  000140  6ED9               	movwf	fsr2l,c
  2544  000142  0E00               	movlw	high _RS232Buf
  2545  000144  20F4               	addwfc	prodh,w,c
  2546  000146  6EDA               	movwf	fsr2h,c
  2547  000148  CF74 FFDF          	movff	3956,indf2	;volatile
  2548  00014C  2A23               	incf	_rx_pos,f,c
  2549                           
  2550                           ;main.c: 86: if (rx_pos >= 6)
  2551  00014E  0E05               	movlw	5
  2552  000150  6423               	cpfsgt	_rx_pos,c
  2553  000152  D006               	goto	i2l171
  2554                           
  2555                           ;main.c: 87: {
  2556                           ;main.c: 88: rxDataPending = 1;
  2557  000154  0E01               	movlw	1
  2558  000156  6E28               	movwf	_rxDataPending,c
  2559                           
  2560                           ;main.c: 89: rx_pos = 0;
  2561  000158  0E00               	movlw	0
  2562  00015A  6E23               	movwf	_rx_pos,c
  2563                           
  2564                           ;main.c: 90: disable_uart_rx_int();
  2565  00015C  EC89  F00A         	call	i2_disable_uart_rx_int	;wreg free
  2566  000160                     i2l171:
  2567  000160  C012  F03A         	movff	??_isr+17,btemp+3
  2568  000164  C011  F039         	movff	??_isr+16,btemp+2
  2569  000168  C010  F038         	movff	??_isr+15,btemp+1
  2570  00016C  C00F  F037         	movff	??_isr+14,btemp
  2571  000170  C00E  FFF5         	movff	??_isr+13,tablat
  2572  000174  C00D  FFF8         	movff	??_isr+12,tblptru
  2573  000178  C00C  FFF7         	movff	??_isr+11,tblptrh
  2574  00017C  C00B  FFF6         	movff	??_isr+10,tblptrl
  2575  000180  C00A  FFF4         	movff	??_isr+9,prodh
  2576  000184  C009  FFF3         	movff	??_isr+8,prodl
  2577  000188  C008  FFDA         	movff	??_isr+7,fsr2h
  2578  00018C  C007  FFD9         	movff	??_isr+6,fsr2l
  2579  000190  C006  FFE2         	movff	??_isr+5,fsr1h
  2580  000194  C005  FFE1         	movff	??_isr+4,fsr1l
  2581  000198  C004  FFEA         	movff	??_isr+3,fsr0h
  2582  00019C  C003  FFE9         	movff	??_isr+2,fsr0l
  2583  0001A0  C002  FFFB         	movff	??_isr+1,pclatu
  2584  0001A4  C001  FFFA         	movff	??_isr,pclath
  2585  0001A8  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2586  0001AA  0011               	retfie		f
  2587  0001AC                     __end_of_isr:
  2588                           	opt stack 0
  2589                           pclatu	equ	0xFFB
  2590                           pclath	equ	0xFFA
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           intcon	equ	0xFF2
  2598                           postinc0	equ	0xFEE
  2599                           fsr0h	equ	0xFEA
  2600                           fsr0l	equ	0xFE9
  2601                           wreg	equ	0xFE8
  2602                           postdec1	equ	0xFE5
  2603                           fsr1h	equ	0xFE2
  2604                           fsr1l	equ	0xFE1
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           fsr2h	equ	0xFDA
  2608                           fsr2l	equ	0xFD9
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function i2_start_uart_rx *****************
  2612 ;; Defined at:
  2613 ;;		line 33 in file "uart.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;Total ram usage:        0 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_isr
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text16
  2641  001496                     __ptext16:
  2642                           	opt stack 0
  2643  001496                     i2_start_uart_rx:
  2644                           	opt stack 26
  2645                           
  2646                           ;uart.c: 35: TX2STAbits.SYNC = 0;
  2647                           
  2648                           ;incstack = 0
  2649  001496  9872               	bcf	3954,4,c	;volatile
  2650                           
  2651                           ;uart.c: 36: RC2STAbits.SPEN = 1;
  2652  001498  8E71               	bsf	3953,7,c	;volatile
  2653                           
  2654                           ;uart.c: 38: RC2STAbits.CREN = 1;
  2655  00149A  8871               	bsf	3953,4,c	;volatile
  2656                           
  2657                           ;uart.c: 39: TX2STAbits.TXEN = 1;
  2658  00149C  8A72               	bsf	3954,5,c	;volatile
  2659                           
  2660                           ;uart.c: 41: intconSaveBits = INTCON;
  2661  00149E  CFF2 F021          	movff	intcon,_intconSaveBits	;volatile
  2662                           
  2663                           ;uart.c: 42: INTCON = 0;
  2664  0014A2  0E00               	movlw	0
  2665  0014A4  6EF2               	movwf	intcon,c	;volatile
  2666                           
  2667                           ;uart.c: 43: INTCONbits.PEIE = 1;
  2668  0014A6  8CF2               	bsf	intcon,6,c	;volatile
  2669                           
  2670                           ;uart.c: 44: pie3SaveBits = PIE3;
  2671  0014A8  CFA3 F020          	movff	4003,_pie3SaveBits	;volatile
  2672                           
  2673                           ;uart.c: 45: PIE3 = 0;
  2674  0014AC  0E00               	movlw	0
  2675  0014AE  6EA3               	movwf	4003,c	;volatile
  2676                           
  2677                           ;uart.c: 46: PIE3bits.RC2IE = 1;
  2678  0014B0  8AA3               	bsf	4003,5,c	;volatile
  2679                           
  2680                           ;uart.c: 48: INTCONbits.GIE = 1;
  2681  0014B2  8EF2               	bsf	intcon,7,c	;volatile
  2682  0014B4  0012               	return		;funcret
  2683  0014B6                     __end_ofi2_start_uart_rx:
  2684                           	opt stack 0
  2685                           pclatu	equ	0xFFB
  2686                           pclath	equ	0xFFA
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           prodh	equ	0xFF4
  2692                           prodl	equ	0xFF3
  2693                           intcon	equ	0xFF2
  2694                           postinc0	equ	0xFEE
  2695                           fsr0h	equ	0xFEA
  2696                           fsr0l	equ	0xFE9
  2697                           wreg	equ	0xFE8
  2698                           postdec1	equ	0xFE5
  2699                           fsr1h	equ	0xFE2
  2700                           fsr1l	equ	0xFE1
  2701                           indf2	equ	0xFDF
  2702                           postinc2	equ	0xFDE
  2703                           fsr2h	equ	0xFDA
  2704                           fsr2l	equ	0xFD9
  2705                           status	equ	0xFD8
  2706                           
  2707 ;; *************** function i2_disable_uart_rx_int *****************
  2708 ;; Defined at:
  2709 ;;		line 56 in file "uart.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		None
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_isr
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text17
  2737  001512                     __ptext17:
  2738                           	opt stack 0
  2739  001512                     i2_disable_uart_rx_int:
  2740                           	opt stack 26
  2741                           
  2742                           ;uart.c: 58: RC2IE = 0;
  2743                           
  2744                           ;incstack = 0
  2745  001512  9AA3               	bcf	4003,5,c	;volatile
  2746                           
  2747                           ;uart.c: 59: PIE3 = pie3SaveBits;
  2748  001514  C020  FFA3         	movff	_pie3SaveBits,4003	;volatile
  2749                           
  2750                           ;uart.c: 60: INTCON = intconSaveBits;
  2751  001518  C021  FFF2         	movff	_intconSaveBits,intcon	;volatile
  2752  00151C  0012               	return		;funcret
  2753  00151E                     __end_ofi2_disable_uart_rx_int:
  2754                           	opt stack 0
  2755                           pclatu	equ	0xFFB
  2756                           pclath	equ	0xFFA
  2757                           tblptru	equ	0xFF8
  2758                           tblptrh	equ	0xFF7
  2759                           tblptrl	equ	0xFF6
  2760                           tablat	equ	0xFF5
  2761                           prodh	equ	0xFF4
  2762                           prodl	equ	0xFF3
  2763                           intcon	equ	0xFF2
  2764                           postinc0	equ	0xFEE
  2765                           fsr0h	equ	0xFEA
  2766                           fsr0l	equ	0xFE9
  2767                           wreg	equ	0xFE8
  2768                           postdec1	equ	0xFE5
  2769                           fsr1h	equ	0xFE2
  2770                           fsr1l	equ	0xFE1
  2771                           indf2	equ	0xFDF
  2772                           postinc2	equ	0xFDE
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8
  2776                           
  2777 ;; *************** function _reload_timer0 *****************
  2778 ;; Defined at:
  2779 ;;		line 230 in file "main.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_isr
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text18
  2807  00151E                     __ptext18:
  2808                           	opt stack 0
  2809  00151E                     _reload_timer0:
  2810                           	opt stack 26
  2811                           
  2812                           ;main.c: 232: TMR0L = ((65535-781)%256);
  2813                           
  2814                           ;incstack = 0
  2815  00151E  0EF2               	movlw	242
  2816  001520  6ED6               	movwf	4054,c	;volatile
  2817                           
  2818                           ;main.c: 233: TMR0H = ((65535-781)/256);
  2819  001522  0EFC               	movlw	252
  2820  001524  6ED7               	movwf	4055,c	;volatile
  2821  001526  0012               	return		;funcret
  2822  001528                     __end_of_reload_timer0:
  2823                           	opt stack 0
  2824                           pclatu	equ	0xFFB
  2825                           pclath	equ	0xFFA
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           postinc0	equ	0xFEE
  2834                           fsr0h	equ	0xFEA
  2835                           fsr0l	equ	0xFE9
  2836                           wreg	equ	0xFE8
  2837                           postdec1	equ	0xFE5
  2838                           fsr1h	equ	0xFE2
  2839                           fsr1l	equ	0xFE1
  2840                           indf2	equ	0xFDF
  2841                           postinc2	equ	0xFDE
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _disable_tmr3 *****************
  2847 ;; Defined at:
  2848 ;;		line 211 in file "main.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_isr
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text19
  2876  0014EC                     __ptext19:
  2877                           	opt stack 0
  2878  0014EC                     _disable_tmr3:
  2879                           	opt stack 26
  2880                           
  2881                           ;main.c: 213: buttonPressCount = 0;
  2882                           
  2883                           ;incstack = 0
  2884  0014EC  0E00               	movlw	0
  2885  0014EE  6E27               	movwf	_buttonPressCount,c
  2886                           
  2887                           ;main.c: 214: tmr3_cnt = 0;
  2888  0014F0  0E00               	movlw	0
  2889  0014F2  6E24               	movwf	_tmr3_cnt,c
  2890                           
  2891                           ;main.c: 215: T3CONbits.TMR3ON = 0;
  2892  0014F4  90B1               	bcf	4017,0,c	;volatile
  2893                           
  2894                           ;main.c: 216: PIE2bits.TMR3IE = 0;
  2895  0014F6  92A0               	bcf	4000,1,c	;volatile
  2896  0014F8  0012               	return		;funcret
  2897  0014FA                     __end_of_disable_tmr3:
  2898                           	opt stack 0
  2899                           pclatu	equ	0xFFB
  2900                           pclath	equ	0xFFA
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           prodh	equ	0xFF4
  2906                           prodl	equ	0xFF3
  2907                           intcon	equ	0xFF2
  2908                           postinc0	equ	0xFEE
  2909                           fsr0h	equ	0xFEA
  2910                           fsr0l	equ	0xFE9
  2911                           wreg	equ	0xFE8
  2912                           postdec1	equ	0xFE5
  2913                           fsr1h	equ	0xFE2
  2914                           fsr1l	equ	0xFE1
  2915                           indf2	equ	0xFDF
  2916                           postinc2	equ	0xFDE
  2917                           fsr2h	equ	0xFDA
  2918                           fsr2l	equ	0xFD9
  2919                           status	equ	0xFD8
  2920                           
  2921 ;; *************** function _control_leds *****************
  2922 ;; Defined at:
  2923 ;;		line 92 in file "state.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:        0 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_isr
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text20
  2951  0011A8                     __ptext20:
  2952                           	opt stack 0
  2953  0011A8                     _control_leds:
  2954                           	opt stack 26
  2955                           
  2956                           ;state.c: 94: switch (state)
  2957                           
  2958                           ;incstack = 0
  2959  0011A8  D057               	goto	i2l804
  2960  0011AA                     
  2961                           ;state.c: 97: if (waiting)
  2962  0011AA  5035               	movf	_waiting,w,c
  2963  0011AC  B4D8               	btfsc	status,2,c
  2964  0011AE  0012               	return	
  2965  0011B0  D007               	goto	i2l807
  2966  0011B2                     i2l808:
  2967                           
  2968                           ;state.c: 102: LATBbits.LB3=0;
  2969  0011B2  968A               	bcf	3978,3,c	;volatile
  2970                           
  2971                           ;state.c: 103: break;
  2972  0011B4  D00F               	goto	i2l809
  2973  0011B6                     i2l810:
  2974                           
  2975                           ;state.c: 105: LATBbits.LB3=1;
  2976  0011B6  868A               	bsf	3978,3,c	;volatile
  2977                           
  2978                           ;state.c: 106: break;
  2979  0011B8  D00D               	goto	i2l809
  2980  0011BA                     
  2981                           ;state.c: 108: gled_tmr0_tick = 0;
  2982  0011BA  0E00               	movlw	0
  2983  0011BC  6E26               	movwf	_gled_tmr0_tick,c
  2984                           
  2985                           ;state.c: 110: }
  2986                           
  2987                           ;state.c: 109: break;
  2988  0011BE  D00A               	goto	i2l809
  2989  0011C0                     i2l807:
  2990  0011C0  5026               	movf	_gled_tmr0_tick,w,c
  2991                           
  2992                           ; Switch size 1, requested type "space"
  2993                           ; Number of cases is 3, Range of values is 1 to 20
  2994                           ; switch strategies available:
  2995                           ; Name         Instructions Cycles
  2996                           ; simple_byte           10     6 (average)
  2997                           ;	Chosen strategy is simple_byte
  2998  0011C2  0A01               	xorlw	1	; case 1
  2999  0011C4  B4D8               	btfsc	status,2,c
  3000  0011C6  D7F5               	goto	i2l808
  3001  0011C8  0A04               	xorlw	4	; case 5
  3002  0011CA  B4D8               	btfsc	status,2,c
  3003  0011CC  D7F4               	goto	i2l810
  3004  0011CE  0A11               	xorlw	17	; case 20
  3005  0011D0  B4D8               	btfsc	status,2,c
  3006  0011D2  D7F3               	goto	i2l811
  3007  0011D4                     i2l809:
  3008                           
  3009                           ;state.c: 111: LATCbits.LC4=1;
  3010  0011D4  888B               	bsf	3979,4,c	;volatile
  3011                           
  3012                           ;state.c: 112: bled_tmr0_tick = 0;
  3013  0011D6  0E00               	movlw	0
  3014  0011D8  6E25               	movwf	_bled_tmr0_tick,c
  3015                           
  3016                           ;state.c: 113: }
  3017                           ;state.c: 114: break;
  3018  0011DA  0012               	return	
  3019  0011DC                     i2l815:
  3020                           
  3021                           ;state.c: 120: LATCbits.LC4=0;
  3022  0011DC  988B               	bcf	3979,4,c	;volatile
  3023                           
  3024                           ;state.c: 121: break;
  3025  0011DE  D00B               	goto	i2l816
  3026  0011E0                     i2l817:
  3027                           
  3028                           ;state.c: 123: LATCbits.LC4=1;
  3029  0011E0  888B               	bsf	3979,4,c	;volatile
  3030                           
  3031                           ;state.c: 124: bled_tmr0_tick = 0;
  3032  0011E2  0E00               	movlw	0
  3033  0011E4  6E25               	movwf	_bled_tmr0_tick,c
  3034                           
  3035                           ;state.c: 126: }
  3036                           
  3037                           ;state.c: 125: break;
  3038  0011E6  D007               	goto	i2l816
  3039  0011E8  5025               	movf	_bled_tmr0_tick,w,c
  3040                           
  3041                           ; Switch size 1, requested type "space"
  3042                           ; Number of cases is 2, Range of values is 1 to 2
  3043                           ; switch strategies available:
  3044                           ; Name         Instructions Cycles
  3045                           ; simple_byte            7     4 (average)
  3046                           ;	Chosen strategy is simple_byte
  3047  0011EA  0A01               	xorlw	1	; case 1
  3048  0011EC  B4D8               	btfsc	status,2,c
  3049  0011EE  D7F6               	goto	i2l815
  3050  0011F0  0A03               	xorlw	3	; case 2
  3051  0011F2  B4D8               	btfsc	status,2,c
  3052  0011F4  D7F5               	goto	i2l817
  3053  0011F6                     i2l816:
  3054                           
  3055                           ;state.c: 127: LATBbits.LB3=1;
  3056  0011F6  868A               	bsf	3978,3,c	;volatile
  3057                           
  3058                           ;state.c: 128: gled_tmr0_tick = 0;
  3059  0011F8  0E00               	movlw	0
  3060  0011FA  6E26               	movwf	_gled_tmr0_tick,c
  3061                           
  3062                           ;state.c: 129: break;
  3063  0011FC  0012               	return	
  3064  0011FE                     
  3065                           ;state.c: 132: learn_timer_tick++;
  3066  0011FE  4A1B               	infsnz	_learn_timer_tick,f,c
  3067  001200  2A1C               	incf	_learn_timer_tick+1,f,c
  3068                           
  3069                           ;state.c: 133: switch (bled_tmr0_tick)
  3070  001202  D007               	goto	i2l819
  3071  001204                     i2l820:
  3072                           
  3073                           ;state.c: 136: LATCbits.LC4=0;
  3074  001204  988B               	bcf	3979,4,c	;volatile
  3075                           
  3076                           ;state.c: 137: break;
  3077  001206  D00F               	goto	i2l821
  3078  001208                     i2l822:
  3079                           
  3080                           ;state.c: 139: LATCbits.LC4=1;
  3081  001208  888B               	bsf	3979,4,c	;volatile
  3082                           
  3083                           ;state.c: 140: break;
  3084  00120A  D00D               	goto	i2l821
  3085  00120C                     
  3086                           ;state.c: 142: bled_tmr0_tick = 0;
  3087  00120C  0E00               	movlw	0
  3088  00120E  6E25               	movwf	_bled_tmr0_tick,c
  3089                           
  3090                           ;state.c: 144: }
  3091                           
  3092                           ;state.c: 143: break;
  3093  001210  D00A               	goto	i2l821
  3094  001212                     i2l819:
  3095  001212  5025               	movf	_bled_tmr0_tick,w,c
  3096                           
  3097                           ; Switch size 1, requested type "space"
  3098                           ; Number of cases is 3, Range of values is 1 to 20
  3099                           ; switch strategies available:
  3100                           ; Name         Instructions Cycles
  3101                           ; simple_byte           10     6 (average)
  3102                           ;	Chosen strategy is simple_byte
  3103  001214  0A01               	xorlw	1	; case 1
  3104  001216  B4D8               	btfsc	status,2,c
  3105  001218  D7F5               	goto	i2l820
  3106  00121A  0A04               	xorlw	4	; case 5
  3107  00121C  B4D8               	btfsc	status,2,c
  3108  00121E  D7F4               	goto	i2l822
  3109  001220  0A11               	xorlw	17	; case 20
  3110  001222  B4D8               	btfsc	status,2,c
  3111  001224  D7F3               	goto	i2l823
  3112  001226                     i2l821:
  3113                           
  3114                           ;state.c: 145: LATBbits.LB3=0;
  3115  001226  968A               	bcf	3978,3,c	;volatile
  3116                           
  3117                           ;state.c: 146: gled_tmr0_tick = 0;
  3118  001228  0E00               	movlw	0
  3119  00122A  6E26               	movwf	_gled_tmr0_tick,c
  3120                           
  3121                           ;state.c: 147: break;
  3122  00122C  0012               	return	
  3123  00122E                     i2l826:
  3124                           
  3125                           ;state.c: 153: LATBbits.LB3=0;
  3126  00122E  968A               	bcf	3978,3,c	;volatile
  3127                           
  3128                           ;state.c: 154: break;
  3129  001230  D00F               	goto	i2l827
  3130  001232                     i2l828:
  3131                           
  3132                           ;state.c: 156: LATBbits.LB3=1;
  3133  001232  868A               	bsf	3978,3,c	;volatile
  3134                           
  3135                           ;state.c: 157: break;
  3136  001234  D00D               	goto	i2l827
  3137  001236                     
  3138                           ;state.c: 159: gled_tmr0_tick = 0;
  3139  001236  0E00               	movlw	0
  3140  001238  6E26               	movwf	_gled_tmr0_tick,c
  3141                           
  3142                           ;state.c: 161: }
  3143                           
  3144                           ;state.c: 160: break;
  3145  00123A  D00A               	goto	i2l827
  3146  00123C  5026               	movf	_gled_tmr0_tick,w,c
  3147                           
  3148                           ; Switch size 1, requested type "space"
  3149                           ; Number of cases is 3, Range of values is 1 to 20
  3150                           ; switch strategies available:
  3151                           ; Name         Instructions Cycles
  3152                           ; simple_byte           10     6 (average)
  3153                           ;	Chosen strategy is simple_byte
  3154  00123E  0A01               	xorlw	1	; case 1
  3155  001240  B4D8               	btfsc	status,2,c
  3156  001242  D7F5               	goto	i2l826
  3157  001244  0A04               	xorlw	4	; case 5
  3158  001246  B4D8               	btfsc	status,2,c
  3159  001248  D7F4               	goto	i2l828
  3160  00124A  0A11               	xorlw	17	; case 20
  3161  00124C  B4D8               	btfsc	status,2,c
  3162  00124E  D7F3               	goto	i2l829
  3163  001250                     i2l827:
  3164                           
  3165                           ;state.c: 162: LATCbits.LC4=0;
  3166  001250  988B               	bcf	3979,4,c	;volatile
  3167                           
  3168                           ;state.c: 163: bled_tmr0_tick = 0;
  3169  001252  0E00               	movlw	0
  3170  001254  6E25               	movwf	_bled_tmr0_tick,c
  3171                           
  3172                           ;state.c: 165: }
  3173                           
  3174                           ;state.c: 164: break;
  3175  001256  0012               	return	
  3176  001258                     i2l804:
  3177  001258  5022               	movf	_state,w,c
  3178                           
  3179                           ; Switch size 1, requested type "space"
  3180                           ; Number of cases is 4, Range of values is 0 to 3
  3181                           ; switch strategies available:
  3182                           ; Name         Instructions Cycles
  3183                           ; simple_byte           13     7 (average)
  3184                           ;	Chosen strategy is simple_byte
  3185  00125A  0A00               	xorlw	0	; case 0
  3186  00125C  B4D8               	btfsc	status,2,c
  3187  00125E  D7A5               	goto	i2l805
  3188  001260  0A01               	xorlw	1	; case 1
  3189  001262  B4D8               	btfsc	status,2,c
  3190  001264  D7C1               	goto	i2l814
  3191  001266  0A03               	xorlw	3	; case 2
  3192  001268  B4D8               	btfsc	status,2,c
  3193  00126A  D7C9               	goto	i2l818
  3194  00126C  0A01               	xorlw	1	; case 3
  3195  00126E  A4D8               	btfss	status,2,c
  3196  001270  0012               	return	
  3197  001272  D7E4               	goto	i2l825
  3198  001274                     __end_of_control_leds:
  3199                           	opt stack 0
  3200                           pclatu	equ	0xFFB
  3201                           pclath	equ	0xFFA
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           prodh	equ	0xFF4
  3207                           prodl	equ	0xFF3
  3208                           intcon	equ	0xFF2
  3209                           postinc0	equ	0xFEE
  3210                           fsr0h	equ	0xFEA
  3211                           fsr0l	equ	0xFE9
  3212                           wreg	equ	0xFE8
  3213                           postdec1	equ	0xFE5
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           fsr2h	equ	0xFDA
  3219                           fsr2l	equ	0xFD9
  3220                           status	equ	0xFD8
  3221                           pclatu	equ	0xFFB
  3222                           pclath	equ	0xFFA
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           postinc0	equ	0xFEE
  3231                           fsr0h	equ	0xFEA
  3232                           fsr0l	equ	0xFE9
  3233                           wreg	equ	0xFE8
  3234                           postdec1	equ	0xFE5
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243                           	psect	rparam
  3244  0000                     pclatu	equ	0xFFB
  3245                           pclath	equ	0xFFA
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           prodh	equ	0xFF4
  3251                           prodl	equ	0xFF3
  3252                           intcon	equ	0xFF2
  3253                           postinc0	equ	0xFEE
  3254                           fsr0h	equ	0xFEA
  3255                           fsr0l	equ	0xFE9
  3256                           wreg	equ	0xFE8
  3257                           postdec1	equ	0xFE5
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           postinc2	equ	0xFDE
  3262                           fsr2h	equ	0xFDA
  3263                           fsr2l	equ	0xFD9
  3264                           status	equ	0xFD8
  3265                           
  3266                           	psect	temp
  3267  000037                     btemp:
  3268                           	opt stack 0
  3269  000037                     	ds	1
  3270  0000                     int$flags	set	btemp
  3271  0000                     wtemp6	set	btemp+1
  3272                           pclatu	equ	0xFFB
  3273                           pclath	equ	0xFFA
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           intcon	equ	0xFF2
  3281                           postinc0	equ	0xFEE
  3282                           fsr0h	equ	0xFEA
  3283                           fsr0l	equ	0xFE9
  3284                           wreg	equ	0xFE8
  3285                           postdec1	equ	0xFE5
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           indf2	equ	0xFDF
  3289                           postinc2	equ	0xFDE
  3290                           fsr2h	equ	0xFDA
  3291                           fsr2l	equ	0xFD9
  3292                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    126
    Data        7
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      54
    BANK0           160      0     148
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    add_sensor@id	PTR unsigned char  size(2) Largest target is 6
		 -> RS232Buf(COMRAM[6]), 

    alreadyLearned@id	PTR unsigned char  size(2) Largest target is 6
		 -> RS232Buf(COMRAM[6]), 

    rx_uart_write@data	PTR unsigned char  size(2) Largest target is 6
		 -> RS232Buf(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_check_state
    _check_state->_add_sensor
    _check_state->_alreadyLearned
    _check_state->_rx_uart_write
    _rx_uart_write->_rx_uart_transmit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1057
                        _check_state
                           _init_pic
                       _init_uart_md
                       _init_uart_rx
 ---------------------------------------------------------------------------------
 (1) _init_uart_rx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_md                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0       0
                        _enable_ints
 ---------------------------------------------------------------------------------
 (2) _enable_ints                                          0     0      0       0
                       _start_timer0
 ---------------------------------------------------------------------------------
 (3) _start_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_state                                          2     2      0    1057
                                             24 COMRAM     2     2      0
                         _add_sensor
                     _alreadyLearned
                _disable_uart_rx_int
                  _reload_tmr3_pt25s
                      _rx_uart_write
                      _start_uart_rx
                       _stop_uart_rx
 ---------------------------------------------------------------------------------
 (2) _start_uart_rx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rx_uart_write                                        5     2      3     411
                                             19 COMRAM     5     2      3
                   _rx_uart_transmit
                       _stop_uart_rx
 ---------------------------------------------------------------------------------
 (2) _stop_uart_rx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rx_uart_transmit                                     1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _reload_tmr3_pt25s                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_uart_rx_int                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _alreadyLearned                                       6     3      3     335
                                             18 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _add_sensor                                           6     3      3     243
                                             18 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 18    18      0       0
                                              0 COMRAM    18    18      0
                       _control_leds
                       _disable_tmr3
                      _reload_timer0
              i2_disable_uart_rx_int
                    i2_start_uart_rx
 ---------------------------------------------------------------------------------
 (5) i2_start_uart_rx                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i2_disable_uart_rx_int                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _reload_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _disable_tmr3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _control_leds                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_state
     _add_sensor
     _alreadyLearned
     _disable_uart_rx_int
     _reload_tmr3_pt25s
     _rx_uart_write
       _rx_uart_transmit
       _stop_uart_rx
     _start_uart_rx
     _stop_uart_rx
   _init_pic
     _enable_ints
       _start_timer0
   _init_uart_md
   _init_uart_rx

 _isr (ROOT)
   _control_leds
   _disable_tmr3
   _reload_timer0
   i2_disable_uart_rx_int
   i2_start_uart_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      36       1       57.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      12        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 16 17:27:15 2018

                 ??_disable_tmr3 0001            __size_of_start_timer0 0014  
          _default_SMS_WAIT_TIME 1076                      __CFG_CP0$ON 000000  
                    __CFG_CP1$ON 000000                      __CFG_CP2$ON 000000  
                    __CFG_CP3$ON 000000                      __CFG_CPB$ON 000000  
                             _RD 007D30                      __CFG_CPD$ON 000000  
                             _WR 007D31           __size_of_start_uart_rx 0020  
                            l177 14D6                              l564 13F6  
                            l565 13DE                              l861 12EE  
                            l781 1190                              l854 12F0  
                            l782 1082                              l855 1286  
                            l783 10B2                              l792 1100  
                            l784 10AE                              l865 1350  
                            l857 12EC                              l858 12E6  
                            l794 1106                              l786 10CA  
                            l867 1384                              l795 1176  
                            l787 10DC                              l868 1356  
                            l796 114A                              l788 10E0  
                            l797 115A                              l789 10F6  
                            _GIE 007F97                              _isr 0008  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAC                       _TXSTA2bits 000F72  
   __end_ofwakeup_modem_ok@F6763 1060     __end_ofwakeup_modem_ok@F6765 1021  
         __size_of_rx_uart_write 002E             __end_of_default_ACCT 1055  
               _rx_uart_transmit 14FA                     __CFG_LVP$OFF 000000  
                           l1501 14FC                             l2515 1152  
                           ?_isr 0001                             _CFGS 007D36  
                           u1310 1172                             u1567 1096  
                           u1577 10B8                             _PIE3 000FA3  
                           _WREN 007D32                             _main 14CA  
             _buttonStillPressed 001D                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0037                     _start_timer0 14B6  
                  __CFG_BORV$190 000000                             prodh 000FF4  
                           prodl 000FF3                             start 01AC  
                  __CFG_IESO$OFF 000000            __end_of_default_CYCLE 1079  
                   ___param_bank 000000            __end_of_default_RETRY 1078  
          __end_of_default_PORT1 106B            __end_of_default_PORT2 1069  
          __end_of_default_PORT3 1067            __end_of_default_PORT4 1065  
          __end_of_default_ZONE1 107C            __end_of_default_ZONE2 107B  
                          ??_isr 0001     __size_of_disable_uart_rx_int 000C  
                   _BAUDCON1bits 000FB8      __end_of_default_PROGRAM_ACK 107F  
                  ?_control_leds 0001                            ?_main 0001  
                          _EEADR 000FA9                   _default_TP_PIN 1079  
                          _EEPGD 007D37                            _CREN1 007D5C  
                          _CREN2 007B8C                            _T0CON 000FD5  
          __size_of_stop_uart_rx 0004                            _T3CON 000FB1  
                          _RC1IE 007CED                            _RC1IF 007CF5  
                          _RC2IE 007D1D                            _RC2IF 007D25  
                          i2l151 0064                            i2l160 00BA  
                          i2l153 010E                            i2l162 00D6  
                          i2l171 0160                            i2l164 00EE  
                          i2l166 0108                            i2l158 00A0  
                          i2l168 012C                            i2l810 11B6  
                          i2l811 11BA                            i2l804 1258  
                          i2l820 1204                            i2l821 1226  
                          i2l805 11AA                            i2l822 1208  
                          i2l814 11E8                            i2l823 120C  
                          i2l815 11DC                            i2l807 11C0  
                          i2l816 11F6                            i2l808 11B2  
                          i2l825 123C                            i2l817 11E0  
                          i2l809 11D4                            i2l826 122E  
                          i2l818 11FE                            i2l827 1250  
                          i2l819 1212                            i2l828 1232  
                          i2l829 1236                            _TMR0H 000FD7  
                          _TMR0L 000FD6                            _TMR3H 000FB3  
                          _TMR3L 000FB2                            _TRMT1 007D61  
                          _TRMT2 007B91                            _WPUB5 007B0D  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000             __size_of_check_state 0128  
             __CFG_MCLRE$INTMCLR 000000                            _state 0022  
          i2_disable_uart_rx_int 1512                    _start_uart_rx 1476  
                          pclath 000FFA                            tablat 000FF5  
                          status 000FD8                            wtemp6 0038  
                 __CFG_HFOFST$ON 000000                    _rx_uart_write 13D6  
                __initialization 1390         __size_ofi2_start_uart_rx 0020  
                   __end_of_main 14DC                     _stop_uart_rx 1530  
          __end_of_reload_timer0 1528    __end_ofinit_modem_io_ok@F6772 1011  
  __end_ofinit_modem_io_ok@F6774 104F    __end_ofinit_modem_io_ok@F6776 103A  
         __end_of_default_TP_PIN 107A                   ??_control_leds 0001  
                 _bled_tmr0_tick 0025                           ??_main 001B  
                  __activetblptr 000002             __size_of_enable_ints 002C  
           __end_of_disable_tmr3 14FA                           _EEADRH 000FAA  
                         _EEDATA 000FA8                           _EECON2 000FA7  
                 ?_start_uart_rx 0001                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                 _learnedSensors 0060                           _RC1REG 000FAE  
                         _RC2REG 000F74                           _RC2STA 000F71  
                         _INTCON 000FF2                           _TMR0IE 007F95  
                         _SPBRG1 000FAF                           _TMR0IF 007F92  
                         _SPBRG2 000F75                           _TMR3IF 007D09  
                 __CFG_WDTPS$256 000000                           _TMR3ON 007D88  
                         _TX1REG 000FAD                           _TX2REG 000F73  
                 ?_rx_uart_write 0014                    ?_init_uart_md 0001  
                  ?_init_uart_rx 0001         alreadyLearned@numIdBytes 0015  
                 __CFG_XINST$OFF 000000             wakeup_modem_ok@F6763 105B  
           wakeup_modem_ok@F6765 1011                   __CFG_STVREN$ON 000000  
               __end_of_init_pic 1348                           clear_0 13B6  
                         clear_1 13C2             add_sensor@numIdBytes 0015  
             _default_ENCRYPTION 1075                           _rx_pos 0023  
                   __pdataCOMRAM 0030                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8           ?i2_disable_uart_rx_int 0001  
        __size_of_alreadyLearned 0088                 rx_uart_write@len 0016  
            _default_ACCESS_CODE 1055                       __accesstop 0060  
        __end_of__initialization 13C8                  __CFG_PBADEN$OFF 000000  
                 ??_init_uart_md 0013                    ___rparam_used 000001  
                 ??_init_uart_rx 0013         __end_of_rx_uart_transmit 1506  
                   _default_ACCT 104F                   __pcstackCOMRAM 0001  
                     _add_sensor 1348                ??i2_start_uart_rx 0001  
                ??_start_uart_rx 0013              _disable_uart_rx_int 1506  
                     __pbssBANK0 0060                  __CFG_PLLCFG$OFF 000000  
           __end_of_control_leds 1274                  ??_rx_uart_write 0017  
             __CFG_CCP2MX$PORTC1 000000               __CFG_CCP3MX$PORTB5 000000  
           ?_disable_uart_rx_int 0001            __size_of_disable_tmr3 000E  
                __CFG_WDTEN$SWON 000000                          i2u26_40 007E  
                        i2u27_40 0084                          i2u37_40 0100  
                        i2u38_40 0102                          _SPBRGH1 000FB0  
                        _SPBRGH2 000F76                          _VERSION 0030  
                   _inButtonMenu 0029                     add_sensor@id 0013  
                      ?_init_pic 0001                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
          ??_disable_uart_rx_int 0013                     _disable_tmr3 14EC  
                   __psmallconst 1000                      ?_add_sensor 0013  
                        __pcinit 1390                          __ramtop 1000  
                        __ptext0 14CA                          __ptext1 1456  
                        __ptext2 1430                          __ptext3 12FC  
                        __ptext4 1404                          __ptext5 14B6  
                        __ptext6 1080                          __ptext7 1476  
                        __ptext8 13D6                          __ptext9 1530  
                   __size_of_isr 01A4                        _T3CONbits 000FB1  
           __end_of_init_uart_md 1456             __end_of_init_uart_rx 1476  
                  ??_check_state 0019                 sim_card_ok@F6781 103A  
               sim_card_ok@F6783 1021          _default_SERVER_ACK_TIME 107C  
                        _waiting 0035                   _alreadyLearned 1274  
           end_of_initialization 13C8                    __Lmediumconst 0000  
                     ??_init_pic 0013                     _pie3SaveBits 0020  
                        postdec1 000FE5                          postinc0 000FEE  
                        postinc2 000FDE                 _buttonPressCount 0027  
              rx_uart_write@data 0014            init_modem_io_ok@F6772 1001  
          init_modem_io_ok@F6774 1045            init_modem_io_ok@F6776 102E  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
                      _PORTCbits 000F82                    ??_enable_ints 0013  
        ??i2_disable_uart_rx_int 0001                 __CFG_FOSC$INTIO7 000000  
         __end_of_alreadyLearned 12FC                        _TRISAbits 000F92  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
          __size_of_control_leds 00CC                    _rxDataPending 0028  
         __size_of_reload_timer0 000A              __end_of_check_state 11A8  
            __end_of_default_APN 1075              __end_of_default_IP1 1073  
            __end_of_default_IP2 1071              __end_of_default_IP3 106F  
            __end_of_default_IP4 106D              __size_of_add_sensor 0048  
                i2_start_uart_rx 1496                ?_rx_uart_transmit 0001  
                  _default_CYCLE 1078                    _default_RETRY 1077  
                  _default_PORT1 1069                    _default_PORT2 1067  
                  _default_PORT3 1065                    _default_PORT4 1063  
                  _default_ZONE1 107B                    _default_ZONE2 107A  
             ??_rx_uart_transmit 0013                      _BAUDCONbits 000FB8  
                  __pidataCOMRAM 1528                     _control_leds 11A8  
                ?_alreadyLearned 0013              start_initialization 1390  
                    __end_of_isr 01AC              __end_of_enable_ints 1430  
                  ?_start_timer0 0001                    _reload_timer0 151E  
          __size_of_init_uart_md 0026            __size_of_init_uart_rx 0020  
           rx_uart_transmit@data 0013                      __pbssCOMRAM 001B  
                    _check_state 1080                _default_LINE_CARD 1060  
                    _default_APN 1073                      _default_IP1 1071  
                    _default_IP2 106F                      _default_IP3 106D  
                    _default_IP4 106B            __end_of_start_uart_rx 1496  
        __end_ofi2_start_uart_rx 14B6                 alreadyLearned@id 0013  
                 ??_start_timer0 0013  __end_of_default_SERVER_ACK_TIME 107D  
          __end_of_rx_uart_write 1404      __end_of_default_ACCESS_CODE 105B  
                   check_state@i 001A                __size_of_init_pic 004C  
                   _init_uart_md 1430    __end_of_default_SMS_WAIT_TIME 1077  
                   _init_uart_rx 1456         __end_ofsim_card_ok@F6781 1045  
       __end_ofsim_card_ok@F6783 102E                    ?_stop_uart_rx 0001  
                      __pintcode 0008              _default_PROGRAM_ACK 107E  
              _default_TEST_FREQ 107D                   ?_reload_timer0 0001  
                   ??_add_sensor 0016                 __CFG_PRICLKEN$ON 000000  
      __end_of_default_LINE_CARD 1063                      __smallconst 1000  
                    add_sensor@i 0018                         _BAUDCON2 000F70  
                    _enable_ints 1404                 _learnedSensorPtr 001E  
                       _IOCBbits 000F62                         _LATAbits 000F89  
                       _LATBbits 000F8A                         _LATCbits 000F8B  
                       _RS232Buf 002A               __end_of_add_sensor 1390  
                       _PIE2bits 000FA0                         _PIE3bits 000FA3  
    __end_of_disable_uart_rx_int 1512        __end_of_default_TEST_FREQ 107E  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                 ??_stop_uart_rx 0013                _reload_tmr3_pt25s 14DC  
                      _returnStr 0090                        _toggleLED 0036  
             ?_reload_tmr3_pt25s 0001         rx_uart_write@currentChar 0017  
            ??_reload_tmr3_pt25s 0013   __size_ofi2_disable_uart_rx_int 000C  
  __end_ofi2_disable_uart_rx_int 151E                        copy_data0 13A4  
          alreadyLearned@pointer 0017                 ?i2_start_uart_rx 0001  
                 _intconSaveBits 0021                         __Hrparam 0000  
      __end_of_reload_tmr3_pt25s 14EC                  ??_reload_timer0 0001  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTB5 000000                 ??_alreadyLearned 0016  
           __end_of_start_timer0 14CA                  alreadyLearned@i 0018  
                 _gled_tmr0_tick 0026        __size_of_rx_uart_transmit 000C  
                       __ptext10 14FA                         __ptext11 14DC  
                       __ptext20 11A8                         __ptext12 1506  
                       __ptext13 1274                         __ptext14 1348  
                       __ptext16 1496                         __ptext17 1512  
                       __ptext18 151E                         __ptext19 14EC  
               _learn_timer_tick 001B                    __size_of_main 0012  
                       _init_pic 12FC                   _saveINTCONbits 001F  
                       _tmr3_cnt 0024                       _RC1STAbits 000FAB  
                     _RC2STAbits 000F71                         int$flags 0037  
                     _INTCONbits 000FF2                     ?_check_state 0001  
           __end_of_stop_uart_rx 1534                         intlevel2 0000  
                     _RCSTA1bits 000FAB       __end_of_default_ENCRYPTION 1076  
                     _OSCCONbits 000FD3       __size_of_reload_tmr3_pt25s 0010  
                  ?_disable_tmr3 0001                     ?_enable_ints 0001  
             rx_uart_write@index 0018                __CFG_T3CMX$PORTC0 000000  
                     _TX2STAbits 000F72  
